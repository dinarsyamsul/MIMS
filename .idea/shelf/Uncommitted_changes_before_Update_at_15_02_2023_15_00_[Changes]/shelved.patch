Index: .idea/shelf/Uncommitted_changes_before_Update_at_02_02_2023_06_10__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2023_06_10__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2023_06_10__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2023_06_10__Changes_.xml	(revision a40739690a5cf9f3583858f04676efc341057919)
+++ /dev/null	(revision a40739690a5cf9f3583858f04676efc341057919)
@@ -1,9 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_02_02_2023_06_10_[Changes]" date="1675293093998" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2023_06_10_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 02/02/2023 06:10 [Changes]" />
-  <binary>
-    <option name="BEFORE_PATH" value="app/src/main/res/drawable/logoscan.png" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_02_02_2023_06_10_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2023_06_10_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2023_06_10_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2023_06_10_[Changes]/shelved.patch	(revision a40739690a5cf9f3583858f04676efc341057919)
+++ /dev/null	(revision a40739690a5cf9f3583858f04676efc341057919)
@@ -1,774 +0,0 @@
-Index: app/src/main/java/dev/iconpln/mims/MyApplication.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package dev.iconpln.mims\r\n\r\nimport android.content.pm.PackageManager\r\nimport android.os.Build\r\nimport androidx.multidex.MultiDexApplication\r\nimport dev.iconpln.mims.data.local.database.DaoMaster\r\nimport dev.iconpln.mims.data.local.database.DaoSession\r\nimport dev.iconpln.mims.data.local.database_local.DatabaseReport\r\nimport dev.iconpln.mims.utils.Config\r\nimport dev.iconpln.mims.utils.StorageUtils\r\n\r\nclass MyApplication : MultiDexApplication(){\r\n    var daoSession: DaoSession? = null\r\n\r\n    override fun onCreate() {\r\n        super.onCreate()\r\n\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n            if (checkSelfPermission(android.Manifest.permission.WRITE_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED) {\r\n                StorageUtils.createDirectories()\r\n                val database = StorageUtils.getDirectory(StorageUtils.DIRECTORY_DATABASE) + \"/\" + Config.DATABASE_NAME\r\n                val helper = DaoMaster.DevOpenHelper(this, database)\r\n                val db = helper.writableDb\r\n                daoSession = DaoMaster(db).newSession()\r\n                DatabaseReport.getDatabase(this)\r\n            }\r\n            // Otherwise, call DaoSession on LoginActivity\r\n        } else {\r\n            StorageUtils.createDirectories()\r\n            val database = StorageUtils.getDirectory(StorageUtils.DIRECTORY_DATABASE) + \"/\" + Config.DATABASE_NAME\r\n            val helper = DaoMaster.DevOpenHelper(this, database)\r\n            val db = helper.writableDb\r\n            daoSession = DaoMaster(db).newSession()\r\n            DatabaseReport.getDatabase(this)\r\n        }\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/dev/iconpln/mims/MyApplication.kt b/app/src/main/java/dev/iconpln/mims/MyApplication.kt
---- a/app/src/main/java/dev/iconpln/mims/MyApplication.kt	(revision 6e01942d95cef7d02a00aab00432386f5bb65c80)
-+++ b/app/src/main/java/dev/iconpln/mims/MyApplication.kt	(date 1675292991864)
-@@ -2,31 +2,22 @@
- 
- import android.content.pm.PackageManager
- import android.os.Build
-+import android.util.Log
- import androidx.multidex.MultiDexApplication
- import dev.iconpln.mims.data.local.database.DaoMaster
- import dev.iconpln.mims.data.local.database.DaoSession
- import dev.iconpln.mims.data.local.database_local.DatabaseReport
- import dev.iconpln.mims.utils.Config
- import dev.iconpln.mims.utils.StorageUtils
-+import dev.iconpln.mims.utils.StorageUtils.isPermissionAllowed
- 
- class MyApplication : MultiDexApplication(){
-     var daoSession: DaoSession? = null
- 
-     override fun onCreate() {
-         super.onCreate()
--
--        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
--            if (checkSelfPermission(android.Manifest.permission.WRITE_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED) {
--                StorageUtils.createDirectories()
--                val database = StorageUtils.getDirectory(StorageUtils.DIRECTORY_DATABASE) + "/" + Config.DATABASE_NAME
--                val helper = DaoMaster.DevOpenHelper(this, database)
--                val db = helper.writableDb
--                daoSession = DaoMaster(db).newSession()
--                DatabaseReport.getDatabase(this)
--            }
--            // Otherwise, call DaoSession on LoginActivity
--        } else {
--            StorageUtils.createDirectories()
-+        Log.i("PermissionGlobal","${isPermissionAllowed(this)}")
-+        if(isPermissionAllowed(this)){
-             val database = StorageUtils.getDirectory(StorageUtils.DIRECTORY_DATABASE) + "/" + Config.DATABASE_NAME
-             val helper = DaoMaster.DevOpenHelper(this, database)
-             val db = helper.writableDb
-Index: app/src/main/java/dev/iconpln/mims/utils/StorageUtils.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package dev.iconpln.mims.utils\r\n\r\nimport android.os.Environment\r\nimport java.io.File\r\n\r\nobject StorageUtils {\r\n    val DIRECTORY_ROOT = 1\r\n    val DIRECTORY_CACHE = 2\r\n    val DIRECTORY_IMAGE = 3\r\n    val DIRECTORY_REPORT_LOG = 4\r\n    val DIRECTORY_DATABASE = 5\r\n    val DIRECTORY_PDF = 6\r\n\r\n    fun getDirectory(directory: Int): String {\r\n        when (directory) {\r\n            DIRECTORY_ROOT -> return Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).toString() + \"/\" + Config.DIRECTORY_ROOT_NAME\r\n            DIRECTORY_CACHE -> return Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).toString() + \"/\" + Config.DIRECTORY_ROOT_NAME + \"/Caches\"\r\n            DIRECTORY_IMAGE -> return Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).toString() + \"/\" + Config.DIRECTORY_ROOT_NAME + \"/Images\"\r\n            DIRECTORY_REPORT_LOG -> return Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).toString() + \"/\" + Config.DIRECTORY_ROOT_NAME + \"/log_report.sys\"\r\n            DIRECTORY_DATABASE -> return Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).toString() + \"/\" + Config.DIRECTORY_ROOT_NAME + \"/Databases\"\r\n            DIRECTORY_PDF -> return Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).toString() + \"/\" + Config.DIRECTORY_ROOT_NAME + \"/Pdf\"\r\n\r\n\r\n//            DIRECTORY_ROOT -> return Environment.getExternalStoragePublicDirectory(\"\").toString() + \"/Android/media/\" + Config.DIRECTORY_ROOT_NAME\r\n//            DIRECTORY_CACHE -> return Environment.getExternalStoragePublicDirectory(\"\").toString() + \"/Android/media/\" + Config.DIRECTORY_ROOT_NAME + \"/Caches\"\r\n//            DIRECTORY_IMAGE -> return Environment.getExternalStoragePublicDirectory(\"\").toString() + \"/Android/media/\" + Config.DIRECTORY_ROOT_NAME + \"/Images\"\r\n//            DIRECTORY_REPORT_LOG -> return Environment.getExternalStoragePublicDirectory(\"\").toString() + \"/Android/media/\" + Config.DIRECTORY_ROOT_NAME + \"/log_report.sys\"\r\n//            DIRECTORY_DATABASE -> return Environment.getExternalStoragePublicDirectory(\"\").toString() + \"/Android/media/\" + Config.DIRECTORY_ROOT_NAME + \"/Databases\"\r\n            DIRECTORY_PDF -> return Environment.getExternalStoragePublicDirectory(\"\").toString() + \"/Android/media/\" + Config.DIRECTORY_ROOT_NAME + \"/Pdf\"\r\n\r\n            else -> return \"\"\r\n        }\r\n    }\r\n\r\n    fun createDirectories() {\r\n        val mainDirectory = File(getDirectory(DIRECTORY_ROOT))\r\n        val cacheDirectory = File(getDirectory(DIRECTORY_CACHE))\r\n        val imageDirectory = File(getDirectory(DIRECTORY_IMAGE))\r\n        val databaseDirectory = File(getDirectory(DIRECTORY_DATABASE))\r\n        val pdfDirectory = File(getDirectory(DIRECTORY_PDF))\r\n\r\n\r\n        if (!mainDirectory.exists()) {\r\n            mainDirectory.mkdir()\r\n        }\r\n        if (!cacheDirectory.exists()) {\r\n            cacheDirectory.mkdir()\r\n        }\r\n        if (!imageDirectory.exists()) {\r\n            imageDirectory.mkdir()\r\n        }\r\n        if (!databaseDirectory.exists()) {\r\n            databaseDirectory.mkdir()\r\n        }\r\n        if (!pdfDirectory.exists()) {\r\n            pdfDirectory.mkdir()\r\n        }\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/dev/iconpln/mims/utils/StorageUtils.kt b/app/src/main/java/dev/iconpln/mims/utils/StorageUtils.kt
---- a/app/src/main/java/dev/iconpln/mims/utils/StorageUtils.kt	(revision 6e01942d95cef7d02a00aab00432386f5bb65c80)
-+++ b/app/src/main/java/dev/iconpln/mims/utils/StorageUtils.kt	(date 1675292527091)
-@@ -1,6 +1,11 @@
- package dev.iconpln.mims.utils
- 
-+import android.Manifest
-+import android.content.Context
-+import android.content.pm.PackageManager
-+import android.os.Build
- import android.os.Environment
-+import androidx.core.content.ContextCompat
- import java.io.File
- 
- object StorageUtils {
-@@ -56,4 +61,16 @@
-             pdfDirectory.mkdir()
-         }
-     }
-+
-+    fun isPermissionAllowed(context: Context): Boolean {
-+        return if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.R) {
-+            Environment.isExternalStorageManager()
-+        } else {
-+            val result =
-+                ContextCompat.checkSelfPermission(context, Manifest.permission.READ_EXTERNAL_STORAGE)
-+            val result1 =
-+                ContextCompat.checkSelfPermission(context, Manifest.permission.WRITE_EXTERNAL_STORAGE)
-+            result == PackageManager.PERMISSION_GRANTED && result1 == PackageManager.PERMISSION_GRANTED
-+        }
-+    }
- }
-Index: app/src/main/AndroidManifest.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <uses-sdk tools:overrideLibrary=\"com.google.zxing.client.android\" />\r\n\r\n    <uses-permission android:name=\"android.permission.BLUETOOTH\" />\r\n    <uses-permission android:name=\"android.permission.BLUETOOTH_ADMIN\" />\r\n    <uses-permission android:name=\"android.permission.CAMERA\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.WAKE_LOCK\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\" />\r\n    <uses-permission android:name=\"android.permission.READ_PHONE_STATE\" />\r\n    <uses-permission android:name=\"android.permission.FLASHLIGHT\" />\r\n    <uses-permission android:name=\"android.permission.REQUEST_INSTALL_PACKAGES\" />\r\n\r\n    <uses-feature\r\n        android:name=\"android.hardware.camera\"\r\n        android:required=\"false\" />\r\n\r\n    <uses-permission\r\n        android:name=\"android.permission.READ_PRIVILEGED_PHONE_STATE\"\r\n        tools:ignore=\"ProtectedPermissions\" />\r\n\r\n    <application\r\n        android:name=\".MyApplication\"\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.MIMS\"\r\n        android:usesCleartextTraffic=\"true\"\r\n        tools:targetApi=\"31\">\r\n\r\n        <provider\r\n            android:name=\"androidx.core.content.FileProvider\"\r\n            android:authorities=\"${applicationId}.provider\"\r\n            android:exported=\"false\"\r\n            android:grantUriPermissions=\"true\">\r\n            <meta-data\r\n                android:name=\"android.support.FILE_PROVIDER_PATHS\"\r\n                android:resource=\"@xml/provider_paths\" />\r\n        </provider>\r\n\r\n        <service android:name=\".data.local.database_local.ReportUploader\"\r\n            android:exported=\"false\"/>\r\n\r\n        <receiver\r\n            android:name=\".ui.transmission_history.TransmissionActivity$MyBroadcastReciever\"\r\n            android:permission=\"android.permission.RECEIVE_BOOT_COMPLETED\"\r\n            android:exported=\"false\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.BOOT_COMPLETED\" />\r\n            </intent-filter>\r\n        </receiver>\r\n\r\n        <activity\r\n            android:name=\".ui.rating.detail_rating.DetailRatingActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.rating.RatingActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.pemeriksaan.pemeriksaan_detail.PemeriksaanDetailActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.pemeriksaan.PemeriksaanActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.monitoring.monitoring_detail.MonitoringDetailActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.role.pabrikan.arttribute_material.DataAtributMaterialActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.arttribute_material.detail_attribute.DetailDataAtributeMaterialActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.role.pabrikan.pengujian.PengujianActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.role.pabrikan.pengujian.pengujian_detail.PengujianDetailActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.pnerimaan.PenerimaanActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.pnerimaan.detail_penerimaan.DetailPenerimaanActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.tracking.DetailTrackingHistoryActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.tracking.TrackingHistoryActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".data.scan.ScannerActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".data.scan.CustomScanActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.pengiriman.PengirimanActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.pengiriman.DetailPengirimanActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.pengiriman.UpdateLokasiActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.tracking.SpecMaterialActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.tracking.DataMaterialTrackingActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.transmission_history.TransmissionActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.monitoring.MonitoringActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.auth.LoginBiometricActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.auth.change_password.ChangePasswordActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.auth.forgot_password.ForgotPasswordActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.auth.otp.OtpActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".HomeActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.auth.LoginActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".SplashActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\"com.journeyapps.barcodescanner.CaptureActivity\"\r\n            android:screenOrientation=\"fullSensor\"\r\n            tools:replace=\"screenOrientation\" />\r\n\r\n        <meta-data\r\n            android:name=\"preloaded_fonts\"\r\n            android:resource=\"@array/preloaded_fonts\" />\r\n    </application>\r\n\r\n</manifest>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
---- a/app/src/main/AndroidManifest.xml	(revision 6e01942d95cef7d02a00aab00432386f5bb65c80)
-+++ b/app/src/main/AndroidManifest.xml	(date 1675292268269)
-@@ -14,6 +14,8 @@
-     <uses-permission android:name="android.permission.WAKE_LOCK" />
-     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
-     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
-+    <uses-permission android:name="android.permission.MANAGE_EXTERNAL_STORAGE"
-+        tools:ignore="ScopedStorage"/>
-     <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
-     <uses-permission android:name="android.permission.READ_PHONE_STATE" />
-     <uses-permission android:name="android.permission.FLASHLIGHT" />
-@@ -40,6 +42,9 @@
-         android:usesCleartextTraffic="true"
-         tools:targetApi="31">
- 
-+        <uses-library
-+            android:name="org.apache.http.legacy"
-+            android:required="false" />
-         <provider
-             android:name="androidx.core.content.FileProvider"
-             android:authorities="${applicationId}.provider"
-Index: app/src/main/java/dev/iconpln/mims/ui/auth/LoginActivity.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package dev.iconpln.mims.ui.auth\r\n\r\nimport android.Manifest\r\nimport android.content.Intent\r\nimport android.content.pm.PackageManager\r\nimport android.os.Build\r\nimport android.os.Bundle\r\nimport android.view.View\r\nimport android.widget.Toast\r\nimport androidx.activity.viewModels\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport dev.iconpln.mims.HomeActivity\r\nimport dev.iconpln.mims.MyApplication\r\nimport dev.iconpln.mims.data.local.database.DaoMaster\r\nimport dev.iconpln.mims.data.local.database.DaoSession\r\nimport dev.iconpln.mims.data.local.database_local.DatabaseReport\r\nimport dev.iconpln.mims.data.local.database_local.ReportUploader\r\nimport dev.iconpln.mims.databinding.ActivityLoginBinding\r\nimport dev.iconpln.mims.ui.auth.otp.OtpActivity\r\nimport dev.iconpln.mims.utils.*\r\nimport kotlinx.coroutines.CoroutineScope\r\nimport kotlinx.coroutines.Dispatchers\r\nimport kotlinx.coroutines.launch\r\nimport kotlinx.coroutines.withContext\r\nimport org.joda.time.DateTimeUtils\r\n\r\nclass LoginActivity : AppCompatActivity() {\r\n\r\n    private lateinit var binding: ActivityLoginBinding\r\n    private val loginViewModel: AuthViewModel by viewModels()\r\n    private lateinit var session: SessionManager\r\n    private lateinit var daoSession: DaoSession\r\n\r\n    private var username: String = \"\"\r\n    private var password: String = \"\"\r\n    private var mAndroidId: String = \"\"\r\n    private var mAppVersion: String = \"\"\r\n    private var mDeviceData: String = \"\"\r\n    private var mIpAddress: String = \"\"\r\n    private var androidVersion: Int = 0\r\n    private var dateTimeUtc: Long = 0L\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        binding = ActivityLoginBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n        checkStoragePermission()\r\n\r\n        session = SessionManager(this)\r\n        daoSession = (application as MyApplication).daoSession!!\r\n\r\n        mAndroidId = Helper.getAndroidId(this)\r\n        mAppVersion = Helper.getVersionApp(this)\r\n        mDeviceData = Helper.deviceData\r\n        mIpAddress = Helper.getIPAddress(true)\r\n        androidVersion = Build.VERSION.SDK_INT\r\n        dateTimeUtc = DateTimeUtils.currentTimeMillis()\r\n\r\n        loginViewModel.loginResponse.observe(this){\r\n            when(it.message){\r\n                \"DO LOGIN\" -> {\r\n                    CoroutineScope(Dispatchers.IO).launch {\r\n                        session.sessionActivity(Config.IS_LOGIN)\r\n                        session.saveAuthToken(\r\n                            it.token.toString(),\r\n                            it.user?.roleId.toString(),\r\n                            it.user?.mail.toString(),\r\n                            it.user?.kdUser.toString()\r\n                        )\r\n                        SharedPrefsUtils.setStringPreference(this@LoginActivity,\"jwt\", it.token!!)\r\n                        SharedPrefsUtils.setStringPreference(this@LoginActivity, \"username\", username)\r\n                        SharedPrefsUtils.setStringPreference(this@LoginActivity, \"email\", it.user?.mail!!)\r\n                        SharedPrefsUtils.setStringPreference(this@LoginActivity, \"password\", password)\r\n\r\n                        withContext(Dispatchers.Main){\r\n                            val intentToHome = Intent(this@LoginActivity, HomeActivity::class.java)\r\n                            startActivity(intentToHome)\r\n                            finish()\r\n                        }\r\n                    }\r\n                }\r\n                \"DO OTP\" -> {\r\n                    loginViewModel.sendOtp(this@LoginActivity, username)\r\n                    val intentToOtp = Intent(this@LoginActivity, OtpActivity::class.java)\r\n                    intentToOtp.putExtra(\"username\", username)\r\n                    intentToOtp.putExtra(\"otpFrom\", \"login\")\r\n                    startActivity(intentToOtp)\r\n                    finish()\r\n                }\r\n            }\r\n        }\r\n\r\n        loginViewModel.isLoading.observe(this){\r\n            when(it) {\r\n                true -> {\r\n                    binding.progressBar.visibility = View.VISIBLE\r\n                }\r\n                else -> {\r\n                    binding.progressBar.visibility = View.GONE\r\n                }\r\n            }\r\n        }\r\n\r\n        binding.btnLogin.setOnClickListener {\r\n            binding.tvMsgError.visibility = View.GONE\r\n            loginUser()\r\n        }\r\n\r\n    }\r\n\r\n    private fun checkStoragePermission() {\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n            if (checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED) {\r\n                StorageUtils.createDirectories()\r\n                initDaoSession()\r\n                DatabaseReport.getDatabase(this)\r\n            } else {\r\n                if (shouldShowRequestPermissionRationale(Manifest.permission.WRITE_EXTERNAL_STORAGE)) {\r\n                    Toast.makeText(this, \"Storage permission is needed to write external storage.\", Toast.LENGTH_SHORT).show()\r\n                }\r\n                requestPermissions(arrayOf(Manifest.permission.WRITE_EXTERNAL_STORAGE, Manifest.permission.CAMERA), Config.REQUEST_CODE_WRITE_EXTERNAL_STORAGE)\r\n            }\r\n        } else {\r\n            StorageUtils.createDirectories()\r\n            DatabaseReport.getDatabase(this)\r\n            val iService = Intent(applicationContext, ReportUploader::class.java)\r\n            startService(iService)\r\n        }\r\n    }\r\n\r\n    private fun initDaoSession() {\r\n        if ((application as MyApplication).daoSession == null) {\r\n            val database = StorageUtils.getDirectory(StorageUtils.DIRECTORY_DATABASE) + \"/\" + Config.DATABASE_NAME\r\n            val helper = DaoMaster.DevOpenHelper(this, database)\r\n            val db = helper.writableDb\r\n            (application as MyApplication).daoSession = DaoMaster(db).newSession()\r\n        }\r\n    }\r\n\r\n    private fun loginUser() {\r\n        with(binding) {\r\n            username = edtEmail.text.toString().trim()\r\n            password = edtPass.text.toString().trim()\r\n\r\n//            if(email.isNotEmpty() && !Patterns.EMAIL_ADDRESS.matcher(email).matches()){\r\n//                tvMsgError.visibility = View.VISIBLE\r\n//                tvMsgError.text = \"Format email yang dimasukkan salah\"\r\n//                return\r\n//            }\r\n\r\n            if (username.isEmpty()) {\r\n                tvMsgError.visibility = View.VISIBLE\r\n                tvMsgError.text = \"Email tidak boleh kosong\"\r\n                return\r\n            }\r\n\r\n            if (password.isEmpty()) {\r\n                tvMsgError.visibility = View.VISIBLE\r\n                tvMsgError.text = \"Password tidak boleh kosong\"\r\n                return\r\n            }\r\n\r\n            if (password.length < 5) {\r\n                tvMsgError.visibility = View.VISIBLE\r\n                tvMsgError.text = \"Password minimal terdiri dari 5 karakter\"\r\n                return\r\n            }\r\n\r\n            CoroutineScope(Dispatchers.Main).launch {\r\n                if (cbRememberMe.isChecked){\r\n                    session.rememberMe(username)\r\n                }else{\r\n                    session.clearRememberMe()\r\n                }\r\n            }\r\n\r\n            loginViewModel.getLogin(this@LoginActivity,\r\n                daoSession,username, password,\"\",\r\n                mAndroidId,mAppVersion,mDeviceData,mIpAddress,\r\n                androidVersion,dateTimeUtc,session)\r\n        }\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/dev/iconpln/mims/ui/auth/LoginActivity.kt b/app/src/main/java/dev/iconpln/mims/ui/auth/LoginActivity.kt
---- a/app/src/main/java/dev/iconpln/mims/ui/auth/LoginActivity.kt	(revision 6e01942d95cef7d02a00aab00432386f5bb65c80)
-+++ b/app/src/main/java/dev/iconpln/mims/ui/auth/LoginActivity.kt	(date 1675292991869)
-@@ -1,14 +1,22 @@
- package dev.iconpln.mims.ui.auth
- 
- import android.Manifest
-+import android.Manifest.permission.READ_EXTERNAL_STORAGE
-+import android.Manifest.permission.WRITE_EXTERNAL_STORAGE
- import android.content.Intent
- import android.content.pm.PackageManager
-+import android.net.Uri
- import android.os.Build
-+import android.os.Build.VERSION.SDK_INT
- import android.os.Bundle
-+import android.os.Environment
-+import android.provider.Settings
-+import android.util.Log
- import android.view.View
- import android.widget.Toast
- import androidx.activity.viewModels
- import androidx.appcompat.app.AppCompatActivity
-+import androidx.core.app.ActivityCompat
- import dev.iconpln.mims.HomeActivity
- import dev.iconpln.mims.MyApplication
- import dev.iconpln.mims.data.local.database.DaoMaster
-@@ -18,6 +26,7 @@
- import dev.iconpln.mims.databinding.ActivityLoginBinding
- import dev.iconpln.mims.ui.auth.otp.OtpActivity
- import dev.iconpln.mims.utils.*
-+import dev.iconpln.mims.utils.StorageUtils.isPermissionAllowed
- import kotlinx.coroutines.CoroutineScope
- import kotlinx.coroutines.Dispatchers
- import kotlinx.coroutines.launch
-@@ -39,15 +48,15 @@
-     private var mIpAddress: String = ""
-     private var androidVersion: Int = 0
-     private var dateTimeUtc: Long = 0L
-+    private var APP_STORAGE_ACCESS_REQUEST_CODE=501
- 
-     override fun onCreate(savedInstanceState: Bundle?) {
-         super.onCreate(savedInstanceState)
-         binding = ActivityLoginBinding.inflate(layoutInflater)
-         setContentView(binding.root)
--        checkStoragePermission()
-+        requestPermission()
- 
-         session = SessionManager(this)
--        daoSession = (application as MyApplication).daoSession!!
- 
-         mAndroidId = Helper.getAndroidId(this)
-         mAppVersion = Helper.getVersionApp(this)
-@@ -108,25 +117,30 @@
- 
-     }
- 
--    private fun checkStoragePermission() {
--        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
--            if (checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED) {
--                StorageUtils.createDirectories()
--                initDaoSession()
--                DatabaseReport.getDatabase(this)
-+    private fun requestPermission() {
-+        if(!isPermissionAllowed(this@LoginActivity)){
-+            if (SDK_INT >= Build.VERSION_CODES.R) {
-+                Toast.makeText(this, "Harap izinkan aplikasi mengakses penyimpanan", Toast.LENGTH_SHORT).show();
-+                try {
-+                    val intent = Intent(Settings.ACTION_MANAGE_APP_ALL_FILES_ACCESS_PERMISSION)
-+                    intent.addCategory("android.intent.category.DEFAULT")
-+                    intent.data = Uri.parse(String.format("package:%s", applicationContext.packageName))
-+                    startActivityForResult(intent, APP_STORAGE_ACCESS_REQUEST_CODE)
-+                } catch (e: Exception) {
-+                    val intent = Intent()
-+                    intent.action = Settings.ACTION_MANAGE_ALL_FILES_ACCESS_PERMISSION
-+                    startActivityForResult(intent, APP_STORAGE_ACCESS_REQUEST_CODE)
-+                }
-             } else {
--                if (shouldShowRequestPermissionRationale(Manifest.permission.WRITE_EXTERNAL_STORAGE)) {
--                    Toast.makeText(this, "Storage permission is needed to write external storage.", Toast.LENGTH_SHORT).show()
--                }
--                requestPermissions(arrayOf(Manifest.permission.WRITE_EXTERNAL_STORAGE, Manifest.permission.CAMERA), Config.REQUEST_CODE_WRITE_EXTERNAL_STORAGE)
-+                //below android 11
-+                ActivityCompat.requestPermissions(
-+                    this@LoginActivity, arrayOf(WRITE_EXTERNAL_STORAGE,READ_EXTERNAL_STORAGE), APP_STORAGE_ACCESS_REQUEST_CODE
-+                )
-             }
--        } else {
--            StorageUtils.createDirectories()
--            DatabaseReport.getDatabase(this)
--            val iService = Intent(applicationContext, ReportUploader::class.java)
--            startService(iService)
-         }
-+
-     }
-+
- 
-     private fun initDaoSession() {
-         if ((application as MyApplication).daoSession == null) {
-@@ -174,10 +188,51 @@
-                 }
-             }
- 
-+            daoSession = (application as MyApplication).daoSession!!
-             loginViewModel.getLogin(this@LoginActivity,
-                 daoSession,username, password,"",
-                 mAndroidId,mAppVersion,mDeviceData,mIpAddress,
-                 androidVersion,dateTimeUtc,session)
-         }
-     }
-+
-+    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
-+        super.onActivityResult(requestCode, resultCode, data)
-+        if (requestCode == APP_STORAGE_ACCESS_REQUEST_CODE) {
-+            if (SDK_INT >= Build.VERSION_CODES.R) {
-+                Log.i("Permission","OS11")
-+                if (Environment.isExternalStorageManager()) {
-+                    // perform action when allow permission success
-+                    StorageUtils.createDirectories()
-+                    initDaoSession()
-+                    DatabaseReport.getDatabase(this)
-+                    val iService = Intent(applicationContext, ReportUploader::class.java)
-+                    startService(iService)
-+                } else {
-+                    Toast.makeText(this, "Harap izinkan aplikasi mengakses penyimpanan!", Toast.LENGTH_SHORT).show();
-+                }
-+            }
-+        }
-+    }
-+
-+    override fun onRequestPermissionsResult(requestCode: Int, permissions: Array<out String>, grantResults: IntArray) {
-+        super.onRequestPermissionsResult(requestCode, permissions, grantResults)
-+        when (requestCode) {
-+            APP_STORAGE_ACCESS_REQUEST_CODE -> if (grantResults.size > 0) {
-+                Log.i("Permission","Dibawah OS11")
-+                val READ_EXTERNAL_STORAGE = grantResults[0] === PackageManager.PERMISSION_GRANTED
-+                val WRITE_EXTERNAL_STORAGE = grantResults[1] === PackageManager.PERMISSION_GRANTED
-+                if (READ_EXTERNAL_STORAGE && WRITE_EXTERNAL_STORAGE) {
-+                    StorageUtils.createDirectories()
-+                    initDaoSession()
-+                    DatabaseReport.getDatabase(this)
-+                    val iService = Intent(applicationContext, ReportUploader::class.java)
-+                    startService(iService)
-+                } else {
-+                    Toast.makeText(this, "Harap izinkan aplikasi mengakses penyimpanan!", Toast.LENGTH_SHORT).show()
-+                }
-+            }
-+        }
-+    }
- }
-+
-Index: app/src/main/java/dev/iconpln/mims/data/local/database/TPosPenerimaanDao.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package dev.iconpln.mims.data.local.database;\r\n\r\nimport android.database.Cursor;\r\nimport android.database.sqlite.SQLiteStatement;\r\n\r\nimport org.greenrobot.greendao.AbstractDao;\r\nimport org.greenrobot.greendao.Property;\r\nimport org.greenrobot.greendao.internal.DaoConfig;\r\nimport org.greenrobot.greendao.database.Database;\r\nimport org.greenrobot.greendao.database.DatabaseStatement;\r\n\r\n// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.\r\n/** \r\n * DAO for table \"TPOS_PENERIMAAN\".\r\n*/\r\npublic class TPosPenerimaanDao extends AbstractDao<TPosPenerimaan, Long> {\r\n\r\n    public static final String TABLENAME = \"TPOS_PENERIMAAN\";\r\n\r\n    /**\r\n     * Properties of entity TPosPenerimaan.<br/>\r\n     * Can be used for QueryBuilder and for referencing column names.\r\n     */\r\n    public static class Properties {\r\n        public final static Property Id = new Property(0, Long.class, \"id\", true, \"_id\");\r\n        public final static Property StorLoc = new Property(1, String.class, \"StorLoc\", false, \"STOR_LOC\");\r\n        public final static Property Total = new Property(2, String.class, \"Total\", false, \"TOTAL\");\r\n        public final static Property TlskNo = new Property(3, String.class, \"TlskNo\", false, \"TLSK_NO\");\r\n        public final static Property PoSapNo = new Property(4, String.class, \"PoSapNo\", false, \"PO_SAP_NO\");\r\n        public final static Property PoMpNo = new Property(5, String.class, \"PoMpNo\", false, \"PO_MP_NO\");\r\n        public final static Property NoDoSmar = new Property(6, String.class, \"NoDoSmar\", false, \"NO_DO_SMAR\");\r\n        public final static Property LeadTime = new Property(7, Integer.class, \"LeadTime\", false, \"LEAD_TIME\");\r\n        public final static Property Storloc = new Property(8, String.class, \"Storloc\", false, \"STORLOC\");\r\n        public final static Property CreatedDate = new Property(9, String.class, \"CreatedDate\", false, \"CREATED_DATE\");\r\n        public final static Property PlanCodeNo = new Property(10, String.class, \"PlanCodeNo\", false, \"PLAN_CODE_NO\");\r\n        public final static Property PlantName = new Property(11, String.class, \"PlantName\", false, \"PLANT_NAME\");\r\n        public final static Property NoDoMims = new Property(12, String.class, \"NoDoMims\", false, \"NO_DO_MIMS\");\r\n        public final static Property DoStatus = new Property(13, String.class, \"DoStatus\", false, \"DO_STATUS\");\r\n        public final static Property Expeditions = new Property(14, String.class, \"Expeditions\", false, \"EXPEDITIONS\");\r\n        public final static Property CourierPersonName = new Property(15, String.class, \"CourierPersonName\", false, \"COURIER_PERSON_NAME\");\r\n        public final static Property KdPabrikan = new Property(16, String.class, \"KdPabrikan\", false, \"KD_PABRIKAN\");\r\n        public final static Property MaterialGroup = new Property(17, String.class, \"MaterialGroup\", false, \"MATERIAL_GROUP\");\r\n        public final static Property NamaKategoriMaterial = new Property(18, String.class, \"NamaKategoriMaterial\", false, \"NAMA_KATEGORI_MATERIAL\");\r\n        public final static Property PhotoSuratBarang = new Property(19, String.class, \"PhotoSuratBarang\", false, \"PHOTO_SURAT_BARANG\");\r\n        public final static Property PhotoBarang = new Property(20, String.class, \"PhotoBarang\", false, \"PHOTO_BARANG\");\r\n        public final static Property TanggalDiterima = new Property(21, String.class, \"TanggalDiterima\", false, \"TANGGAL_DITERIMA\");\r\n        public final static Property PetugasPenerima = new Property(22, String.class, \"PetugasPenerima\", false, \"PETUGAS_PENERIMA\");\r\n        public final static Property NamaKurir = new Property(23, String.class, \"NamaKurir\", false, \"NAMA_KURIR\");\r\n        public final static Property NamaEkspedisi = new Property(24, String.class, \"NamaEkspedisi\", false, \"NAMA_EKSPEDISI\");\r\n        public final static Property IsChecked = new Property(25, Integer.class, \"isChecked\", false, \"IS_CHECKED\");\r\n    }\r\n\r\n\r\n    public TPosPenerimaanDao(DaoConfig config) {\r\n        super(config);\r\n    }\r\n    \r\n    public TPosPenerimaanDao(DaoConfig config, DaoSession daoSession) {\r\n        super(config, daoSession);\r\n    }\r\n\r\n    /** Creates the underlying database table. */\r\n    public static void createTable(Database db, boolean ifNotExists) {\r\n        String constraint = ifNotExists? \"IF NOT EXISTS \": \"\";\r\n        db.execSQL(\"CREATE TABLE \" + constraint + \"\\\"TPOS_PENERIMAAN\\\" (\" + //\r\n                \"\\\"_id\\\" INTEGER PRIMARY KEY ,\" + // 0: id\r\n                \"\\\"STOR_LOC\\\" TEXT,\" + // 1: StorLoc\r\n                \"\\\"TOTAL\\\" TEXT,\" + // 2: Total\r\n                \"\\\"TLSK_NO\\\" TEXT,\" + // 3: TlskNo\r\n                \"\\\"PO_SAP_NO\\\" TEXT,\" + // 4: PoSapNo\r\n                \"\\\"PO_MP_NO\\\" TEXT,\" + // 5: PoMpNo\r\n                \"\\\"NO_DO_SMAR\\\" TEXT,\" + // 6: NoDoSmar\r\n                \"\\\"LEAD_TIME\\\" INTEGER,\" + // 7: LeadTime\r\n                \"\\\"STORLOC\\\" TEXT,\" + // 8: Storloc\r\n                \"\\\"CREATED_DATE\\\" TEXT,\" + // 9: CreatedDate\r\n                \"\\\"PLAN_CODE_NO\\\" TEXT,\" + // 10: PlanCodeNo\r\n                \"\\\"PLANT_NAME\\\" TEXT,\" + // 11: PlantName\r\n                \"\\\"NO_DO_MIMS\\\" TEXT,\" + // 12: NoDoMims\r\n                \"\\\"DO_STATUS\\\" TEXT,\" + // 13: DoStatus\r\n                \"\\\"EXPEDITIONS\\\" TEXT,\" + // 14: Expeditions\r\n                \"\\\"COURIER_PERSON_NAME\\\" TEXT,\" + // 15: CourierPersonName\r\n                \"\\\"KD_PABRIKAN\\\" TEXT,\" + // 16: KdPabrikan\r\n                \"\\\"MATERIAL_GROUP\\\" TEXT,\" + // 17: MaterialGroup\r\n                \"\\\"NAMA_KATEGORI_MATERIAL\\\" TEXT,\" + // 18: NamaKategoriMaterial\r\n                \"\\\"PHOTO_SURAT_BARANG\\\" TEXT,\" + // 19: PhotoSuratBarang\r\n                \"\\\"PHOTO_BARANG\\\" TEXT,\" + // 20: PhotoBarang\r\n                \"\\\"TANGGAL_DITERIMA\\\" TEXT,\" + // 21: TanggalDiterima\r\n                \"\\\"PETUGAS_PENERIMA\\\" TEXT,\" + // 22: PetugasPenerima\r\n                \"\\\"NAMA_KURIR\\\" TEXT,\" + // 23: NamaKurir\r\n                \"\\\"NAMA_EKSPEDISI\\\" TEXT,\" + // 24: NamaEkspedisi\r\n                \"\\\"IS_CHECKED\\\" INTEGER);\"); // 25: isChecked\r\n    }\r\n\r\n    /** Drops the underlying database table. */\r\n    public static void dropTable(Database db, boolean ifExists) {\r\n        String sql = \"DROP TABLE \" + (ifExists ? \"IF EXISTS \" : \"\") + \"\\\"TPOS_PENERIMAAN\\\"\";\r\n        db.execSQL(sql);\r\n    }\r\n\r\n    @Override\r\n    protected final void bindValues(DatabaseStatement stmt, TPosPenerimaan entity) {\r\n        stmt.clearBindings();\r\n \r\n        Long id = entity.getId();\r\n        if (id != null) {\r\n            stmt.bindLong(1, id);\r\n        }\r\n \r\n        String StorLoc = entity.getStorLoc();\r\n        if (StorLoc != null) {\r\n            stmt.bindString(2, StorLoc);\r\n        }\r\n \r\n        String Total = entity.getTotal();\r\n        if (Total != null) {\r\n            stmt.bindString(3, Total);\r\n        }\r\n \r\n        String TlskNo = entity.getTlskNo();\r\n        if (TlskNo != null) {\r\n            stmt.bindString(4, TlskNo);\r\n        }\r\n \r\n        String PoSapNo = entity.getPoSapNo();\r\n        if (PoSapNo != null) {\r\n            stmt.bindString(5, PoSapNo);\r\n        }\r\n \r\n        String PoMpNo = entity.getPoMpNo();\r\n        if (PoMpNo != null) {\r\n            stmt.bindString(6, PoMpNo);\r\n        }\r\n \r\n        String NoDoSmar = entity.getNoDoSmar();\r\n        if (NoDoSmar != null) {\r\n            stmt.bindString(7, NoDoSmar);\r\n        }\r\n \r\n        Integer LeadTime = entity.getLeadTime();\r\n        if (LeadTime != null) {\r\n            stmt.bindLong(8, LeadTime);\r\n        }\r\n \r\n        String Storloc = entity.getStorloc();\r\n        if (Storloc != null) {\r\n            stmt.bindString(9, Storloc);\r\n        }\r\n \r\n        String CreatedDate = entity.getCreatedDate();\r\n        if (CreatedDate != null) {\r\n            stmt.bindString(10, CreatedDate);\r\n        }\r\n \r\n        String PlanCodeNo = entity.getPlanCodeNo();\r\n        if (PlanCodeNo != null) {\r\n            stmt.bindString(11, PlanCodeNo);\r\n        }\r\n \r\n        String PlantName = entity.getPlantName();\r\n        if (PlantName != null) {\r\n            stmt.bindString(12, PlantName);\r\n        }\r\n \r\n        String NoDoMims = entity.getNoDoMims();\r\n        if (NoDoMims != null) {\r\n            stmt.bindString(13, NoDoMims);\r\n        }\r\n \r\n        String DoStatus = entity.getDoStatus();\r\n        if (DoStatus != null) {\r\n            stmt.bindString(14, DoStatus);\r\n        }\r\n \r\n        String Expeditions = entity.getExpeditions();\r\n        if (Expeditions != null) {\r\n            stmt.bindString(15, Expeditions);\r\n        }\r\n \r\n        String CourierPersonName = entity.getCourierPersonName();\r\n        if (CourierPersonName != null) {\r\n            stmt.bindString(16, CourierPersonName);\r\n        }\r\n \r\n        String KdPabrikan = entity.getKdPabrikan();\r\n        if (KdPabrikan != null) {\r\n            stmt.bindString(17, KdPabrikan);\r\n        }\r\n \r\n        String MaterialGroup = entity.getMaterialGroup();\r\n        if (MaterialGroup != null) {\r\n            stmt.bindString(18, MaterialGroup);\r\n        }\r\n \r\n        String NamaKategoriMaterial = entity.getNamaKategoriMaterial();\r\n        if (NamaKategoriMaterial != null) {\r\n            stmt.bindString(19, NamaKategoriMaterial);\r\n        }\r\n \r\n        String PhotoSuratBarang = entity.getPhotoSuratBarang();\r\n        if (PhotoSuratBarang != null) {\r\n            stmt.bindString(20, PhotoSuratBarang);\r\n        }\r\n \r\n        String PhotoBarang = entity.getPhotoBarang();\r\n        if (PhotoBarang != null) {\r\n            stmt.bindString(21, PhotoBarang);\r\n        }\r\n \r\n        String TanggalDiterima = entity.getTanggalDiterima();\r\n        if (TanggalDiterima != null) {\r\n            stmt.bindString(22, TanggalDiterima);\r\n        }\r\n \r\n        String PetugasPenerima = entity.getPetugasPenerima();\r\n        if (PetugasPenerima != null) {\r\n            stmt.bindString(23, PetugasPenerima);\r\n        }\r\n \r\n        String NamaKurir = entity.getNamaKurir();\r\n        if (NamaKurir != null) {\r\n            stmt.bindString(24, NamaKurir);\r\n        }\r\n \r\n        String NamaEkspedisi = entity.getNamaEkspedisi();\r\n        if (NamaEkspedisi != null) {\r\n            stmt.bindString(25, NamaEkspedisi);\r\n        }\r\n \r\n        Integer isChecked = entity.getIsChecked();\r\n        if (isChecked != null) {\r\n            stmt.bindLong(26, isChecked);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected final void bindValues(SQLiteStatement stmt, TPosPenerimaan entity) {\r\n        stmt.clearBindings();\r\n \r\n        Long id = entity.getId();\r\n        if (id != null) {\r\n            stmt.bindLong(1, id);\r\n        }\r\n \r\n        String StorLoc = entity.getStorLoc();\r\n        if (StorLoc != null) {\r\n            stmt.bindString(2, StorLoc);\r\n        }\r\n \r\n        String Total = entity.getTotal();\r\n        if (Total != null) {\r\n            stmt.bindString(3, Total);\r\n        }\r\n \r\n        String TlskNo = entity.getTlskNo();\r\n        if (TlskNo != null) {\r\n            stmt.bindString(4, TlskNo);\r\n        }\r\n \r\n        String PoSapNo = entity.getPoSapNo();\r\n        if (PoSapNo != null) {\r\n            stmt.bindString(5, PoSapNo);\r\n        }\r\n \r\n        String PoMpNo = entity.getPoMpNo();\r\n        if (PoMpNo != null) {\r\n            stmt.bindString(6, PoMpNo);\r\n        }\r\n \r\n        String NoDoSmar = entity.getNoDoSmar();\r\n        if (NoDoSmar != null) {\r\n            stmt.bindString(7, NoDoSmar);\r\n        }\r\n \r\n        Integer LeadTime = entity.getLeadTime();\r\n        if (LeadTime != null) {\r\n            stmt.bindLong(8, LeadTime);\r\n        }\r\n \r\n        String Storloc = entity.getStorloc();\r\n        if (Storloc != null) {\r\n            stmt.bindString(9, Storloc);\r\n        }\r\n \r\n        String CreatedDate = entity.getCreatedDate();\r\n        if (CreatedDate != null) {\r\n            stmt.bindString(10, CreatedDate);\r\n        }\r\n \r\n        String PlanCodeNo = entity.getPlanCodeNo();\r\n        if (PlanCodeNo != null) {\r\n            stmt.bindString(11, PlanCodeNo);\r\n        }\r\n \r\n        String PlantName = entity.getPlantName();\r\n        if (PlantName != null) {\r\n            stmt.bindString(12, PlantName);\r\n        }\r\n \r\n        String NoDoMims = entity.getNoDoMims();\r\n        if (NoDoMims != null) {\r\n            stmt.bindString(13, NoDoMims);\r\n        }\r\n \r\n        String DoStatus = entity.getDoStatus();\r\n        if (DoStatus != null) {\r\n            stmt.bindString(14, DoStatus);\r\n        }\r\n \r\n        String Expeditions = entity.getExpeditions();\r\n        if (Expeditions != null) {\r\n            stmt.bindString(15, Expeditions);\r\n        }\r\n \r\n        String CourierPersonName = entity.getCourierPersonName();\r\n        if (CourierPersonName != null) {\r\n            stmt.bindString(16, CourierPersonName);\r\n        }\r\n \r\n        String KdPabrikan = entity.getKdPabrikan();\r\n        if (KdPabrikan != null) {\r\n            stmt.bindString(17, KdPabrikan);\r\n        }\r\n \r\n        String MaterialGroup = entity.getMaterialGroup();\r\n        if (MaterialGroup != null) {\r\n            stmt.bindString(18, MaterialGroup);\r\n        }\r\n \r\n        String NamaKategoriMaterial = entity.getNamaKategoriMaterial();\r\n        if (NamaKategoriMaterial != null) {\r\n            stmt.bindString(19, NamaKategoriMaterial);\r\n        }\r\n \r\n        String PhotoSuratBarang = entity.getPhotoSuratBarang();\r\n        if (PhotoSuratBarang != null) {\r\n            stmt.bindString(20, PhotoSuratBarang);\r\n        }\r\n \r\n        String PhotoBarang = entity.getPhotoBarang();\r\n        if (PhotoBarang != null) {\r\n            stmt.bindString(21, PhotoBarang);\r\n        }\r\n \r\n        String TanggalDiterima = entity.getTanggalDiterima();\r\n        if (TanggalDiterima != null) {\r\n            stmt.bindString(22, TanggalDiterima);\r\n        }\r\n \r\n        String PetugasPenerima = entity.getPetugasPenerima();\r\n        if (PetugasPenerima != null) {\r\n            stmt.bindString(23, PetugasPenerima);\r\n        }\r\n \r\n        String NamaKurir = entity.getNamaKurir();\r\n        if (NamaKurir != null) {\r\n            stmt.bindString(24, NamaKurir);\r\n        }\r\n \r\n        String NamaEkspedisi = entity.getNamaEkspedisi();\r\n        if (NamaEkspedisi != null) {\r\n            stmt.bindString(25, NamaEkspedisi);\r\n        }\r\n \r\n        Integer isChecked = entity.getIsChecked();\r\n        if (isChecked != null) {\r\n            stmt.bindLong(26, isChecked);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public Long readKey(Cursor cursor, int offset) {\r\n        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);\r\n    }    \r\n\r\n    @Override\r\n    public TPosPenerimaan readEntity(Cursor cursor, int offset) {\r\n        TPosPenerimaan entity = new TPosPenerimaan( //\r\n            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id\r\n            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // StorLoc\r\n            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // Total\r\n            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // TlskNo\r\n            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // PoSapNo\r\n            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // PoMpNo\r\n            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // NoDoSmar\r\n            cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7), // LeadTime\r\n            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // Storloc\r\n            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // CreatedDate\r\n            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // PlanCodeNo\r\n            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // PlantName\r\n            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // NoDoMims\r\n            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // DoStatus\r\n            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // Expeditions\r\n            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // CourierPersonName\r\n            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // KdPabrikan\r\n            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // MaterialGroup\r\n            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // NamaKategoriMaterial\r\n            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // PhotoSuratBarang\r\n            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // PhotoBarang\r\n            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // TanggalDiterima\r\n            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // PetugasPenerima\r\n            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // NamaKurir\r\n            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // NamaEkspedisi\r\n            cursor.isNull(offset + 25) ? null : cursor.getInt(offset + 25) // isChecked\r\n        );\r\n        return entity;\r\n    }\r\n     \r\n    @Override\r\n    public void readEntity(Cursor cursor, TPosPenerimaan entity, int offset) {\r\n        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));\r\n        entity.setStorLoc(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));\r\n        entity.setTotal(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));\r\n        entity.setTlskNo(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));\r\n        entity.setPoSapNo(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));\r\n        entity.setPoMpNo(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));\r\n        entity.setNoDoSmar(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));\r\n        entity.setLeadTime(cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7));\r\n        entity.setStorloc(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));\r\n        entity.setCreatedDate(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));\r\n        entity.setPlanCodeNo(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));\r\n        entity.setPlantName(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));\r\n        entity.setNoDoMims(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));\r\n        entity.setDoStatus(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));\r\n        entity.setExpeditions(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));\r\n        entity.setCourierPersonName(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));\r\n        entity.setKdPabrikan(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));\r\n        entity.setMaterialGroup(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));\r\n        entity.setNamaKategoriMaterial(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));\r\n        entity.setPhotoSuratBarang(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));\r\n        entity.setPhotoBarang(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));\r\n        entity.setTanggalDiterima(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));\r\n        entity.setPetugasPenerima(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));\r\n        entity.setNamaKurir(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));\r\n        entity.setNamaEkspedisi(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));\r\n        entity.setIsChecked(cursor.isNull(offset + 25) ? null : cursor.getInt(offset + 25));\r\n     }\r\n    \r\n    @Override\r\n    protected final Long updateKeyAfterInsert(TPosPenerimaan entity, long rowId) {\r\n        entity.setId(rowId);\r\n        return rowId;\r\n    }\r\n    \r\n    @Override\r\n    public Long getKey(TPosPenerimaan entity) {\r\n        if(entity != null) {\r\n            return entity.getId();\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public boolean hasKey(TPosPenerimaan entity) {\r\n        return entity.getId() != null;\r\n    }\r\n\r\n    @Override\r\n    protected final boolean isEntityUpdateable() {\r\n        return true;\r\n    }\r\n    \r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/dev/iconpln/mims/data/local/database/TPosPenerimaanDao.java b/app/src/main/java/dev/iconpln/mims/data/local/database/TPosPenerimaanDao.java
---- a/app/src/main/java/dev/iconpln/mims/data/local/database/TPosPenerimaanDao.java	(revision 6e01942d95cef7d02a00aab00432386f5bb65c80)
-+++ b/app/src/main/java/dev/iconpln/mims/data/local/database/TPosPenerimaanDao.java	(date 1675236438825)
-@@ -47,7 +47,7 @@
-         public final static Property PetugasPenerima = new Property(22, String.class, "PetugasPenerima", false, "PETUGAS_PENERIMA");
-         public final static Property NamaKurir = new Property(23, String.class, "NamaKurir", false, "NAMA_KURIR");
-         public final static Property NamaEkspedisi = new Property(24, String.class, "NamaEkspedisi", false, "NAMA_EKSPEDISI");
--        public final static Property IsChecked = new Property(25, Integer.class, "isChecked", false, "IS_CHECKED");
-+        public final static Property IsDone = new Property(25, Integer.class, "isDone", false, "IS_DONE");
-     }
- 
- 
-@@ -88,7 +88,7 @@
-                 "\"PETUGAS_PENERIMA\" TEXT," + // 22: PetugasPenerima
-                 "\"NAMA_KURIR\" TEXT," + // 23: NamaKurir
-                 "\"NAMA_EKSPEDISI\" TEXT," + // 24: NamaEkspedisi
--                "\"IS_CHECKED\" INTEGER);"); // 25: isChecked
-+                "\"IS_DONE\" INTEGER);"); // 25: isDone
-     }
- 
-     /** Drops the underlying database table. */
-@@ -226,9 +226,9 @@
-             stmt.bindString(25, NamaEkspedisi);
-         }
-  
--        Integer isChecked = entity.getIsChecked();
--        if (isChecked != null) {
--            stmt.bindLong(26, isChecked);
-+        Integer isDone = entity.getIsDone();
-+        if (isDone != null) {
-+            stmt.bindLong(26, isDone);
-         }
-     }
- 
-@@ -361,9 +361,9 @@
-             stmt.bindString(25, NamaEkspedisi);
-         }
-  
--        Integer isChecked = entity.getIsChecked();
--        if (isChecked != null) {
--            stmt.bindLong(26, isChecked);
-+        Integer isDone = entity.getIsDone();
-+        if (isDone != null) {
-+            stmt.bindLong(26, isDone);
-         }
-     }
- 
-@@ -400,7 +400,7 @@
-             cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // PetugasPenerima
-             cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // NamaKurir
-             cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // NamaEkspedisi
--            cursor.isNull(offset + 25) ? null : cursor.getInt(offset + 25) // isChecked
-+            cursor.isNull(offset + 25) ? null : cursor.getInt(offset + 25) // isDone
-         );
-         return entity;
-     }
-@@ -432,7 +432,7 @@
-         entity.setPetugasPenerima(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
-         entity.setNamaKurir(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
-         entity.setNamaEkspedisi(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
--        entity.setIsChecked(cursor.isNull(offset + 25) ? null : cursor.getInt(offset + 25));
-+        entity.setIsDone(cursor.isNull(offset + 25) ? null : cursor.getInt(offset + 25));
-      }
-     
-     @Override
-Index: app/src/main/res/layout/activity_penerimaan.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".ui.pnerimaan.PenerimaanActivity\">\r\n\r\n    <ImageView\r\n        android:id=\"@+id/header\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"84dp\"\r\n        android:background=\"@drawable/dashboard\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/btn_back\"\r\n        android:layout_width=\"50dp\"\r\n        android:layout_height=\"50dp\"\r\n        android:layout_marginStart=\"29dp\"\r\n        android:background=\"#00FFFFFF\"\r\n        android:src=\"@drawable/ic_baseline_arrow_back_ios_24\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/textView3\"\r\n        app:layout_constraintEnd_toStartOf=\"@id/textView3\"\r\n        app:layout_constraintHorizontal_chainStyle=\"spread_inside\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/header\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/textView3\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView3\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginEnd=\"80dp\"\r\n        android:fontFamily=\"@font/montserrat_reguler\"\r\n        android:text=\"Daftar Penerimaan\"\r\n        android:textAlignment=\"center\"\r\n        android:textColor=\"@color/white\"\r\n        android:textSize=\"16dp\"\r\n        android:textStyle=\"bold\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/header\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toEndOf=\"@+id/btn_back\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/txt_nomorPo\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"23dp\"\r\n        android:layout_marginTop=\"20dp\"\r\n        android:text=\"No. PO / No. DO\"\r\n        android:textColor=\"#3F3D56\"\r\n        android:textSize=\"14sp\"\r\n        android:textStyle=\"bold\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/header\" />\r\n\r\n    <EditText\r\n        android:id=\"@+id/src_nomorPoDo\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"50dp\"\r\n        android:layout_marginStart=\"23dp\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:layout_marginEnd=\"25dp\"\r\n        android:background=\"@drawable/srchview\"\r\n        android:drawableEnd=\"@drawable/ic_search\"\r\n        android:fontFamily=\"@font/montserrat_reguler\"\r\n        android:hint=\"Search here\"\r\n        android:paddingLeft=\"20dp\"\r\n        android:paddingRight=\"20dp\"\r\n        android:textSize=\"12sp\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/txt_nomorPo\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/txt_kategori\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"24dp\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:fontFamily=\"@font/montserrat_reguler\"\r\n        android:text=\"Status Penerimaan\"\r\n        android:textColor=\"#3F3D56\"\r\n        android:textSize=\"16sp\"\r\n        android:textStyle=\"bold\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/src_nomorPoDo\" />\r\n\r\n    <com.google.android.material.textfield.TextInputLayout\r\n        android:id=\"@+id/tinp_status_penerimaan\"\r\n        style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox.ExposedDropdownMenu\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:layout_marginEnd=\"25dp\"\r\n        app:hintAnimationEnabled=\"true\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/txt_kategori\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/txt_kategori\">\r\n\r\n        <AutoCompleteTextView\r\n            android:id=\"@+id/dropdown_status_penerimaan\"\r\n            style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox.ExposedDropdownMenu\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:background=\"@drawable/txt_input_layout\"\r\n            android:inputType=\"none\"\r\n            android:text=\"Pilih Kategori\" />\r\n\r\n    </com.google.android.material.textfield.TextInputLayout>\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/rv_penerimaan\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"0dp\"\r\n        android:layout_marginTop=\"10dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/tinp_status_penerimaan\"\r\n        tools:listitem=\"@layout/item_data_penerimaan\"/>\r\n\r\n    <ProgressBar\r\n        android:id=\"@+id/progress_bar\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/rv_penerimaan\" />\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/layout/activity_penerimaan.xml b/app/src/main/res/layout/activity_penerimaan.xml
---- a/app/src/main/res/layout/activity_penerimaan.xml	(revision 6e01942d95cef7d02a00aab00432386f5bb65c80)
-+++ b/app/src/main/res/layout/activity_penerimaan.xml	(date 1675246423116)
-@@ -124,13 +124,13 @@
-         app:layout_constraintTop_toBottomOf="@+id/tinp_status_penerimaan"
-         tools:listitem="@layout/item_data_penerimaan"/>
- 
--    <ProgressBar
--        android:id="@+id/progress_bar"
--        android:layout_width="wrap_content"
--        android:layout_height="wrap_content"
--        app:layout_constraintEnd_toEndOf="parent"
--        app:layout_constraintStart_toStartOf="parent"
--        app:layout_constraintTop_toTopOf="@+id/rv_penerimaan" />
-+<!--    <ProgressBar-->
-+<!--        android:id="@+id/progress_bar"-->
-+<!--        android:layout_width="wrap_content"-->
-+<!--        android:layout_height="wrap_content"-->
-+<!--        app:layout_constraintEnd_toEndOf="parent"-->
-+<!--        app:layout_constraintStart_toStartOf="parent"-->
-+<!--        app:layout_constraintTop_toTopOf="@+id/rv_penerimaan" />-->
- 
- 
- </androidx.constraintlayout.widget.ConstraintLayout>
-\ No newline at end of file
-Index: greenDaoGenerator/src/main/java/dev/iconpln/greendaogenerator/MainGenerator.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package dev.iconpln.greendaogenerator;\r\n\r\nimport org.greenrobot.greendao.generator.DaoGenerator;\r\nimport org.greenrobot.greendao.generator.Entity;\r\nimport org.greenrobot.greendao.generator.Schema;\r\n\r\npublic class MainGenerator {\r\n\r\n    public static void main(String[] args) throws Exception {\r\n        Schema schema = new Schema(1, \"dev.iconpln.mims.data.local.database\");\r\n\r\n        //region Province\r\n        Entity tMonitoring = schema.addEntity(\"TMonitoring\");\r\n        tMonitoring.addIdProperty();\r\n        tMonitoring.addStringProperty(\"NomorMaterial\");\r\n        tMonitoring.addStringProperty(\"KdPabrikan\");\r\n        tMonitoring.addStringProperty(\"MatSapNo\");\r\n        tMonitoring.addStringProperty(\"StoreLoc\");\r\n        tMonitoring.addStringProperty(\"Uom\");\r\n        tMonitoring.addStringProperty(\"Unit\");\r\n        tMonitoring.addStringProperty(\"MaterialDesc\");\r\n        tMonitoring.addStringProperty(\"TlskNo\");\r\n        tMonitoring.addStringProperty(\"PoSapNo\");\r\n        tMonitoring.addStringProperty(\"PoMpNo\");\r\n        tMonitoring.addStringProperty(\"Qty\");\r\n        tMonitoring.addStringProperty(\"LeadTime\");\r\n        tMonitoring.addStringProperty(\"CreatedDate\");\r\n\r\n\r\n        //endregion\r\n\r\n        //region Pengujian\r\n        Entity tPengujian = schema.addEntity(\"TPengujian\");\r\n        tPengujian.addIdProperty();\r\n        tPengujian.addStringProperty(\"TanggalUji\");\r\n        tPengujian.addStringProperty(\"NoPengujian\");\r\n        tPengujian.addStringProperty(\"NamaKategori\");\r\n        tPengujian.addStringProperty(\"QtyMaterial\");\r\n        tPengujian.addStringProperty(\"QtySiap\");\r\n        tPengujian.addStringProperty(\"Unit\");\r\n        tPengujian.addStringProperty(\"StatusUji\");\r\n        tPengujian.addStringProperty(\"KdPabrikan\");\r\n\r\n        //endregion\r\n\r\n        //region Pengujian Detail\r\n        Entity tPengujianDetails = schema.addEntity(\"TPengujianDetails\");\r\n        tPengujianDetails.addIdProperty();\r\n        tPengujianDetails.addStringProperty(\"SerialNumber\");\r\n        tPengujianDetails.addStringProperty(\"KeteranganMaterial\");\r\n        tPengujianDetails.addStringProperty(\"noPengujian\");\r\n        tPengujianDetails.addStringProperty(\"NamaKategori\");\r\n        tPengujianDetails.addStringProperty(\"StatusUji\");\r\n\r\n        //endregion\r\n\r\n        //region lokasi\r\n        Entity tLokasi = schema.addEntity(\"TLokasi\");\r\n        tLokasi.addIdProperty();\r\n        tLokasi.addStringProperty(\"NoDoSns\");\r\n        tLokasi.addStringProperty(\"Ket\");\r\n        tLokasi.addStringProperty(\"UpdateDate\");\r\n\r\n        //endregion\r\n\r\n        //region Pos Detail\r\n        Entity tPosDetail = schema.addEntity(\"TPosDetail\");\r\n        tPosDetail.addIdProperty();\r\n        tPosDetail.addStringProperty(\"NoMatSap\");\r\n        tPosDetail.addStringProperty(\"NoDoSmar\");\r\n        tPosDetail.addStringProperty(\"Qty\");\r\n        tPosDetail.addStringProperty(\"KdPabrikan\");\r\n        tPosDetail.addStringProperty(\"DoStatus\");\r\n        tPosDetail.addStringProperty(\"PoSapNo\");\r\n        tPosDetail.addStringProperty(\"PoMpNo\");\r\n        tPosDetail.addStringProperty(\"NoDoMims\");\r\n        tPosDetail.addStringProperty(\"NoPackaging\");\r\n        tPosDetail.addStringProperty(\"PlantCodeNo\");\r\n        tPosDetail.addStringProperty(\"PlantName\");\r\n        tPosDetail.addStringProperty(\"StorLoc\");\r\n        tPosDetail.addStringProperty(\"LeadTime\");\r\n        tPosDetail.addStringProperty(\"CreatedDate\");\r\n        tPosDetail.addStringProperty(\"Uom\");\r\n        tPosDetail.addStringProperty(\"NoPemeriksaan\");\r\n\r\n        //endregion\r\n\r\n        //region Pos Detail Penerimaan\r\n        Entity tPosDetailPenerimaan = schema.addEntity(\"TPosDetailPenerimaan\");\r\n        tPosDetailPenerimaan.addIdProperty();\r\n        tPosDetailPenerimaan.addStringProperty(\"NoMatSap\");\r\n        tPosDetailPenerimaan.addStringProperty(\"NoDoSmar\");\r\n        tPosDetailPenerimaan.addStringProperty(\"Qty\");\r\n        tPosDetailPenerimaan.addStringProperty(\"KdPabrikan\");\r\n        tPosDetailPenerimaan.addStringProperty(\"DoStatus\");\r\n        tPosDetailPenerimaan.addStringProperty(\"PoSapNo\");\r\n        tPosDetailPenerimaan.addStringProperty(\"PoMpNo\");\r\n        tPosDetailPenerimaan.addStringProperty(\"NoDoMims\");\r\n        tPosDetailPenerimaan.addStringProperty(\"NoPackaging\");\r\n        tPosDetailPenerimaan.addStringProperty(\"PlantCodeNo\");\r\n        tPosDetailPenerimaan.addStringProperty(\"PlantName\");\r\n        tPosDetailPenerimaan.addStringProperty(\"StorLoc\");\r\n        tPosDetailPenerimaan.addStringProperty(\"LeadTime\");\r\n        tPosDetailPenerimaan.addStringProperty(\"CreatedDate\");\r\n        tPosDetailPenerimaan.addStringProperty(\"Uom\");\r\n        tPosDetailPenerimaan.addStringProperty(\"NoPemeriksaan\");\r\n        tPosDetailPenerimaan.addIntProperty(\"isDone\");\r\n\r\n        //endregion\r\n\r\n        //region Material Detail\r\n        Entity tMaterialDetail = schema.addEntity(\"TMaterialDetail\");\r\n        tMaterialDetail.addIdProperty();\r\n        tMaterialDetail.addStringProperty(\"NomorMaterial\");\r\n        tMaterialDetail.addStringProperty(\"Mmc\");\r\n        tMaterialDetail.addStringProperty(\"MaterialGroup\");\r\n        tMaterialDetail.addStringProperty(\"TglProduksi\");\r\n        tMaterialDetail.addStringProperty(\"KdPabrikan\");\r\n        tMaterialDetail.addStringProperty(\"serialNumber\");\r\n        tMaterialDetail.addStringProperty(\"NomorSertMaterologi\");\r\n        tMaterialDetail.addStringProperty(\"Spln\");\r\n        tMaterialDetail.addStringProperty(\"NoProduksi\");\r\n        tMaterialDetail.addStringProperty(\"Storloc\");\r\n        tMaterialDetail.addStringProperty(\"NoPackaging\");\r\n        tMaterialDetail.addStringProperty(\"Spesifikasi\");\r\n        tMaterialDetail.addStringProperty(\"Plant\");\r\n        tMaterialDetail.addStringProperty(\"MaterialId\");\r\n        tMaterialDetail.addStringProperty(\"MasaGaransi\");\r\n        tMaterialDetail.addStringProperty(\"Tahun\");\r\n        tMaterialDetail.addStringProperty(\"NamaKategoriMaterial\");\r\n\r\n        //endregion\r\n\r\n        //region Material Groups\r\n        Entity tMaterialGroups = schema.addEntity(\"TMaterialGroups\");\r\n        tMaterialGroups.addIdProperty();\r\n        tMaterialGroups.addStringProperty(\"MaterialGroup\");\r\n        tMaterialGroups.addStringProperty(\"NamaKategoriMaterial\");\r\n\r\n        //endregion\r\n\r\n        // region privilege\r\n        Entity tPrivelege = schema.addEntity(\"TPrivilege\");\r\n        tPrivelege.addIdProperty();\r\n        tPrivelege.addStringProperty(\"ModuleId\");\r\n        tPrivelege.addStringProperty(\"IsActive\");\r\n        tPrivelege.addStringProperty(\"RoleId\");\r\n        tPrivelege.addStringProperty(\"MethodId\");\r\n        tPrivelege.addStringProperty(\"MethodValue\");\r\n        // endregion\r\n\r\n        // region material\r\n        Entity tMaterial = schema.addEntity(\"TMaterial\");\r\n        tMaterial.addIdProperty();\r\n        tMaterial.addStringProperty(\"NomorMaterial\");\r\n        tMaterial.addStringProperty(\"Mmc\");\r\n        tMaterial.addStringProperty(\"MaterialGroup\");\r\n        tMaterial.addStringProperty(\"TglProduksi\");\r\n        tMaterial.addStringProperty(\"NomorSertMaterologi\");\r\n        tMaterial.addStringProperty(\"Storloc\");\r\n        tMaterial.addStringProperty(\"Plant\");\r\n        tMaterial.addStringProperty(\"MaterialId\");\r\n        tMaterial.addStringProperty(\"MasaGaransi\");\r\n        tMaterial.addStringProperty(\"NoProduksi\");\r\n        tMaterial.addStringProperty(\"Tahun\");\r\n        tMaterial.addStringProperty(\"NamaKategoriMaterial\");\r\n        tMaterial.addStringProperty(\"KdPabrikan\");\r\n\r\n        // endregion\r\n\r\n        // region pos\r\n        Entity tPos = schema.addEntity(\"TPos\");\r\n        tPos.addIdProperty();\r\n        tPos.addStringProperty(\"StorLoc\");\r\n        tPos.addStringProperty(\"Total\");\r\n        tPos.addStringProperty(\"TlskNo\");\r\n        tPos.addStringProperty(\"PoSapNo\");\r\n        tPos.addStringProperty(\"PoMpNo\");\r\n        tPos.addStringProperty(\"NoDoSmar\");\r\n        tPos.addIntProperty(\"LeadTime\");\r\n        tPos.addStringProperty(\"Storloc\");\r\n        tPos.addStringProperty(\"CreatedDate\");\r\n        tPos.addStringProperty(\"PlanCodeNo\");\r\n        tPos.addStringProperty(\"PlantName\");\r\n        tPos.addStringProperty(\"NoDoMims\");\r\n        tPos.addStringProperty(\"DoStatus\");\r\n        tPos.addStringProperty(\"Expeditions\");\r\n        tPos.addStringProperty(\"CourierPersonName\");\r\n        tPos.addStringProperty(\"KdPabrikan\");\r\n        tPos.addStringProperty(\"MaterialGroup\");\r\n        tPos.addStringProperty(\"NamaKategoriMaterial\");\r\n\r\n        // endregion\r\n\r\n        // region posPenerimaan\r\n        Entity tPosPenerimaan = schema.addEntity(\"TPosPenerimaan\");\r\n        tPosPenerimaan.addIdProperty();\r\n        tPosPenerimaan.addStringProperty(\"StorLoc\");\r\n        tPosPenerimaan.addStringProperty(\"Total\");\r\n        tPosPenerimaan.addStringProperty(\"TlskNo\");\r\n        tPosPenerimaan.addStringProperty(\"PoSapNo\");\r\n        tPosPenerimaan.addStringProperty(\"PoMpNo\");\r\n        tPosPenerimaan.addStringProperty(\"NoDoSmar\");\r\n        tPosPenerimaan.addIntProperty(\"LeadTime\");\r\n        tPosPenerimaan.addStringProperty(\"Storloc\");\r\n        tPosPenerimaan.addStringProperty(\"CreatedDate\");\r\n        tPosPenerimaan.addStringProperty(\"PlanCodeNo\");\r\n        tPosPenerimaan.addStringProperty(\"PlantName\");\r\n        tPosPenerimaan.addStringProperty(\"NoDoMims\");\r\n        tPosPenerimaan.addStringProperty(\"DoStatus\");\r\n        tPosPenerimaan.addStringProperty(\"Expeditions\");\r\n        tPosPenerimaan.addStringProperty(\"CourierPersonName\");\r\n        tPosPenerimaan.addStringProperty(\"KdPabrikan\");\r\n        tPosPenerimaan.addStringProperty(\"MaterialGroup\");\r\n        tPosPenerimaan.addStringProperty(\"NamaKategoriMaterial\");\r\n        tPosPenerimaan.addStringProperty(\"PhotoSuratBarang\");\r\n        tPosPenerimaan.addStringProperty(\"PhotoBarang\");\r\n        tPosPenerimaan.addStringProperty(\"TanggalDiterima\");\r\n        tPosPenerimaan.addStringProperty(\"PetugasPenerima\");\r\n        tPosPenerimaan.addStringProperty(\"NamaKurir\");\r\n        tPosPenerimaan.addStringProperty(\"NamaEkspedisi\");\r\n        tPosPenerimaan.addIntProperty(\"isChecked\");\r\n\r\n        // endregion\r\n\r\n        // region possns\r\n        Entity tPosSns = schema.addEntity(\"TPosSns\");\r\n        tPosSns.addIdProperty();\r\n        tPosSns.addStringProperty(\"noMatSap\");\r\n        tPosSns.addStringProperty(\"Mmc\");\r\n        tPosSns.addStringProperty(\"MaterialGroup\");\r\n        tPosSns.addStringProperty(\"TglProduksi\");\r\n        tPosSns.addStringProperty(\"KdPabrikan\");\r\n        tPosSns.addStringProperty(\"NoSertMeterologi\");\r\n        tPosSns.addStringProperty(\"Spln\");\r\n        tPosSns.addStringProperty(\"NoProduksi\");\r\n        tPosSns.addStringProperty(\"StorLoc\");\r\n        tPosSns.addStringProperty(\"NamaKategoriMaterial\");\r\n        tPosSns.addStringProperty(\"NoSerial\");\r\n        tPosSns.addStringProperty(\"NoDoSmar\");\r\n        tPosSns.addStringProperty(\"Spesifikasi\");\r\n        tPosSns.addStringProperty(\"Plant\");\r\n        tPosSns.addStringProperty(\"MaterialId\");\r\n        tPosSns.addStringProperty(\"MasaGaransi\");\r\n        tPosSns.addStringProperty(\"DoStatus\");\r\n        tPosSns.addStringProperty(\"Status\");\r\n\r\n        // region posPenerimaan\r\n        Entity tPemeriksaan = schema.addEntity(\"TPemeriksaan\");\r\n        tPemeriksaan.addIdProperty();\r\n        tPemeriksaan.addStringProperty(\"NoPemeriksaan\");\r\n        tPemeriksaan.addStringProperty(\"StorLoc\");\r\n        tPemeriksaan.addStringProperty(\"Total\");\r\n        tPemeriksaan.addStringProperty(\"TlskNo\");\r\n        tPemeriksaan.addStringProperty(\"PoSapNo\");\r\n        tPemeriksaan.addStringProperty(\"PoMpNo\");\r\n        tPemeriksaan.addStringProperty(\"NoDoSmar\");\r\n        tPemeriksaan.addIntProperty(\"LeadTime\");\r\n        tPemeriksaan.addStringProperty(\"Storloc\");\r\n        tPemeriksaan.addStringProperty(\"CreatedDate\");\r\n        tPemeriksaan.addStringProperty(\"PlanCodeNo\");\r\n        tPemeriksaan.addStringProperty(\"PlantName\");\r\n        tPemeriksaan.addStringProperty(\"NoDoMims\");\r\n        tPemeriksaan.addStringProperty(\"DoStatus\");\r\n        tPemeriksaan.addStringProperty(\"Expeditions\");\r\n        tPemeriksaan.addStringProperty(\"CourierPersonName\");\r\n        tPemeriksaan.addStringProperty(\"KdPabrikan\");\r\n        tPemeriksaan.addStringProperty(\"MaterialGroup\");\r\n        tPemeriksaan.addStringProperty(\"NamaKategoriMaterial\");\r\n        tPemeriksaan.addStringProperty(\"TanggalDiterima\");\r\n        tPemeriksaan.addStringProperty(\"PetugasPenerima\");\r\n        tPemeriksaan.addStringProperty(\"NamaKurir\");\r\n        tPemeriksaan.addStringProperty(\"NamaEkspedisi\");\r\n        //baru\r\n        tPemeriksaan.addStringProperty(\"NamaKetua\");\r\n        tPemeriksaan.addStringProperty(\"NamaManager\");\r\n        tPemeriksaan.addStringProperty(\"NamaSekretaris\");\r\n        tPemeriksaan.addStringProperty(\"Anggota\");\r\n        tPemeriksaan.addStringProperty(\"RatingPenerimaan\");\r\n        tPemeriksaan.addStringProperty(\"DescPenerimaan\");\r\n        tPemeriksaan.addStringProperty(\"RatingQuality\");\r\n        tPemeriksaan.addStringProperty(\"DescQuality\");\r\n        tPemeriksaan.addStringProperty(\"RatingWaktu\");\r\n        tPemeriksaan.addStringProperty(\"DescWaktu\");\r\n        tPemeriksaan.addStringProperty(\"RatingPath\");\r\n        tPemeriksaan.addStringProperty(\"Packangings\");\r\n        tPemeriksaan.addIntProperty(\"State\");//1 pemeriksaan 2 rating\r\n        tPemeriksaan.addIntProperty(\"isDone\");//untuk centangan\r\n\r\n\r\n        // region penerimaan detail\r\n        Entity tPemeriksaanDetail = schema.addEntity(\"TPemeriksaanDetail\");\r\n        tPemeriksaanDetail.addIdProperty();\r\n        tPemeriksaanDetail.addStringProperty(\"NoPemeriksaan\");\r\n        tPemeriksaanDetail.addStringProperty(\"Sn\");\r\n        tPemeriksaanDetail.addStringProperty(\"NoDoSmar\");\r\n        tPemeriksaanDetail.addStringProperty(\"NoMaterail\");\r\n        tPemeriksaanDetail.addStringProperty(\"NoPackaging\");\r\n        tPemeriksaanDetail.addStringProperty(\"Status\");//REJECTED || APPROVED\r\n        tPemeriksaanDetail.addIntProperty(\"IsDone\");\r\n\r\n\r\n        // endregion\r\n\r\n        new DaoGenerator().generateAll(schema, \"../MIMS-Master/app/src/main/java\");\r\n\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/greenDaoGenerator/src/main/java/dev/iconpln/greendaogenerator/MainGenerator.java b/greenDaoGenerator/src/main/java/dev/iconpln/greendaogenerator/MainGenerator.java
---- a/greenDaoGenerator/src/main/java/dev/iconpln/greendaogenerator/MainGenerator.java	(revision 6e01942d95cef7d02a00aab00432386f5bb65c80)
-+++ b/greenDaoGenerator/src/main/java/dev/iconpln/greendaogenerator/MainGenerator.java	(date 1675236436537)
-@@ -219,7 +219,7 @@
-         tPosPenerimaan.addStringProperty("PetugasPenerima");
-         tPosPenerimaan.addStringProperty("NamaKurir");
-         tPosPenerimaan.addStringProperty("NamaEkspedisi");
--        tPosPenerimaan.addIntProperty("isChecked");
-+        tPosPenerimaan.addIntProperty("isDone");
- 
-         // endregion
- 
-Index: app/src/main/java/dev/iconpln/mims/ui/pnerimaan/detail_penerimaan/DetailPenerimaanActivity.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package dev.iconpln.mims.ui.pnerimaan.detail_penerimaan\r\n\r\nimport android.Manifest\r\nimport android.annotation.SuppressLint\r\nimport android.app.DatePickerDialog\r\nimport android.content.Intent\r\nimport android.content.pm.PackageManager\r\nimport android.graphics.Bitmap\r\nimport android.graphics.BitmapFactory\r\nimport android.os.Bundle\r\nimport android.provider.MediaStore\r\nimport android.util.Log\r\nimport android.widget.Toast\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.cardview.widget.CardView\r\nimport androidx.core.app.ActivityCompat\r\nimport androidx.core.content.ContextCompat\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport com.google.android.material.bottomsheet.BottomSheetDialog\r\nimport com.journeyapps.barcodescanner.ScanContract\r\nimport com.journeyapps.barcodescanner.ScanIntentResult\r\nimport com.journeyapps.barcodescanner.ScanOptions\r\nimport dev.iconpln.mims.MyApplication\r\nimport dev.iconpln.mims.R\r\nimport dev.iconpln.mims.data.local.database.*\r\nimport dev.iconpln.mims.data.local.database_local.GenericReport\r\nimport dev.iconpln.mims.data.local.database_local.ReportParameter\r\nimport dev.iconpln.mims.data.local.database_local.ReportUploader\r\nimport dev.iconpln.mims.data.remote.service.ApiConfig\r\nimport dev.iconpln.mims.data.scan.CustomScanActivity\r\nimport dev.iconpln.mims.databinding.ActivityDetailPenerimaanBinding\r\nimport dev.iconpln.mims.tasks.Loadable\r\nimport dev.iconpln.mims.tasks.TambahReportTask\r\nimport dev.iconpln.mims.ui.pnerimaan.PenerimaanActivity\r\nimport dev.iconpln.mims.ui.transmission_history.TransmissionActivity\r\nimport dev.iconpln.mims.utils.SessionManager\r\nimport dev.iconpln.mims.utils.SharedPrefsUtils\r\nimport dev.iconpln.mims.utils.StorageUtils\r\nimport org.joda.time.DateTime\r\nimport java.io.File\r\nimport java.io.FileOutputStream\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\n\r\n\r\nclass DetailPenerimaanActivity : AppCompatActivity(),Loadable {\r\n    private lateinit var daoSession: DaoSession\r\n    private lateinit var session: SessionManager\r\n    private lateinit var binding: ActivityDetailPenerimaanBinding\r\n    private lateinit var adapter: DetailPenerimaanAdapter\r\n    private val cameraRequestFotoBarang = 101\r\n    private val cameraRequestFotoBarangGallery = 102\r\n    private val cameraRequestFotoSuratBarang = 103\r\n    private val cameraRequestFotoSuratBarangGallery = 104\r\n    private var filePathFotoBarang: String = \"\"\r\n    private var filePathFotoSuratBarang: String = \"\"\r\n    private lateinit var cal: Calendar\r\n    private var noDo: String = \"\"\r\n    private lateinit var data: TPosPenerimaan\r\n    private lateinit var packagings: List<TPosDetailPenerimaan>\r\n    private lateinit var dataDetailPenerimaan: TPosDetailPenerimaan\r\n\r\n    @SuppressLint(\"SuspiciousIndentation\")\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        binding = ActivityDetailPenerimaanBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n        daoSession = (application as MyApplication).daoSession!!\r\n        cal = Calendar.getInstance()\r\n        session = SessionManager(this)\r\n\r\n        noDo = intent.getStringExtra(\"do\").toString()\r\n\r\n        data = daoSession.tPosPenerimaanDao.queryBuilder().where(TPosPenerimaanDao.Properties.NoDoSmar.eq(noDo)).limit(1).unique()\r\n        packagings = daoSession.tPosDetailPenerimaanDao.queryBuilder().where(TPosDetailPenerimaanDao.Properties.NoDoSmar.eq(noDo)).list()\r\n        dataDetailPenerimaan = daoSession.tPosDetailPenerimaanDao.queryBuilder().where(TPosDetailPenerimaanDao.Properties.NoDoSmar.eq(noDo)).limit(1).unique()\r\n\r\n        adapter = DetailPenerimaanAdapter(arrayListOf(), object : DetailPenerimaanAdapter.OnAdapterListener{\r\n            override fun onClick(po: TPosDetailPenerimaan) {}\r\n\r\n        }, daoSession)\r\n\r\n        with(binding){\r\n            recyclerView2.adapter = adapter\r\n            recyclerView2.setHasFixedSize(true)\r\n            recyclerView2.layoutManager = LinearLayoutManager(this@DetailPenerimaanActivity, LinearLayoutManager.VERTICAL, false)\r\n\r\n            btnBack.setOnClickListener { startActivity(Intent(this@DetailPenerimaanActivity, TransmissionActivity::class.java)) }\r\n\r\n            val dateSetListener = DatePickerDialog.OnDateSetListener { view, year, monthOfYear, dayOfMonth ->\r\n                cal.set(Calendar.YEAR, year)\r\n                cal.set(Calendar.MONTH, monthOfYear)\r\n                cal.set(Calendar.DAY_OF_MONTH, dayOfMonth)\r\n\r\n                val myFormat = \"dd-MM-yyyy\" // mention the format you need\r\n                val sdf = SimpleDateFormat(myFormat, Locale.US)\r\n                edtTanggalDiterima.setText(sdf.format(cal.time))\r\n\r\n            }\r\n\r\n            edtTanggalDiterima.setOnClickListener{\r\n                DatePickerDialog(this@DetailPenerimaanActivity, dateSetListener,\r\n                    cal.get(Calendar.YEAR),\r\n                    cal.get(Calendar.MONTH),\r\n                    cal.get(Calendar.DAY_OF_MONTH)).show()\r\n            }\r\n\r\n            btnFotoSuratBarang.setOnClickListener {\r\n                if (ContextCompat.checkSelfPermission(applicationContext, Manifest.permission.CAMERA) == PackageManager.PERMISSION_DENIED)\r\n                    ActivityCompat.requestPermissions(this@DetailPenerimaanActivity, arrayOf(Manifest.permission.CAMERA), cameraRequestFotoSuratBarang)\r\n\r\n                val dialog = BottomSheetDialog(this@DetailPenerimaanActivity, R.style.AppBottomSheetDialogTheme)\r\n                val view = layoutInflater.inflate(R.layout.bottom_sheet_dialog_photo, null)\r\n                var btnCamera = view.findViewById<CardView>(R.id.cv_kamera)\r\n                var btnGallery = view.findViewById<CardView>(R.id.cv_gallery)\r\n\r\n                btnCamera.setOnClickListener {\r\n                    val cameraIntent = Intent(MediaStore.ACTION_IMAGE_CAPTURE)\r\n                    startActivityForResult(cameraIntent, cameraRequestFotoSuratBarang)\r\n                    dialog.dismiss()\r\n                }\r\n\r\n                btnGallery.setOnClickListener {\r\n                    val photoPickerIntent = Intent(Intent.ACTION_PICK)\r\n                    photoPickerIntent.type = \"image/*\"\r\n                    startActivityForResult(photoPickerIntent, cameraRequestFotoSuratBarangGallery)\r\n                    dialog.dismiss()\r\n                }\r\n\r\n                dialog.setCancelable(true)\r\n                dialog.setContentView(view)\r\n                dialog.show()\r\n            }\r\n\r\n            btnFotoBarang.setOnClickListener {\r\n                if (ContextCompat.checkSelfPermission(applicationContext, Manifest.permission.CAMERA) == PackageManager.PERMISSION_DENIED)\r\n                    ActivityCompat.requestPermissions(this@DetailPenerimaanActivity, arrayOf(Manifest.permission.CAMERA), cameraRequestFotoSuratBarang)\r\n\r\n                val dialog = BottomSheetDialog(this@DetailPenerimaanActivity, R.style.AppBottomSheetDialogTheme)\r\n                val view = layoutInflater.inflate(R.layout.bottom_sheet_dialog_photo, null)\r\n                var btnCamera = view.findViewById<CardView>(R.id.cv_kamera)\r\n                var btnGallery = view.findViewById<CardView>(R.id.cv_gallery)\r\n\r\n                btnCamera.setOnClickListener {\r\n                    val cameraIntent = Intent(MediaStore.ACTION_IMAGE_CAPTURE)\r\n                    startActivityForResult(cameraIntent, cameraRequestFotoBarang)\r\n                    dialog.dismiss()\r\n                }\r\n\r\n                btnGallery.setOnClickListener {\r\n                    val photoPickerIntent = Intent(Intent.ACTION_PICK)\r\n                    photoPickerIntent.type = \"image/*\"\r\n                    startActivityForResult(photoPickerIntent, cameraRequestFotoBarangGallery)\r\n                    dialog.dismiss()\r\n                }\r\n\r\n                dialog.setCancelable(true)\r\n                dialog.setContentView(view)\r\n                dialog.show()\r\n            }\r\n\r\n            barcode2.setOnClickListener {\r\n                openScanner()\r\n            }\r\n\r\n            btnSimpan.setOnClickListener {\r\n                validatete()\r\n            }\r\n            txtPrimaryOrder.text = dataDetailPenerimaan.noDoMims\r\n            txtNoDo.text = dataDetailPenerimaan.noDoSmar\r\n            txtPlant.text = dataDetailPenerimaan.plantName\r\n            txtTlsk.text = \"01111220011111\"\r\n            txtUnit.text = dataDetailPenerimaan.uom\r\n            txtKurirPengiriman.text = \"-\"\r\n            txtPetugasPengiriman.text = \"-\"\r\n            txtStoreloc.text = dataDetailPenerimaan.storLoc\r\n            txtTglKirim.text = dataDetailPenerimaan.createdDate\r\n            txtVendor.text = dataDetailPenerimaan.plantName\r\n        }\r\n\r\n        setPackagingList()\r\n        setCardData()\r\n    }\r\n\r\n    private fun validatete() {\r\n        if (filePathFotoSuratBarang.isNullOrEmpty()){\r\n            Toast.makeText(this, \"Ambil foto barang terlebih dahulu\", Toast.LENGTH_SHORT).show()\r\n            return\r\n        }\r\n\r\n        if (filePathFotoBarang.isNullOrEmpty()){\r\n            Toast.makeText(this, \"Ambil foto surat barang terlebih dahulu\", Toast.LENGTH_SHORT).show()\r\n            return\r\n        }\r\n\r\n        if (binding.edtEkspedisi.text.toString().isNullOrEmpty()){\r\n            Toast.makeText(this, \"Harap lengkapi data\", Toast.LENGTH_SHORT).show()\r\n            return\r\n        }\r\n\r\n        if (binding.edtPetugasPenerima.text.toString().isNullOrEmpty()){\r\n            Toast.makeText(this, \"Harap lengkapi data\", Toast.LENGTH_SHORT).show()\r\n            return\r\n        }\r\n\r\n        if (binding.edtTanggalDiterima.text.toString().isNullOrEmpty()){\r\n            Toast.makeText(this, \"Harap lengkapi data\", Toast.LENGTH_SHORT).show()\r\n            return\r\n        }\r\n\r\n        if (binding.edtNamaKurir.text.toString().isNullOrEmpty()){\r\n            Toast.makeText(this, \"Harap lengkapi data\", Toast.LENGTH_SHORT).show()\r\n            return\r\n        }\r\n\r\n        submitForm()\r\n    }\r\n\r\n    private fun submitForm() {\r\n        val reports = java.util.ArrayList<GenericReport>()\r\n        val list = daoSession.tPosDetailPenerimaanDao.queryBuilder().whereOr(\r\n            TPosDetailPenerimaanDao.Properties.IsDone.eq(\"1\",),TPosDetailPenerimaanDao.Properties.NoDoSmar.eq(noDo)\r\n        ).list()\r\n        var packagings = \"\"\r\n        for (i in list){\r\n            packagings += \"${i.noPackaging},\"\r\n            Log.i(\"noPackaging\", i.noPackaging)\r\n\r\n        }\r\n        if (packagings != \"\") {\r\n            packagings = packagings.substring(0, packagings.length - 1)\r\n        }\r\n\r\n        with(binding){\r\n            data.petugasPenerima = edtPetugasPenerima.text.toString()\r\n            data.namaEkspedisi = edtEkspedisi.text.toString()\r\n            data.namaKurir = edtNamaKurir.text.toString()\r\n            data.photoSuratBarang = filePathFotoSuratBarang\r\n            data.photoBarang = filePathFotoBarang\r\n            data.tanggalDiterima = edtTanggalDiterima.text.toString()\r\n            data.isChecked = 1\r\n            daoSession.update(data)\r\n\r\n\r\n            var item = TPemeriksaan()\r\n            item.noPemeriksaan = \"V.${data.noDoSmar}.${ DateTime.now().toString(\"yyMMddHHmmssSS\")}\"\r\n            item.createdDate = data.createdDate\r\n            item.leadTime = data.leadTime\r\n            item.storloc = data.storLoc\r\n            item.noDoSmar = data.noDoSmar\r\n            item.planCodeNo = data.planCodeNo\r\n            item.plantName = data.plantName\r\n            item.poMpNo = data.poMpNo\r\n            item.poSapNo = data.poSapNo\r\n            item.storLoc = data.storLoc\r\n            item.tlskNo = data.tlskNo\r\n            item.total = data.total\r\n            item.kdPabrikan = data.kdPabrikan\r\n            item.materialGroup = data.materialGroup\r\n            item.namaKategoriMaterial = data.namaKategoriMaterial\r\n            item.noDoMims = data.noDoMims\r\n            item.tanggalDiterima = data.tanggalDiterima\r\n            item.namaKurir = data.namaKurir\r\n            item.namaEkspedisi = data.namaEkspedisi\r\n            item.petugasPenerima = data.petugasPenerima\r\n            item.isDone = 0\r\n\r\n            //baru\r\n            item.namaKetua = \"\"\r\n            item.namaManager = \"\"\r\n            item.namaSekretaris = \"\"\r\n            item.anggota = \"\"\r\n            item.ratingPenerimaan = \"\"\r\n            item.descPenerimaan = \"\"\r\n            item.ratingQuality = \"\"\r\n            item.descQuality = \"\"\r\n            item.ratingWaktu = \"\"\r\n            item.descWaktu = \"\"\r\n            item.ratingPath = \"\"\r\n            item.packangings = packagings\r\n            item.state = 1\r\n            item.isDone = 0\r\n            daoSession.insert(item)\r\n\r\n            var jwt = SharedPrefsUtils.getStringPreference(this@DetailPenerimaanActivity,\"jwt\",\"\")\r\n            var username = SharedPrefsUtils.getStringPreference(this@DetailPenerimaanActivity, \"username\",\"\")\r\n            var email = SharedPrefsUtils.getStringPreference(this@DetailPenerimaanActivity, \"email\",\"\")\r\n            val currentDate = DateTime.now().toString(\"yyyy-MM-dd\")\r\n            val reportId = \"Penerimaan\" + DateTime.now().toString(\"yMdHmsSSS\")\r\n            val reportName = \"Penerimaan\"\r\n            val reportDescription = \"Penerimaan-${item.noDoSmar}-${item.packangings}-${DateTime.now().toString(\"yyyy-MM-dd\")}\"\r\n            val params = ArrayList<ReportParameter>()\r\n            params.add(ReportParameter(\"1\", reportId, \"plant_code_no\", item.planCodeNo, ReportParameter.TEXT ))\r\n            params.add(ReportParameter(\"2\", reportId, \"no_do_smar\", item.noDoSmar, ReportParameter.TEXT ))\r\n            params.add(ReportParameter(\"3\", reportId, \"no_mat_sap\", dataDetailPenerimaan.noMatSap, ReportParameter.TEXT ))\r\n            params.add(ReportParameter(\"4\", reportId, \"penerima\", item.petugasPenerima, ReportParameter.TEXT ))\r\n            params.add(ReportParameter(\"5\", reportId, \"tanggal\", item.tanggalDiterima, ReportParameter.TEXT ))\r\n            params.add(ReportParameter(\"6\", reportId, \"kurir\", item.namaKurir, ReportParameter.TEXT ))\r\n            params.add(ReportParameter(\"7\", reportId, \"ekspedisi\", item.namaEkspedisi, ReportParameter.TEXT ))\r\n            params.add(ReportParameter(\"8\", reportId, \"quantity\", dataDetailPenerimaan.qty, ReportParameter.TEXT ))\r\n            params.add(ReportParameter(\"9\", reportId, \"username\", username!!, ReportParameter.TEXT ))\r\n            params.add(ReportParameter(\"10\", reportId, \"email\",email!! , ReportParameter.TEXT ))\r\n            params.add(ReportParameter(\"11\", reportId, \"no_packagings\", packagings, ReportParameter.TEXT ))\r\n            params.add(ReportParameter(\"12\", reportId, \"photo_file\", filePathFotoBarang, ReportParameter.FILE ))\r\n            params.add(ReportParameter(\"13\", reportId, \"photo_file2\", filePathFotoSuratBarang, ReportParameter.FILE ))\r\n            val reportPenerimaan = GenericReport(reportId, username, reportName, reportDescription, ApiConfig.sendPenerimaan(), currentDate, 0, 11119209101, params)\r\n            reports.add(reportPenerimaan)\r\n\r\n        }\r\n\r\n        val task = TambahReportTask(this, reports)\r\n        task.execute()\r\n\r\n        val iService = Intent(this, ReportUploader::class.java)\r\n        startService(iService)\r\n    }\r\n\r\n    private fun setCardData() {}\r\n\r\n    private fun setPackagingList() {\r\n        adapter.setPoList(packagings)\r\n    }\r\n\r\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\r\n        super.onActivityResult(requestCode, resultCode, data)\r\n\r\n        if (resultCode == RESULT_OK && requestCode == cameraRequestFotoSuratBarangGallery){\r\n            val imageUri = data?.data\r\n            val imageStream = contentResolver.openInputStream(imageUri!!)\r\n            val bitmap: Bitmap = BitmapFactory.decodeStream(imageStream)\r\n\r\n            val file_path = StorageUtils.getDirectory(StorageUtils.DIRECTORY_ROOT) +\r\n                    \"/Images\"\r\n            val dir = File(file_path)\r\n            if (!dir.exists()) dir.mkdirs()\r\n            val file = File(dir, \"mims\" + \"picturesFotoSuratBarang${UUID.randomUUID()}\" + \".png\")\r\n            val fOut = FileOutputStream(file)\r\n\r\n            bitmap.compress(Bitmap.CompressFormat.PNG, 85, fOut)\r\n            fOut.flush()\r\n            fOut.close()\r\n\r\n            binding.idFileName.setImageBitmap(bitmap)\r\n            filePathFotoSuratBarang = file.toString()\r\n\r\n        }else{\r\n            Log.d(\"cancel\", \"cacelPhoto\")\r\n        }\r\n\r\n        if (resultCode == RESULT_OK && requestCode == cameraRequestFotoBarangGallery){\r\n            val imageUri = data?.data\r\n            val imageStream = contentResolver.openInputStream(imageUri!!)\r\n            val bitmap: Bitmap = BitmapFactory.decodeStream(imageStream)\r\n\r\n            val file_path = StorageUtils.getDirectory(StorageUtils.DIRECTORY_ROOT) +\r\n                    \"/Images\"\r\n            val dir = File(file_path)\r\n            if (!dir.exists()) dir.mkdirs()\r\n            val file = File(dir, \"mims\" + \"picturesFotoBarang${UUID.randomUUID()}\" + \".png\")\r\n            val fOut = FileOutputStream(file)\r\n\r\n            bitmap.compress(Bitmap.CompressFormat.PNG, 85, fOut)\r\n            fOut.flush()\r\n            fOut.close()\r\n\r\n            binding.idFileNameBarang.setImageBitmap(bitmap)\r\n            filePathFotoBarang = file.toString()\r\n        }else{\r\n            Log.d(\"cancel\", \"cacelPhoto\")\r\n        }\r\n\r\n        if (resultCode == RESULT_OK && requestCode == cameraRequestFotoSuratBarang){\r\n            val bitmap: Bitmap = data?.extras?.get(\"data\") as Bitmap\r\n\r\n            val file_path = StorageUtils.getDirectory(StorageUtils.DIRECTORY_ROOT) +\r\n                    \"/Images\"\r\n            val dir = File(file_path)\r\n            if (!dir.exists()) dir.mkdirs()\r\n            val file = File(dir, \"mims\" + \"picturesFotoSuratBarang${UUID.randomUUID()}\" + \".png\")\r\n            val fOut = FileOutputStream(file)\r\n\r\n            bitmap.compress(Bitmap.CompressFormat.PNG, 85, fOut)\r\n            fOut.flush()\r\n            fOut.close()\r\n\r\n            binding.idFileName.setImageBitmap(bitmap)\r\n            filePathFotoSuratBarang = file.toString()\r\n\r\n        }else{\r\n            Log.d(\"cancel\", \"cacelPhoto\")\r\n        }\r\n\r\n        if (resultCode == RESULT_OK && requestCode == cameraRequestFotoBarang){\r\n            val bitmap: Bitmap = data?.extras?.get(\"data\") as Bitmap\r\n\r\n            val file_path = StorageUtils.getDirectory(StorageUtils.DIRECTORY_ROOT) +\r\n                    \"/Images\"\r\n            val dir = File(file_path)\r\n            if (!dir.exists()) dir.mkdirs()\r\n            val file = File(dir, \"mims\" + \"picturesFotoBarang${UUID.randomUUID()}\" + \".png\")\r\n            val fOut = FileOutputStream(file)\r\n\r\n            bitmap.compress(Bitmap.CompressFormat.PNG, 85, fOut)\r\n            fOut.flush()\r\n            fOut.close()\r\n\r\n            binding.idFileNameBarang.setImageBitmap(bitmap)\r\n            filePathFotoBarang = file.toString()\r\n        }else{\r\n            Log.d(\"cancel\", \"cacelPhoto\")\r\n        }\r\n    }\r\n\r\n    override fun setLoading(show: Boolean, title: String, message: String) {}\r\n\r\n    override fun setFinish(result: Boolean, message: String) {\r\n        if (result){\r\n            Toast.makeText(this, message, Toast.LENGTH_LONG).show()\r\n            startActivity(Intent(this@DetailPenerimaanActivity, PenerimaanActivity::class.java))\r\n            finish()\r\n        }\r\n    }\r\n\r\n    private fun openScanner() {\r\n        val scan = ScanOptions()\r\n        scan.setDesiredBarcodeFormats(ScanOptions.ALL_CODE_TYPES)\r\n        scan.setCameraId(0)\r\n        scan.setBeepEnabled(true)\r\n        scan.setBarcodeImageEnabled(true)\r\n        scan.captureActivity = CustomScanActivity::class.java\r\n        barcodeLauncher.launch(scan)\r\n    }\r\n\r\n    private val barcodeLauncher = registerForActivityResult(\r\n        ScanContract()\r\n    ) { result: ScanIntentResult ->\r\n        try {\r\n            if (!result.contents.isNullOrEmpty()) {\r\n\r\n                val data = daoSession.tPosDetailPenerimaanDao.queryBuilder().where(TPosDetailPenerimaanDao.Properties.NoPackaging.eq(result.contents)).limit(1).unique()\r\n                data.isDone = 1\r\n                daoSession.update(data)\r\n\r\n                adapter.setPoList(packagings)\r\n                Toast.makeText(this@DetailPenerimaanActivity, \"Scanning success : ${result.contents}\",Toast.LENGTH_SHORT).show()\r\n            }\r\n        }catch (e: Exception){\r\n            Log.e(\"checkException\", e.toString())\r\n        }\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/dev/iconpln/mims/ui/pnerimaan/detail_penerimaan/DetailPenerimaanActivity.kt b/app/src/main/java/dev/iconpln/mims/ui/pnerimaan/detail_penerimaan/DetailPenerimaanActivity.kt
---- a/app/src/main/java/dev/iconpln/mims/ui/pnerimaan/detail_penerimaan/DetailPenerimaanActivity.kt	(revision 6e01942d95cef7d02a00aab00432386f5bb65c80)
-+++ b/app/src/main/java/dev/iconpln/mims/ui/pnerimaan/detail_penerimaan/DetailPenerimaanActivity.kt	(date 1675236813702)
-@@ -238,7 +238,7 @@
-             data.photoSuratBarang = filePathFotoSuratBarang
-             data.photoBarang = filePathFotoBarang
-             data.tanggalDiterima = edtTanggalDiterima.text.toString()
--            data.isChecked = 1
-+            data.isDone = 1
-             daoSession.update(data)
- 
- 
-Index: app/src/main/java/dev/iconpln/mims/ui/pnerimaan/PenerimaanAdapter.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package dev.iconpln.mims.ui.pnerimaan\r\n\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport dev.iconpln.mims.data.local.database.TPosPenerimaan\r\nimport dev.iconpln.mims.databinding.ItemDataPenerimaanBinding\r\nimport dev.iconpln.mims.databinding.ItemDataRatingBinding\r\n\r\nclass PenerimaanAdapter(val lisModels: MutableList<TPosPenerimaan>, var listener: OnAdapterListener)\r\n    : RecyclerView.Adapter<PenerimaanAdapter.ViewHolder>() {\r\n\r\n    fun setPoList(po: List<TPosPenerimaan>){\r\n        lisModels.clear()\r\n        lisModels.addAll(po)\r\n        notifyDataSetChanged()\r\n    }\r\n\r\n    override fun onCreateViewHolder(\r\n        parent: ViewGroup,\r\n        viewType: Int\r\n    ): ViewHolder {\r\n        val binding = ItemDataPenerimaanBinding.inflate(LayoutInflater.from(parent.context), parent, false)\r\n        return ViewHolder(binding)\r\n    }\r\n\r\n    override fun onBindViewHolder(holder: ViewHolder, position: Int) {\r\n        holder.bind(lisModels[position])\r\n    }\r\n\r\n    override fun getItemCount(): Int = lisModels.size\r\n\r\n    inner class ViewHolder(val binding: ItemDataPenerimaanBinding): RecyclerView.ViewHolder(binding.root){\r\n        fun bind(po : TPosPenerimaan){\r\n            with(binding){\r\n                txtDeliveryOrder.text = po.noDoSmar\r\n                txtStatusPenerimaan.text = po.doStatus\r\n                txtStatusPemeriksaan.text = \"-\"\r\n                txtVendorAsal.text = po.plantName\r\n                txtTglKirim.text = \"Tanggal dikirim ${po.createdDate}\"\r\n                txtUnitTujuan.text = \"-\"\r\n\r\n                if(po.isChecked == 1){\r\n                    isChecked.visibility = View.VISIBLE\r\n                }else{\r\n                    isChecked.visibility = View.GONE\r\n                }\r\n            }\r\n\r\n            itemView.setOnClickListener { listener.onClick(po) }\r\n        }\r\n    }\r\n\r\n    interface OnAdapterListener{\r\n        fun onClick(po: TPosPenerimaan)\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/dev/iconpln/mims/ui/pnerimaan/PenerimaanAdapter.kt b/app/src/main/java/dev/iconpln/mims/ui/pnerimaan/PenerimaanAdapter.kt
---- a/app/src/main/java/dev/iconpln/mims/ui/pnerimaan/PenerimaanAdapter.kt	(revision 6e01942d95cef7d02a00aab00432386f5bb65c80)
-+++ b/app/src/main/java/dev/iconpln/mims/ui/pnerimaan/PenerimaanAdapter.kt	(date 1675236813707)
-@@ -41,7 +41,7 @@
-                 txtTglKirim.text = "Tanggal dikirim ${po.createdDate}"
-                 txtUnitTujuan.text = "-"
- 
--                if(po.isChecked == 1){
-+                if(po.isDone == 1){
-                     isChecked.visibility = View.VISIBLE
-                 }else{
-                     isChecked.visibility = View.GONE
-Index: app/src/main/java/dev/iconpln/mims/ui/pnerimaan/PenerimaanActivity.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package dev.iconpln.mims.ui.pnerimaan\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.text.Editable\r\nimport android.text.TextWatcher\r\nimport android.view.View\r\nimport android.widget.ArrayAdapter\r\nimport android.widget.Toast\r\nimport androidx.activity.viewModels\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport dev.iconpln.mims.MyApplication\r\nimport dev.iconpln.mims.data.local.database.DaoSession\r\nimport dev.iconpln.mims.data.local.database.TPosDetailPenerimaanDao\r\nimport dev.iconpln.mims.data.local.database.TPosPenerimaan\r\nimport dev.iconpln.mims.databinding.ActivityPenerimaanBinding\r\nimport dev.iconpln.mims.ui.pnerimaan.detail_penerimaan.DetailPenerimaanActivity\r\n\r\n\r\nclass PenerimaanActivity : AppCompatActivity() {\r\n    private lateinit var binding: ActivityPenerimaanBinding\r\n    private val viewModel: PenerimaanViewModel by viewModels()\r\n    private lateinit var daoSession: DaoSession\r\n    private lateinit var adapter: PenerimaanAdapter\r\n    private var noDo: String = \"\"\r\n    private var statusPenerimaan: String = \"\"\r\n    private lateinit var listPenerimaan:  List<TPosPenerimaan>\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        binding = ActivityPenerimaanBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n        daoSession = (application as MyApplication).daoSession!!\r\n\r\n        listPenerimaan = daoSession.tPosPenerimaanDao.queryBuilder().list()\r\n\r\n        viewModel.getPenerimaan(daoSession, listPenerimaan)\r\n\r\n        adapter = PenerimaanAdapter(arrayListOf(), object : PenerimaanAdapter.OnAdapterListener{\r\n            override fun onClick(po: TPosPenerimaan) {\r\n                val listDetailPenerimaan = daoSession.tPosDetailPenerimaanDao.queryBuilder()\r\n                    .where(TPosDetailPenerimaanDao.Properties.NoDoSmar.eq(po.noDoSmar)).list()\r\n\r\n                if (po.isChecked == 1){\r\n                    Toast.makeText(this@PenerimaanActivity, \"Anda sudah melakukan penerimaan\", Toast.LENGTH_SHORT).show()\r\n                }else{\r\n                    viewModel.insertDetailPenerimaan(daoSession,po.noDoSmar,listDetailPenerimaan)\r\n\r\n                    startActivity(Intent(this@PenerimaanActivity, DetailPenerimaanActivity::class.java)\r\n                        .putExtra(\"do\", po.noDoSmar))\r\n                }\r\n            }\r\n\r\n        })\r\n\r\n        viewModel.penerimaanResponse.observe(this){\r\n            adapter.setPoList(listPenerimaan)\r\n        }\r\n\r\n        with(binding){\r\n            rvPenerimaan.adapter = adapter\r\n            rvPenerimaan.setHasFixedSize(true)\r\n            rvPenerimaan.layoutManager = LinearLayoutManager(this@PenerimaanActivity, LinearLayoutManager.VERTICAL, false)\r\n\r\n            val statusArray = arrayOf(\r\n                \"DIKIRIM\",\r\n                \"REJECTED\",\r\n                \"PROCESSED\",\r\n                \"APPROVED\"\r\n            )\r\n            val adapterStatus = ArrayAdapter(this@PenerimaanActivity, android.R.layout.simple_dropdown_item_1line, statusArray)\r\n            dropdownStatusPenerimaan.setAdapter(adapterStatus)\r\n            dropdownStatusPenerimaan.setOnItemClickListener { parent, view, position, id ->\r\n                statusPenerimaan = statusArray[position]\r\n                if (noDo.isNotEmpty()){\r\n                    val filter = listPenerimaan.filter { it.noDoSmar.lowercase().contains(noDo.lowercase())\r\n                            && it.doStatus.lowercase().contains(statusPenerimaan.lowercase())}\r\n                    adapter.setPoList(filter)\r\n                }else{\r\n                    val filter = listPenerimaan.filter { it.doStatus.lowercase().contains(statusArray[position].lowercase()) }\r\n                    adapter.setPoList(filter)\r\n                }\r\n            }\r\n\r\n            srcNomorPoDo.addTextChangedListener(object : TextWatcher{\r\n                override fun beforeTextChanged(\r\n                    s: CharSequence?,\r\n                    start: Int,\r\n                    count: Int,\r\n                    after: Int\r\n                ) {}\r\n\r\n                override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {}\r\n\r\n                override fun afterTextChanged(s: Editable?) {\r\n                    noDo = s.toString()\r\n                    if (statusPenerimaan.isNotEmpty()){\r\n                        val filter = listPenerimaan.filter { it.noDoSmar.lowercase().contains(s.toString().lowercase())\r\n                                && it.doStatus.lowercase().contains(statusPenerimaan.lowercase())}\r\n                        adapter.setPoList(filter)\r\n                    }else{\r\n                        val filter = listPenerimaan.filter { it.noDoSmar.lowercase().contains(s.toString().lowercase()) }\r\n                        adapter.setPoList(filter)\r\n                    }\r\n                }\r\n\r\n            })\r\n\r\n            viewModel.isLoading.observe(this@PenerimaanActivity){\r\n                when(it){\r\n                    true -> progressBar.visibility = View.VISIBLE\r\n                    false -> progressBar.visibility = View.GONE\r\n                }\r\n            }\r\n        }\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/dev/iconpln/mims/ui/pnerimaan/PenerimaanActivity.kt b/app/src/main/java/dev/iconpln/mims/ui/pnerimaan/PenerimaanActivity.kt
---- a/app/src/main/java/dev/iconpln/mims/ui/pnerimaan/PenerimaanActivity.kt	(revision 6e01942d95cef7d02a00aab00432386f5bb65c80)
-+++ b/app/src/main/java/dev/iconpln/mims/ui/pnerimaan/PenerimaanActivity.kt	(date 1675246974302)
-@@ -32,18 +32,15 @@
-         binding = ActivityPenerimaanBinding.inflate(layoutInflater)
-         setContentView(binding.root)
-         daoSession = (application as MyApplication).daoSession!!
--
-         listPenerimaan = daoSession.tPosPenerimaanDao.queryBuilder().list()
- 
--        viewModel.getPenerimaan(daoSession, listPenerimaan)
--
-         adapter = PenerimaanAdapter(arrayListOf(), object : PenerimaanAdapter.OnAdapterListener{
-             override fun onClick(po: TPosPenerimaan) {
-                 val listDetailPenerimaan = daoSession.tPosDetailPenerimaanDao.queryBuilder()
-                     .where(TPosDetailPenerimaanDao.Properties.NoDoSmar.eq(po.noDoSmar)).list()
- 
--                if (po.isChecked == 1){
--                    Toast.makeText(this@PenerimaanActivity, "Anda sudah melakukan penerimaan", Toast.LENGTH_SHORT).show()
-+                if (po.isDone == 1){
-+                    Toast.makeText(this@PenerimaanActivity, "Anda sudah melakukan penerimaan ini", Toast.LENGTH_SHORT).show()
-                 }else{
-                     viewModel.insertDetailPenerimaan(daoSession,po.noDoSmar,listDetailPenerimaan)
- 
-@@ -54,9 +51,7 @@
- 
-         })
- 
--        viewModel.penerimaanResponse.observe(this){
--            adapter.setPoList(listPenerimaan)
--        }
-+        adapter.setPoList(listPenerimaan)
- 
-         with(binding){
-             rvPenerimaan.adapter = adapter
-@@ -106,13 +101,6 @@
-                 }
- 
-             })
--
--            viewModel.isLoading.observe(this@PenerimaanActivity){
--                when(it){
--                    true -> progressBar.visibility = View.VISIBLE
--                    false -> progressBar.visibility = View.GONE
--                }
--            }
-         }
-     }
- }
-\ No newline at end of file
-Index: app/src/main/java/dev/iconpln/mims/ui/home/HomeFragment.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package dev.iconpln.mims.ui.home\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Button\r\nimport android.widget.Toast\r\nimport androidx.cardview.widget.CardView\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.lifecycle.asLiveData\r\nimport androidx.lifecycle.lifecycleScope\r\nimport com.google.android.material.bottomsheet.BottomSheetDialog\r\nimport dev.iconpln.mims.MyApplication\r\nimport dev.iconpln.mims.R\r\nimport dev.iconpln.mims.databinding.FragmentHomeBinding\r\nimport dev.iconpln.mims.ui.auth.LoginActivity\r\nimport dev.iconpln.mims.ui.monitoring.MonitoringActivity\r\nimport dev.iconpln.mims.ui.pemeriksaan.PemeriksaanActivity\r\nimport dev.iconpln.mims.ui.pengiriman.PengirimanActivity\r\nimport dev.iconpln.mims.ui.pnerimaan.PenerimaanActivity\r\nimport dev.iconpln.mims.ui.rating.RatingActivity\r\nimport dev.iconpln.mims.ui.role.pabrikan.arttribute_material.DataAtributMaterialActivity\r\nimport dev.iconpln.mims.ui.role.pabrikan.pengujian.PengujianActivity\r\nimport dev.iconpln.mims.ui.tracking.TrackingHistoryActivity\r\nimport dev.iconpln.mims.ui.transmission_history.TransmissionActivity\r\nimport dev.iconpln.mims.utils.SessionManager\r\nimport kotlinx.coroutines.launch\r\n\r\nclass HomeFragment : Fragment() {\r\n\r\n    private var _binding: FragmentHomeBinding? = null\r\n    private val binding get() = _binding!!\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        // Inflate the layout for this fragment\r\n        _binding = FragmentHomeBinding.inflate(inflater, container, false)\r\n        val view = binding.root\r\n        return view\r\n    }\r\n\r\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n        super.onViewCreated(view, savedInstanceState)\r\n\r\n        val session = SessionManager(requireContext())\r\n        val daoSession = (requireActivity().application as MyApplication).daoSession!!\r\n\r\n\r\n        var listPrivilege = daoSession.tPrivilegeDao.queryBuilder().list()\r\n\r\n        binding.back.setOnClickListener {\r\n            startActivity(Intent(requireActivity(), TransmissionActivity::class.java))\r\n        }\r\n\r\n        binding.btnLogout.setOnClickListener {\r\n            val onLogout = Intent(requireContext(), LoginActivity::class.java)\r\n            onLogout.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)\r\n            onLogout.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK)\r\n\r\n            lifecycleScope.launch {\r\n                session.clearUserToken()\r\n            }\r\n            session.user_token.asLiveData().observe(viewLifecycleOwner) {\r\n                Log.d(\"MainActivity\", \"cek token : $it\")\r\n            }\r\n            onLogout.flags = Intent.FLAG_ACTIVITY_NEW_TASK\r\n            startActivity(onLogout)\r\n            activity?.finish()\r\n        }\r\n\r\n        binding.btnMonitoring.setOnClickListener {\r\n            startActivity(Intent(requireActivity(), MonitoringActivity::class.java))\r\n        }\r\n\r\n        binding.btnDataAttr.setOnClickListener {\r\n            startActivity(Intent(requireActivity(), DataAtributMaterialActivity::class.java))\r\n        }\r\n\r\n        binding.btnPengujian.setOnClickListener{\r\n            startActivity(Intent(requireActivity(), PengujianActivity::class.java))\r\n        }\r\n\r\n        binding.btnPenerimaan.setOnClickListener {\r\n            val dialog = BottomSheetDialog(requireActivity(), R.style.AppBottomSheetDialogTheme)\r\n            val view = layoutInflater.inflate(R.layout.bottom_sheet_dialog, null)\r\n            val btnPemeriksaan = view.findViewById<CardView>(R.id.cv_pemeriksaan)\r\n            val btnPenerimaan = view.findViewById<CardView>(R.id.cv_penerimaan)\r\n            val btnRating = view.findViewById<CardView>(R.id.cv_rating)\r\n\r\n            btnPenerimaan.setOnClickListener {\r\n                startActivity(Intent(requireActivity(), PenerimaanActivity::class.java))\r\n            }\r\n\r\n            btnPemeriksaan.setOnClickListener {\r\n                startActivity(Intent(requireActivity(), PemeriksaanActivity::class.java))\r\n            }\r\n\r\n            btnRating.setOnClickListener {\r\n                startActivity(Intent(requireActivity(), RatingActivity::class.java))\r\n            }\r\n\r\n            dialog.setCancelable(true)\r\n            dialog.setContentView(view)\r\n            dialog.show()\r\n        }\r\n\r\n        binding.btnTracking.setOnClickListener {\r\n            startActivity(Intent(requireActivity(), TrackingHistoryActivity::class.java))\r\n        }\r\n\r\n        binding.btnPengiriman.setOnClickListener {\r\n            startActivity(Intent(requireActivity(), PengirimanActivity::class.java))\r\n        }\r\n    }\r\n\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/dev/iconpln/mims/ui/home/HomeFragment.kt b/app/src/main/java/dev/iconpln/mims/ui/home/HomeFragment.kt
---- a/app/src/main/java/dev/iconpln/mims/ui/home/HomeFragment.kt	(revision 6e01942d95cef7d02a00aab00432386f5bb65c80)
-+++ b/app/src/main/java/dev/iconpln/mims/ui/home/HomeFragment.kt	(date 1675239655415)
-@@ -54,7 +54,7 @@
-         var listPrivilege = daoSession.tPrivilegeDao.queryBuilder().list()
- 
-         binding.back.setOnClickListener {
--            startActivity(Intent(requireActivity(), TransmissionActivity::class.java))
-+//            startActivity(Intent(requireActivity(), TransmissionActivity::class.java))
-         }
- 
-         binding.btnLogout.setOnClickListener {
-Index: app/src/main/res/layout/activity_monitoring_detail.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"#FFFFFF\"\r\n    tools:context=\".ui.monitoring.monitoring_detail.MonitoringDetailActivity\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView4\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"10dp\"\r\n        android:layout_marginTop=\"20dp\"\r\n        android:fontFamily=\"@font/montserrat_semibold\"\r\n        android:text=\"Detail Data Monitoring\"\r\n        android:textColor=\"@color/black\"\r\n        android:textSize=\"12sp\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/btn_close\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/btn_close\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginEnd=\"8dp\"\r\n        android:background=\"@drawable/btn_close\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/textView4\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/textView4\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/txt_nomorMaterial\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"23dp\"\r\n        android:layout_marginTop=\"20dp\"\r\n        android:text=\"No. Material\"\r\n        android:textColor=\"#3F3D56\"\r\n        android:textSize=\"14sp\"\r\n        android:textStyle=\"bold\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/btn_close\" />\r\n\r\n    <EditText\r\n        android:id=\"@+id/src_nomorMaterial\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"50dp\"\r\n        android:layout_marginStart=\"23dp\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:layout_marginEnd=\"25dp\"\r\n        android:background=\"@drawable/srchview\"\r\n        android:drawableEnd=\"@drawable/ic_search\"\r\n        android:fontFamily=\"@font/montserrat_reguler\"\r\n        android:hint=\"Search here\"\r\n        android:paddingLeft=\"20dp\"\r\n        android:paddingRight=\"20dp\"\r\n        android:textSize=\"12sp\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/txt_nomorMaterial\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/txt_no_packaging\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:fontFamily=\"@font/montserrat_reguler\"\r\n        android:text=\"No. Packaging\"\r\n        android:textColor=\"#3F3D56\"\r\n        android:textSize=\"16sp\"\r\n        android:textStyle=\"bold\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/txt_nomorMaterial\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/src_nomorMaterial\" />\r\n\r\n    <EditText\r\n        android:id=\"@+id/src_nomorPackaging\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"50dp\"\r\n        android:layout_marginStart=\"23dp\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:layout_marginEnd=\"25dp\"\r\n        android:background=\"@drawable/srchview\"\r\n        android:drawableEnd=\"@drawable/ic_search\"\r\n        android:fontFamily=\"@font/montserrat_reguler\"\r\n        android:hint=\"Search here\"\r\n        android:paddingLeft=\"20dp\"\r\n        android:paddingRight=\"20dp\"\r\n        android:textSize=\"12sp\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/txt_no_packaging\" />\r\n\r\n    <View\r\n        android:id=\"@+id/view4\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"1dp\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:background=\"#B9B9B9\"\r\n        app:layout_constraintEnd_toEndOf=\"@+id/src_nomorPackaging\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/src_nomorPackaging\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/src_nomorPackaging\" />\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/recyclerView\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"0dp\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:layout_marginBottom=\"10dp\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/txt_total_data\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/view4\"\r\n        tools:listitem=\"@layout/item_data_detail_purchase_order\"/>\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/layout/activity_monitoring_detail.xml b/app/src/main/res/layout/activity_monitoring_detail.xml
---- a/app/src/main/res/layout/activity_monitoring_detail.xml	(revision 6e01942d95cef7d02a00aab00432386f5bb65c80)
-+++ b/app/src/main/res/layout/activity_monitoring_detail.xml	(date 1675240398649)
-@@ -109,7 +109,6 @@
-         android:layout_height="0dp"
-         android:layout_marginTop="10dp"
-         android:layout_marginBottom="10dp"
--        app:layout_constraintBottom_toTopOf="@+id/txt_total_data"
-         app:layout_constraintEnd_toEndOf="parent"
-         app:layout_constraintStart_toStartOf="parent"
-         app:layout_constraintTop_toBottomOf="@+id/view4"
-Index: app/src/main/java/dev/iconpln/mims/utils/Constants.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package dev.iconpln.mims.utils\r\n\r\nobject Constants {\r\n//    const val BASE_URL = \"http://10.14.152.191:3000\"\r\n//    const val BASE_URL = \"https://b754-116-206-8-13.ap.ngrok.io\"\r\n    const val BASE_URL = \"http://10.14.96.65:5432\"\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/dev/iconpln/mims/utils/Constants.kt b/app/src/main/java/dev/iconpln/mims/utils/Constants.kt
---- a/app/src/main/java/dev/iconpln/mims/utils/Constants.kt	(revision 6e01942d95cef7d02a00aab00432386f5bb65c80)
-+++ b/app/src/main/java/dev/iconpln/mims/utils/Constants.kt	(date 1675240322343)
-@@ -1,7 +1,7 @@
- package dev.iconpln.mims.utils
- 
- object Constants {
--//    const val BASE_URL = "http://10.14.152.191:3000"
-+    const val BASE_URL = "http://10.14.152.191:3000"
- //    const val BASE_URL = "https://b754-116-206-8-13.ap.ngrok.io"
--    const val BASE_URL = "http://10.14.96.65:5432"
-+//    const val BASE_URL = "https://f0bc-116-206-8-57.ap.ngrok.io"
- }
-\ No newline at end of file
-Index: app/src/main/java/dev/iconpln/mims/ui/transmission_history/TransmissionActivity.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package dev.iconpln.mims.ui.transmission_history\r\n\r\nimport android.app.ActivityManager\r\nimport android.content.BroadcastReceiver\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.content.IntentFilter\r\nimport android.os.Bundle\r\nimport android.os.StrictMode\r\nimport android.util.Log\r\nimport android.widget.ArrayAdapter\r\nimport android.widget.Button\r\nimport android.widget.ListView\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport dev.iconpln.mims.MyApplication\r\nimport dev.iconpln.mims.R\r\nimport dev.iconpln.mims.data.local.database.DaoSession\r\nimport dev.iconpln.mims.data.local.database_local.DatabaseReport\r\nimport dev.iconpln.mims.data.local.database_local.ReportUploader\r\nimport dev.iconpln.mims.utils.DataController\r\nimport java.util.*\r\n\r\nclass TransmissionActivity : AppCompatActivity() {\r\n\r\n    private lateinit var reciever: MyBroadcastReciever\r\n    private lateinit var toSend: Array<String>\r\n    private lateinit var sent: Array<String>\r\n\r\n    private var adapterTerkirim: ArrayAdapter<String>? = null\r\n    private var adapterBelumTerkirim: ArrayAdapter<String>? = null\r\n    private var databaseReport: DatabaseReport? = null\r\n    private var listViewtoBeSent: ListView? = null\r\n    private var listViewSent: ListView? = null\r\n    private var switchOn = false\r\n    private var sending = false\r\n\r\n    private lateinit var btn : Button\r\n\r\n    private lateinit var daoSession: DaoSession\r\n\r\n    //region Privilege Variables\r\n    private lateinit var mPrivileges: Map<String, String>\r\n    private var mPageTitle: String = \"\"\r\n    private var mEmailSupport: String = \"\"\r\n    //endregion\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_transmission_history)\r\n        btn = findViewById(R.id.btn_start)\r\n        btn.setOnClickListener {\r\n            val iService = Intent(applicationContext, ReportUploader::class.java)\r\n            startService(iService)\r\n        }\r\n        initData()\r\n        init()\r\n    }\r\n\r\n    private fun initData() {\r\n        daoSession = (application as MyApplication).daoSession!!\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n        val filter = IntentFilter(Intent.ACTION_SEND)\r\n        reciever = MyBroadcastReciever(this)\r\n        registerReceiver(reciever, filter)\r\n        update()\r\n    }\r\n\r\n    private fun init() {\r\n        val builder = StrictMode.VmPolicy.Builder()\r\n        StrictMode.setVmPolicy(builder.build())\r\n\r\n        listViewSent = findViewById(R.id.transmission_listView_sent)\r\n        listViewtoBeSent = findViewById(R.id.transmission_listView_tobesent)\r\n        listViewSent?.emptyView = DataController.getEmptyView(this)\r\n        listViewtoBeSent?.emptyView = DataController.getEmptyView(this)\r\n\r\n        switchOn = true\r\n\r\n        update()\r\n    }\r\n\r\n    fun update() {\r\n        if (!isLoading) {\r\n            val thread = Thread(Runnable {\r\n                isLoading = true\r\n                try {\r\n                    databaseReport = DatabaseReport.getDatabase(applicationContext)\r\n\r\n                    toSend = DatabaseReport.getDeskripsi(databaseReport?.reportToBeSent!!)\r\n                    sent = DatabaseReport.getDeskripsi(databaseReport?.reportSent!!)\r\n\r\n                    runOnUiThread {\r\n                        if (adapterBelumTerkirim != null) {\r\n                            adapterBelumTerkirim!!.clear()\r\n                            adapterBelumTerkirim!!.addAll(*toSend)\r\n                            adapterBelumTerkirim!!.notifyDataSetChanged()\r\n                        } else {\r\n                            val itemToSend = ArrayList(Arrays.asList(*toSend))\r\n                            adapterBelumTerkirim = ArrayAdapter(this@TransmissionActivity, R.layout.activity_transmission_list_row, itemToSend)\r\n                            listViewtoBeSent?.adapter = adapterBelumTerkirim\r\n                        }\r\n\r\n                        if (adapterTerkirim != null) {\r\n                            adapterTerkirim!!.clear()\r\n                            adapterTerkirim!!.addAll(*sent)\r\n                            adapterTerkirim!!.notifyDataSetChanged()\r\n                        } else {\r\n                            val itemSent = ArrayList(Arrays.asList(*sent))\r\n                            adapterTerkirim = ArrayAdapter(this@TransmissionActivity, R.layout.activity_transmission_list_row, itemSent)\r\n                            listViewSent?.adapter = adapterTerkirim\r\n\r\n                        }\r\n                    }\r\n\r\n                    Log.i(\"accepet reciever\", \"eksekusi reciever\")\r\n\r\n                } catch (e: Exception) {\r\n                    e.printStackTrace()\r\n\r\n                } finally {\r\n                    isLoading = false\r\n                }\r\n            })\r\n\r\n            thread.start()\r\n        }\r\n    }\r\n\r\n    override fun onPause() {\r\n        super.onPause()\r\n        unregisterReceiver(reciever)\r\n    }\r\n\r\n    class MyBroadcastReciever : BroadcastReceiver {\r\n        private var act: TransmissionActivity? = null\r\n\r\n        constructor()\r\n\r\n        constructor(activity: TransmissionActivity) {\r\n            act = activity\r\n        }\r\n\r\n        override fun onReceive(context: Context, intent: Intent) {\r\n            try {\r\n                context.startService(Intent(context, ReportUploader::class.java))\r\n                act?.update()\r\n            } catch (e: Exception) {\r\n                e.printStackTrace()\r\n            }\r\n        }\r\n    }\r\n\r\n    companion object {\r\n        var isLoading: Boolean = false\r\n    }\r\n\r\n    private fun isMyServiceRunning(serviceClass: Class<*>): Boolean {\r\n        val manager = getSystemService(ACTIVITY_SERVICE) as ActivityManager\r\n        for (service in manager.getRunningServices(Int.MAX_VALUE)) {\r\n            if (serviceClass.name == service.service.className) {\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    internal fun sendReport() {\r\n        try{\r\n            sending = true\r\n            val databaseReport = DatabaseReport.getDatabase(applicationContext)\r\n            val toBeSent = databaseReport.reportToBeSent\r\n            for (report in toBeSent) {\r\n                if (report.sendReport()) {\r\n                    databaseReport.doneReport(report, 1)\r\n                    sendResult()\r\n                }\r\n            }\r\n            sending = false\r\n        }catch (e: java.lang.Exception) {\r\n            e.printStackTrace()\r\n//            sending = false\r\n        }\r\n\r\n    }\r\n\r\n    private fun sendResult() {\r\n        if (!isLoading) {\r\n            val intent = Intent(Intent.ACTION_SEND)\r\n            sendBroadcast(intent)\r\n            Log.i(\"ReportUploader.kt\", \"Send result reciever\")\r\n        }\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/dev/iconpln/mims/ui/transmission_history/TransmissionActivity.kt b/app/src/main/java/dev/iconpln/mims/ui/transmission_history/TransmissionActivity.kt
---- a/app/src/main/java/dev/iconpln/mims/ui/transmission_history/TransmissionActivity.kt	(revision 6e01942d95cef7d02a00aab00432386f5bb65c80)
-+++ b/app/src/main/java/dev/iconpln/mims/ui/transmission_history/TransmissionActivity.kt	(date 1675239655399)
-@@ -49,8 +49,8 @@
-         setContentView(R.layout.activity_transmission_history)
-         btn = findViewById(R.id.btn_start)
-         btn.setOnClickListener {
--            val iService = Intent(applicationContext, ReportUploader::class.java)
--            startService(iService)
-+//            val iService = Intent(applicationContext, ReportUploader::class.java)
-+//            startService(iService)
-         }
-         initData()
-         init()
-Index: app/src/main/java/dev/iconpln/mims/data/local/database/TPosPenerimaan.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package dev.iconpln.mims.data.local.database;\r\n\r\nimport org.greenrobot.greendao.annotation.*;\r\n\r\n// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable \"keep\" sections if you want to edit.\r\n\r\n/**\r\n * Entity mapped to table \"TPOS_PENERIMAAN\".\r\n */\r\n@Entity\r\npublic class TPosPenerimaan {\r\n\r\n    @Id\r\n    private Long id;\r\n    private String StorLoc;\r\n    private String Total;\r\n    private String TlskNo;\r\n    private String PoSapNo;\r\n    private String PoMpNo;\r\n    private String NoDoSmar;\r\n    private Integer LeadTime;\r\n    private String Storloc;\r\n    private String CreatedDate;\r\n    private String PlanCodeNo;\r\n    private String PlantName;\r\n    private String NoDoMims;\r\n    private String DoStatus;\r\n    private String Expeditions;\r\n    private String CourierPersonName;\r\n    private String KdPabrikan;\r\n    private String MaterialGroup;\r\n    private String NamaKategoriMaterial;\r\n    private String PhotoSuratBarang;\r\n    private String PhotoBarang;\r\n    private String TanggalDiterima;\r\n    private String PetugasPenerima;\r\n    private String NamaKurir;\r\n    private String NamaEkspedisi;\r\n    private Integer isChecked;\r\n\r\n    @Generated\r\n    public TPosPenerimaan() {\r\n    }\r\n\r\n    public TPosPenerimaan(Long id) {\r\n        this.id = id;\r\n    }\r\n\r\n    @Generated\r\n    public TPosPenerimaan(Long id, String StorLoc, String Total, String TlskNo, String PoSapNo, String PoMpNo, String NoDoSmar, Integer LeadTime, String Storloc, String CreatedDate, String PlanCodeNo, String PlantName, String NoDoMims, String DoStatus, String Expeditions, String CourierPersonName, String KdPabrikan, String MaterialGroup, String NamaKategoriMaterial, String PhotoSuratBarang, String PhotoBarang, String TanggalDiterima, String PetugasPenerima, String NamaKurir, String NamaEkspedisi, Integer isChecked) {\r\n        this.id = id;\r\n        this.StorLoc = StorLoc;\r\n        this.Total = Total;\r\n        this.TlskNo = TlskNo;\r\n        this.PoSapNo = PoSapNo;\r\n        this.PoMpNo = PoMpNo;\r\n        this.NoDoSmar = NoDoSmar;\r\n        this.LeadTime = LeadTime;\r\n        this.Storloc = Storloc;\r\n        this.CreatedDate = CreatedDate;\r\n        this.PlanCodeNo = PlanCodeNo;\r\n        this.PlantName = PlantName;\r\n        this.NoDoMims = NoDoMims;\r\n        this.DoStatus = DoStatus;\r\n        this.Expeditions = Expeditions;\r\n        this.CourierPersonName = CourierPersonName;\r\n        this.KdPabrikan = KdPabrikan;\r\n        this.MaterialGroup = MaterialGroup;\r\n        this.NamaKategoriMaterial = NamaKategoriMaterial;\r\n        this.PhotoSuratBarang = PhotoSuratBarang;\r\n        this.PhotoBarang = PhotoBarang;\r\n        this.TanggalDiterima = TanggalDiterima;\r\n        this.PetugasPenerima = PetugasPenerima;\r\n        this.NamaKurir = NamaKurir;\r\n        this.NamaEkspedisi = NamaEkspedisi;\r\n        this.isChecked = isChecked;\r\n    }\r\n\r\n    public Long getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(Long id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public String getStorLoc() {\r\n        return StorLoc;\r\n    }\r\n\r\n    public void setStorLoc(String StorLoc) {\r\n        this.StorLoc = StorLoc;\r\n    }\r\n\r\n    public String getTotal() {\r\n        return Total;\r\n    }\r\n\r\n    public void setTotal(String Total) {\r\n        this.Total = Total;\r\n    }\r\n\r\n    public String getTlskNo() {\r\n        return TlskNo;\r\n    }\r\n\r\n    public void setTlskNo(String TlskNo) {\r\n        this.TlskNo = TlskNo;\r\n    }\r\n\r\n    public String getPoSapNo() {\r\n        return PoSapNo;\r\n    }\r\n\r\n    public void setPoSapNo(String PoSapNo) {\r\n        this.PoSapNo = PoSapNo;\r\n    }\r\n\r\n    public String getPoMpNo() {\r\n        return PoMpNo;\r\n    }\r\n\r\n    public void setPoMpNo(String PoMpNo) {\r\n        this.PoMpNo = PoMpNo;\r\n    }\r\n\r\n    public String getNoDoSmar() {\r\n        return NoDoSmar;\r\n    }\r\n\r\n    public void setNoDoSmar(String NoDoSmar) {\r\n        this.NoDoSmar = NoDoSmar;\r\n    }\r\n\r\n    public Integer getLeadTime() {\r\n        return LeadTime;\r\n    }\r\n\r\n    public void setLeadTime(Integer LeadTime) {\r\n        this.LeadTime = LeadTime;\r\n    }\r\n\r\n    public String getStorloc() {\r\n        return Storloc;\r\n    }\r\n\r\n    public void setStorloc(String Storloc) {\r\n        this.Storloc = Storloc;\r\n    }\r\n\r\n    public String getCreatedDate() {\r\n        return CreatedDate;\r\n    }\r\n\r\n    public void setCreatedDate(String CreatedDate) {\r\n        this.CreatedDate = CreatedDate;\r\n    }\r\n\r\n    public String getPlanCodeNo() {\r\n        return PlanCodeNo;\r\n    }\r\n\r\n    public void setPlanCodeNo(String PlanCodeNo) {\r\n        this.PlanCodeNo = PlanCodeNo;\r\n    }\r\n\r\n    public String getPlantName() {\r\n        return PlantName;\r\n    }\r\n\r\n    public void setPlantName(String PlantName) {\r\n        this.PlantName = PlantName;\r\n    }\r\n\r\n    public String getNoDoMims() {\r\n        return NoDoMims;\r\n    }\r\n\r\n    public void setNoDoMims(String NoDoMims) {\r\n        this.NoDoMims = NoDoMims;\r\n    }\r\n\r\n    public String getDoStatus() {\r\n        return DoStatus;\r\n    }\r\n\r\n    public void setDoStatus(String DoStatus) {\r\n        this.DoStatus = DoStatus;\r\n    }\r\n\r\n    public String getExpeditions() {\r\n        return Expeditions;\r\n    }\r\n\r\n    public void setExpeditions(String Expeditions) {\r\n        this.Expeditions = Expeditions;\r\n    }\r\n\r\n    public String getCourierPersonName() {\r\n        return CourierPersonName;\r\n    }\r\n\r\n    public void setCourierPersonName(String CourierPersonName) {\r\n        this.CourierPersonName = CourierPersonName;\r\n    }\r\n\r\n    public String getKdPabrikan() {\r\n        return KdPabrikan;\r\n    }\r\n\r\n    public void setKdPabrikan(String KdPabrikan) {\r\n        this.KdPabrikan = KdPabrikan;\r\n    }\r\n\r\n    public String getMaterialGroup() {\r\n        return MaterialGroup;\r\n    }\r\n\r\n    public void setMaterialGroup(String MaterialGroup) {\r\n        this.MaterialGroup = MaterialGroup;\r\n    }\r\n\r\n    public String getNamaKategoriMaterial() {\r\n        return NamaKategoriMaterial;\r\n    }\r\n\r\n    public void setNamaKategoriMaterial(String NamaKategoriMaterial) {\r\n        this.NamaKategoriMaterial = NamaKategoriMaterial;\r\n    }\r\n\r\n    public String getPhotoSuratBarang() {\r\n        return PhotoSuratBarang;\r\n    }\r\n\r\n    public void setPhotoSuratBarang(String PhotoSuratBarang) {\r\n        this.PhotoSuratBarang = PhotoSuratBarang;\r\n    }\r\n\r\n    public String getPhotoBarang() {\r\n        return PhotoBarang;\r\n    }\r\n\r\n    public void setPhotoBarang(String PhotoBarang) {\r\n        this.PhotoBarang = PhotoBarang;\r\n    }\r\n\r\n    public String getTanggalDiterima() {\r\n        return TanggalDiterima;\r\n    }\r\n\r\n    public void setTanggalDiterima(String TanggalDiterima) {\r\n        this.TanggalDiterima = TanggalDiterima;\r\n    }\r\n\r\n    public String getPetugasPenerima() {\r\n        return PetugasPenerima;\r\n    }\r\n\r\n    public void setPetugasPenerima(String PetugasPenerima) {\r\n        this.PetugasPenerima = PetugasPenerima;\r\n    }\r\n\r\n    public String getNamaKurir() {\r\n        return NamaKurir;\r\n    }\r\n\r\n    public void setNamaKurir(String NamaKurir) {\r\n        this.NamaKurir = NamaKurir;\r\n    }\r\n\r\n    public String getNamaEkspedisi() {\r\n        return NamaEkspedisi;\r\n    }\r\n\r\n    public void setNamaEkspedisi(String NamaEkspedisi) {\r\n        this.NamaEkspedisi = NamaEkspedisi;\r\n    }\r\n\r\n    public Integer getIsChecked() {\r\n        return isChecked;\r\n    }\r\n\r\n    public void setIsChecked(Integer isChecked) {\r\n        this.isChecked = isChecked;\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/dev/iconpln/mims/data/local/database/TPosPenerimaan.java b/app/src/main/java/dev/iconpln/mims/data/local/database/TPosPenerimaan.java
---- a/app/src/main/java/dev/iconpln/mims/data/local/database/TPosPenerimaan.java	(revision 6e01942d95cef7d02a00aab00432386f5bb65c80)
-+++ b/app/src/main/java/dev/iconpln/mims/data/local/database/TPosPenerimaan.java	(date 1675236438829)
-@@ -36,7 +36,7 @@
-     private String PetugasPenerima;
-     private String NamaKurir;
-     private String NamaEkspedisi;
--    private Integer isChecked;
-+    private Integer isDone;
- 
-     @Generated
-     public TPosPenerimaan() {
-@@ -47,7 +47,7 @@
-     }
- 
-     @Generated
--    public TPosPenerimaan(Long id, String StorLoc, String Total, String TlskNo, String PoSapNo, String PoMpNo, String NoDoSmar, Integer LeadTime, String Storloc, String CreatedDate, String PlanCodeNo, String PlantName, String NoDoMims, String DoStatus, String Expeditions, String CourierPersonName, String KdPabrikan, String MaterialGroup, String NamaKategoriMaterial, String PhotoSuratBarang, String PhotoBarang, String TanggalDiterima, String PetugasPenerima, String NamaKurir, String NamaEkspedisi, Integer isChecked) {
-+    public TPosPenerimaan(Long id, String StorLoc, String Total, String TlskNo, String PoSapNo, String PoMpNo, String NoDoSmar, Integer LeadTime, String Storloc, String CreatedDate, String PlanCodeNo, String PlantName, String NoDoMims, String DoStatus, String Expeditions, String CourierPersonName, String KdPabrikan, String MaterialGroup, String NamaKategoriMaterial, String PhotoSuratBarang, String PhotoBarang, String TanggalDiterima, String PetugasPenerima, String NamaKurir, String NamaEkspedisi, Integer isDone) {
-         this.id = id;
-         this.StorLoc = StorLoc;
-         this.Total = Total;
-@@ -73,7 +73,7 @@
-         this.PetugasPenerima = PetugasPenerima;
-         this.NamaKurir = NamaKurir;
-         this.NamaEkspedisi = NamaEkspedisi;
--        this.isChecked = isChecked;
-+        this.isDone = isDone;
-     }
- 
-     public Long getId() {
-@@ -276,12 +276,12 @@
-         this.NamaEkspedisi = NamaEkspedisi;
-     }
- 
--    public Integer getIsChecked() {
--        return isChecked;
-+    public Integer getIsDone() {
-+        return isDone;
-     }
- 
--    public void setIsChecked(Integer isChecked) {
--        this.isChecked = isChecked;
-+    public void setIsDone(Integer isDone) {
-+        this.isDone = isDone;
-     }
- 
- }
-Index: app/src/main/java/dev/iconpln/mims/ui/pnerimaan/PenerimaanViewModel.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package dev.iconpln.mims.ui.pnerimaan\r\n\r\nimport androidx.lifecycle.LiveData\r\nimport androidx.lifecycle.MutableLiveData\r\nimport androidx.lifecycle.ViewModel\r\nimport dev.iconpln.mims.data.local.database.*\r\nimport kotlinx.coroutines.CoroutineScope\r\nimport kotlinx.coroutines.Dispatchers\r\nimport kotlinx.coroutines.launch\r\n\r\nclass PenerimaanViewModel: ViewModel() {\r\n\r\n    private val _isLoading = MutableLiveData<Boolean>()\r\n    val isLoading: LiveData<Boolean> = _isLoading\r\n\r\n    private val _penerimaanResponse = MutableLiveData<List<TPosPenerimaan>>()\r\n    val penerimaanResponse: LiveData<List<TPosPenerimaan>> = _penerimaanResponse\r\n\r\n    private val _penerimaanDetailResponse = MutableLiveData<List<TPosDetailPenerimaan>>()\r\n    val penerimaanDetailResponse: LiveData<List<TPosDetailPenerimaan>> = _penerimaanDetailResponse\r\n\r\n    fun insertDetailPenerimaan(daoSession: DaoSession,noDo: String, listDetailPenerimaan: List<TPosDetailPenerimaan>){\r\n        CoroutineScope(Dispatchers.Main).launch {\r\n            try {\r\n                _isLoading.value = true\r\n\r\n                if (listDetailPenerimaan.isNotEmpty()){\r\n                    _penerimaanDetailResponse.postValue(listDetailPenerimaan)\r\n                }else{\r\n                    val listPos = daoSession.tPosDetailDao.queryBuilder().list()\r\n                    val size = listPos.size\r\n                    if (size > 0) {\r\n                        val items = arrayOfNulls<TPosDetailPenerimaan>(size)\r\n                        var item: TPosDetailPenerimaan\r\n                        for ((i, model) in listPos.withIndex()){\r\n                            item = TPosDetailPenerimaan()\r\n\r\n                            item.noMatSap = model.noMatSap\r\n                            item.noDoSmar = model.noDoSmar\r\n                            item.qty = model.qty\r\n                            item.kdPabrikan = model.kdPabrikan\r\n                            item.doStatus = model.doStatus\r\n                            item.poSapNo = model.poSapNo\r\n                            item.poMpNo = model.poMpNo\r\n                            item.noDoMims = model.noDoMims\r\n                            item.noPackaging = model.noPackaging\r\n                            item.plantCodeNo = model.plantCodeNo\r\n                            item.plantName = model.plantName\r\n                            item.storLoc = model.storLoc\r\n                            item.leadTime = model.leadTime\r\n                            item.createdDate = model.createdDate\r\n                            item.uom = model.uom\r\n                            item.noPemeriksaan = model.noPemeriksaan\r\n                            item.isDone = 0\r\n                            items[i] = item\r\n                        }\r\n                        daoSession.tPosDetailPenerimaanDao.insertInTx(items.toList())\r\n                    }\r\n                }\r\n                _isLoading.value = false\r\n            }catch (e: Exception){\r\n                e.printStackTrace()\r\n            }finally {\r\n                _isLoading.value = false\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    fun getPenerimaan(daoSession: DaoSession,listMonitoring: List<TPosPenerimaan>){\r\n        CoroutineScope(Dispatchers.Main).launch {\r\n            try {\r\n                _isLoading.value = true\r\n\r\n                if (listMonitoring.isNotEmpty()){\r\n                    _penerimaanResponse.postValue(listMonitoring)\r\n                }else{\r\n                    val listPos = daoSession.tPosDao.queryBuilder().list()\r\n                    val size = listPos.size\r\n                    if (size > 0) {\r\n                        val items = arrayOfNulls<TPosPenerimaan>(size)\r\n                        var item: TPosPenerimaan\r\n                        for ((i, model) in listPos.withIndex()){\r\n                            item = TPosPenerimaan()\r\n                            item.createdDate = model?.createdDate\r\n                            item.leadTime = model?.leadTime\r\n                            item.storloc = model?.storLoc\r\n                            item.noDoSmar = model?.noDoSmar\r\n                            item.planCodeNo = model?.planCodeNo\r\n                            item.plantName = model?.plantName\r\n                            item.poMpNo = model?.poMpNo\r\n                            item.poSapNo = model?.poSapNo\r\n                            item.storLoc = model?.storLoc\r\n                            item.tlskNo = model?.tlskNo\r\n                            item.total = model?.total\r\n                            item.kdPabrikan = model?.kdPabrikan\r\n                            item.materialGroup = model?.materialGroup\r\n                            item.namaKategoriMaterial = model?.namaKategoriMaterial\r\n                            item.noDoMims = model?.noDoMims\r\n                            item.total = model?.total\r\n                            item.expeditions = model.expeditions\r\n                            item.courierPersonName = model.courierPersonName\r\n                            item.photoSuratBarang = \"\"\r\n                            item.photoBarang = \"\"\r\n                            item.tanggalDiterima = \"\"\r\n                            item.petugasPenerima = \"\"\r\n                            item.namaKurir = \"\"\r\n                            item.namaEkspedisi = \"\"\r\n                            item.isChecked = 0\r\n                            items[i] = item\r\n                        }\r\n                        daoSession.tPosPenerimaanDao.insertInTx(items.toList())\r\n                    }\r\n                }\r\n                _isLoading.value = false\r\n            }catch (e: Exception){\r\n                e.printStackTrace()\r\n            }finally {\r\n                _isLoading.value = false\r\n            }\r\n\r\n        }\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/dev/iconpln/mims/ui/pnerimaan/PenerimaanViewModel.kt b/app/src/main/java/dev/iconpln/mims/ui/pnerimaan/PenerimaanViewModel.kt
---- a/app/src/main/java/dev/iconpln/mims/ui/pnerimaan/PenerimaanViewModel.kt	(revision 6e01942d95cef7d02a00aab00432386f5bb65c80)
-+++ b/app/src/main/java/dev/iconpln/mims/ui/pnerimaan/PenerimaanViewModel.kt	(date 1675236765932)
-@@ -106,7 +106,7 @@
-                             item.petugasPenerima = ""
-                             item.namaKurir = ""
-                             item.namaEkspedisi = ""
--                            item.isChecked = 0
-+                            item.isDone = 0
-                             items[i] = item
-                         }
-                         daoSession.tPosPenerimaanDao.insertInTx(items.toList())
-Index: app/src/main/java/dev/iconpln/mims/utils/Config.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package dev.iconpln.mims.utils\r\n\r\nobject Config {\r\n    const val SCHEMA_NAME = \"Mims\"\r\n\r\n    const val DIRECTORY_ROOT_NAME = \"mims\"\r\n    const val DATABASE_NAME = \"mims-20230112-db\"\r\n    const val DATABASE_NAME_ENCRYPTED = \"mims-20230112-db-encrypted\"\r\n\r\n    // Storage\r\n    const val REQUEST_CODE_WRITE_EXTERNAL_STORAGE = 10\r\n\r\n    // Session\r\n    const val IS_LOGIN = \"IsLogin\"\r\n\r\n    const val DATETIME = \"yyyy-MM-dd HH:mm:ss\"\r\n    const val DATE_FORMAT_yMdHmsSSS = \"yMdHmsSSS\"\r\n\r\n    const val DATE = \"yyyy-MM-dd\"\r\n\r\n    const val NO_CODE=0\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/dev/iconpln/mims/utils/Config.kt b/app/src/main/java/dev/iconpln/mims/utils/Config.kt
---- a/app/src/main/java/dev/iconpln/mims/utils/Config.kt	(revision 6e01942d95cef7d02a00aab00432386f5bb65c80)
-+++ b/app/src/main/java/dev/iconpln/mims/utils/Config.kt	(date 1675244083689)
-@@ -4,8 +4,8 @@
-     const val SCHEMA_NAME = "Mims"
- 
-     const val DIRECTORY_ROOT_NAME = "mims"
--    const val DATABASE_NAME = "mims-20230112-db"
--    const val DATABASE_NAME_ENCRYPTED = "mims-20230112-db-encrypted"
-+    const val DATABASE_NAME = "mims-20230115-db"
-+    const val DATABASE_NAME_ENCRYPTED = "mims-20230115-db-encrypted"
- 
-     // Storage
-     const val REQUEST_CODE_WRITE_EXTERNAL_STORAGE = 10
-Index: app/src/main/java/dev/iconpln/mims/ui/pengiriman/UpdateLokasiActivity.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package dev.iconpln.mims.ui.pengiriman\r\n\r\nimport android.app.AlertDialog\r\nimport android.content.Intent\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.widget.Toast\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport dev.iconpln.mims.MyApplication\r\nimport dev.iconpln.mims.data.local.database.DaoSession\r\nimport dev.iconpln.mims.data.local.database.TLokasi\r\nimport dev.iconpln.mims.data.local.database.TLokasiDao\r\nimport dev.iconpln.mims.data.local.database_local.GenericReport\r\nimport dev.iconpln.mims.data.local.database_local.ReportParameter\r\nimport dev.iconpln.mims.data.local.database_local.ReportUploader\r\nimport dev.iconpln.mims.data.remote.service.ApiConfig\r\nimport dev.iconpln.mims.databinding.ActivityUpdateLokasiBinding\r\nimport dev.iconpln.mims.tasks.Loadable\r\nimport dev.iconpln.mims.tasks.TambahReportTask\r\nimport dev.iconpln.mims.utils.Config\r\nimport dev.iconpln.mims.utils.DateTimeUtils\r\nimport dev.iconpln.mims.utils.SessionManager\r\nimport dev.iconpln.mims.utils.SharedPrefsUtils\r\nimport org.joda.time.DateTime\r\nimport org.joda.time.LocalDateTime\r\n\r\nclass UpdateLokasiActivity : AppCompatActivity(), Loadable {\r\n    private lateinit var rvAdapter: HistoryAdapter\r\n    private lateinit var binding: ActivityUpdateLokasiBinding\r\n    private lateinit var daoSession: DaoSession\r\n    private var doMims:String?=\"\"\r\n    private var progressDialog: AlertDialog? = null\r\n    private lateinit var session: SessionManager\r\n\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        binding = ActivityUpdateLokasiBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        doMims=intent.getStringExtra(EXTRA_NO_DOMIMS)\r\n        session = SessionManager(this)\r\n        daoSession = (application as MyApplication).daoSession!!\r\n\r\n        rvAdapter = HistoryAdapter(arrayListOf(), object: HistoryAdapter.OnAdapterListener {\r\n            override fun onClick(data: TLokasi) {\r\n\r\n            }\r\n        })\r\n\r\n        binding.rvHistory.apply {\r\n            adapter = rvAdapter\r\n            setHasFixedSize(true)\r\n            layoutManager = LinearLayoutManager(this@UpdateLokasiActivity)\r\n        }\r\n\r\n        binding.btnUpdate.setOnClickListener {\r\n            validateForm()\r\n        }\r\n\r\n        fetchDataLocal()\r\n    }\r\n\r\n    private fun fetchDataLocal() {\r\n        val listDataPengiriman = daoSession.tLokasiDao.queryBuilder().where(TLokasiDao.Properties.NoDoSns.eq(doMims)).list()\r\n        rvAdapter.setData(listDataPengiriman)\r\n    }\r\n\r\n    companion object{\r\n        const val EXTRA_NO_DOMIMS = \"extra_no_do_mims\"\r\n    }\r\n\r\n    private fun submitForm() {\r\n        val reports = ArrayList<GenericReport>()\r\n        val currentDate = LocalDateTime.now().toString(Config.DATE)\r\n        val currentDateTime = LocalDateTime.now().toString(Config.DATETIME)\r\n        val currentUtc = DateTimeUtils.currentUtc\r\n        Log.i(\"datime\",\"${currentDateTime}\")\r\n\r\n        //Insert lokasis\r\n        var mLokasi = TLokasi()\r\n        mLokasi.updateDate = currentDateTime\r\n        mLokasi.noDoSns = doMims\r\n        mLokasi.ket = binding.txtLokasi.text.toString()\r\n        daoSession.tLokasiDao.insert(mLokasi)\r\n\r\n\r\n\r\n        //region Add report visit to queue\r\n        var jwt = SharedPrefsUtils.getStringPreference(this@UpdateLokasiActivity,\"jwt\",\"\")\r\n        val reportId = \"V_\" + session.username + \"_\" + doMims + \"_\" + DateTime.now().toString(Config.DATETIME)\r\n        val reportName = \"Update Lokasi\"\r\n        val reportDescription = \"$reportName: \"+ \" (\" + reportId + \")\"\r\n        val params = ArrayList<ReportParameter>()\r\n        params.add(ReportParameter(\"1\", reportId, \"do_mims\", mLokasi.noDoSns, ReportParameter.TEXT))\r\n        params.add(ReportParameter(\"2\", reportId, \"lokasi\", mLokasi.ket, ReportParameter.TEXT))\r\n       val report = GenericReport(reportId, session.username, reportName, reportDescription, ApiConfig.insertLokasi(), currentDate, Config.NO_CODE, currentUtc, params)\r\n        reports.add(report)\r\n        //endregion\r\n\r\n        val task = TambahReportTask(this, reports)\r\n        task.execute()\r\n\r\n        val iService = Intent(applicationContext, ReportUploader::class.java)\r\n        startService(iService)\r\n    }\r\n\r\n    private fun validateForm(){\r\n        if (binding.txtLokasi.text.toString().isNullOrEmpty()){\r\n            Toast.makeText(this, \"Harap isi lokasi terkini\", Toast.LENGTH_SHORT).show()\r\n            return\r\n        }\r\n\r\n        submitForm()\r\n    }\r\n\r\n    override fun setLoading(show: Boolean, title: String, message: String) {\r\n        try {\r\n            if (progressDialog != null){\r\n                if (show) {\r\n                    progressDialog!!.apply { show() }\r\n                } else {\r\n                    progressDialog!!.dismiss()\r\n                }\r\n            }\r\n\r\n        } catch (e: Exception) {\r\n            progressDialog!!.dismiss()\r\n            e.printStackTrace()\r\n        }\r\n    }\r\n\r\n    override fun setFinish(result: Boolean, message: String) {\r\n        if (result) {\r\n            Log.i(\"finish\",\"Yes\")\r\n            fetchDataLocal()\r\n        }\r\n        Toast.makeText(this, message, Toast.LENGTH_LONG).show()\r\n    }\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/dev/iconpln/mims/ui/pengiriman/UpdateLokasiActivity.kt b/app/src/main/java/dev/iconpln/mims/ui/pengiriman/UpdateLokasiActivity.kt
---- a/app/src/main/java/dev/iconpln/mims/ui/pengiriman/UpdateLokasiActivity.kt	(revision 6e01942d95cef7d02a00aab00432386f5bb65c80)
-+++ b/app/src/main/java/dev/iconpln/mims/ui/pengiriman/UpdateLokasiActivity.kt	(date 1675239655410)
-@@ -102,8 +102,8 @@
-         val task = TambahReportTask(this, reports)
-         task.execute()
- 
--        val iService = Intent(applicationContext, ReportUploader::class.java)
--        startService(iService)
-+//        val iService = Intent(applicationContext, ReportUploader::class.java)
-+//        startService(iService)
-     }
- 
-     private fun validateForm(){
-Index: app/src/main/java/dev/iconpln/mims/ui/pemeriksaan/pemeriksaan_detail/PemeriksaanDetailActivity.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package dev.iconpln.mims.ui.pemeriksaan.pemeriksaan_detail\r\n\r\nimport android.Manifest\r\nimport android.content.Intent\r\nimport android.content.pm.PackageManager\r\nimport android.graphics.Bitmap\r\nimport android.graphics.BitmapFactory\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.provider.MediaStore\r\nimport android.text.Editable\r\nimport android.text.TextWatcher\r\nimport android.util.Log\r\nimport android.view.View\r\nimport android.widget.Toast\r\nimport androidx.cardview.widget.CardView\r\nimport androidx.core.app.ActivityCompat\r\nimport androidx.core.content.ContextCompat\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport com.google.android.material.bottomsheet.BottomSheetDialog\r\nimport com.journeyapps.barcodescanner.ScanContract\r\nimport com.journeyapps.barcodescanner.ScanIntentResult\r\nimport com.journeyapps.barcodescanner.ScanOptions\r\nimport dev.iconpln.mims.MyApplication\r\nimport dev.iconpln.mims.R\r\nimport dev.iconpln.mims.data.local.database.*\r\nimport dev.iconpln.mims.data.local.database_local.GenericReport\r\nimport dev.iconpln.mims.data.local.database_local.ReportParameter\r\nimport dev.iconpln.mims.data.local.database_local.ReportUploader\r\nimport dev.iconpln.mims.data.remote.service.ApiConfig\r\nimport dev.iconpln.mims.data.scan.CustomScanActivity\r\nimport dev.iconpln.mims.databinding.ActivityDetailPenerimaanBinding\r\nimport dev.iconpln.mims.databinding.ActivityPemeriksaanDetailBinding\r\nimport dev.iconpln.mims.tasks.Loadable\r\nimport dev.iconpln.mims.tasks.TambahReportTask\r\nimport dev.iconpln.mims.ui.pnerimaan.PenerimaanActivity\r\nimport dev.iconpln.mims.utils.SharedPrefsUtils\r\nimport dev.iconpln.mims.utils.StorageUtils\r\nimport org.joda.time.DateTime\r\nimport java.io.File\r\nimport java.io.FileOutputStream\r\nimport java.util.*\r\n\r\nclass PemeriksaanDetailActivity : AppCompatActivity(), Loadable {\r\n    private lateinit var binding: ActivityPemeriksaanDetailBinding\r\n    private lateinit var daoSession: DaoSession\r\n    private lateinit var adapter: DetailPemeriksaanAdapter\r\n\r\n    private lateinit var data: TPemeriksaanDetail\r\n    private lateinit var dataPemeriksaan: TPosDetailPenerimaan\r\n    private lateinit var pemeriksaan: TPemeriksaan\r\n    private lateinit var arrayStringPackaging: List<String>\r\n\r\n    private val cameraRequestKomplain = 101\r\n    private val cameraRequestKomplainGallery = 102\r\n    private val cameraRequestReject = 103\r\n    private val cameraRequestRejectGallery = 104\r\n    private var filePathKomplain: String = \"\"\r\n    private var filePathReject: String = \"\"\r\n\r\n    private var reasonReject: String = \"\"\r\n    private var reasonKomplain: String = \"\"\r\n\r\n    private var noDo: String = \"\"\r\n    private var mAnggota: String = \"\"\r\n    private var mKetua: String = \"\"\r\n    private var mManager: String = \"\"\r\n    private var mSekretaris: String = \"\"\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        binding = ActivityPemeriksaanDetailBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n        daoSession = (application as MyApplication).daoSession!!\r\n        noDo = intent.getStringExtra(\"noDo\")!!\r\n\r\n        data = daoSession.tPemeriksaanDetailDao.queryBuilder().where(TPemeriksaanDetailDao.Properties.NoDoSmar.eq(noDo)).limit(1).unique()\r\n        dataPemeriksaan = daoSession.tPosDetailPenerimaanDao.queryBuilder().where(TPosDetailPenerimaanDao.Properties.NoDoSmar.eq(noDo)).limit(1).unique()\r\n        pemeriksaan = daoSession.tPemeriksaanDao.queryBuilder().where(TPemeriksaanDao.Properties.NoDoSmar.eq(noDo)).limit(1).unique()\r\n        arrayStringPackaging = data.noPackaging.split(\",\")\r\n        Log.d(\"checkPackaging\", arrayStringPackaging.toString())\r\n        adapter = DetailPemeriksaanAdapter(arrayListOf(),object : DetailPemeriksaanAdapter.OnAdapterListener{\r\n            override fun onClick(po: String) {}\r\n\r\n        }, daoSession)\r\n\r\n        adapter.setPedList(arrayStringPackaging)\r\n\r\n        with(binding){\r\n            btnLanjut.setOnClickListener {\r\n                validation()\r\n            }\r\n\r\n            btnKomplain.setOnClickListener {\r\n                constraintDetail2.visibility = View.GONE\r\n                constraintKomplain.visibility = View.VISIBLE\r\n            }\r\n\r\n            btnReject.setOnClickListener {\r\n                constraintDetail2.visibility = View.GONE\r\n                constraintReject.visibility = View.VISIBLE\r\n            }\r\n\r\n            btnMenyetujui.setOnClickListener {\r\n                submitForm(\"APPROVED\")\r\n            }\r\n\r\n            btnSelesaiReject.setOnClickListener {\r\n                validateReject()\r\n            }\r\n\r\n            btnSelesaiKomplain.setOnClickListener {\r\n                validateKomplain()\r\n            }\r\n\r\n            btnFotoDocKomplain.setOnClickListener {\r\n                if (ContextCompat.checkSelfPermission(applicationContext, Manifest.permission.CAMERA) == PackageManager.PERMISSION_DENIED)\r\n                    ActivityCompat.requestPermissions(this@PemeriksaanDetailActivity, arrayOf(\r\n                        Manifest.permission.CAMERA), cameraRequestKomplain)\r\n\r\n                val dialog = BottomSheetDialog(this@PemeriksaanDetailActivity, R.style.AppBottomSheetDialogTheme)\r\n                val view = layoutInflater.inflate(R.layout.bottom_sheet_dialog_photo, null)\r\n                var btnCamera = view.findViewById<CardView>(R.id.cv_kamera)\r\n                var btnGallery = view.findViewById<CardView>(R.id.cv_gallery)\r\n\r\n                btnCamera.setOnClickListener {\r\n                    val cameraIntent = Intent(MediaStore.ACTION_IMAGE_CAPTURE)\r\n                    startActivityForResult(cameraIntent, cameraRequestKomplain)\r\n                    dialog.dismiss()\r\n                }\r\n\r\n                btnGallery.setOnClickListener {\r\n                    val photoPickerIntent = Intent(Intent.ACTION_PICK)\r\n                    photoPickerIntent.type = \"image/*\"\r\n                    startActivityForResult(photoPickerIntent, cameraRequestKomplainGallery)\r\n                    dialog.dismiss()\r\n                }\r\n\r\n                dialog.setCancelable(true)\r\n                dialog.setContentView(view)\r\n                dialog.show()\r\n            }\r\n\r\n            btnFotoDocReject.setOnClickListener {\r\n                if (ContextCompat.checkSelfPermission(applicationContext, Manifest.permission.CAMERA) == PackageManager.PERMISSION_DENIED)\r\n                    ActivityCompat.requestPermissions(this@PemeriksaanDetailActivity, arrayOf(\r\n                        Manifest.permission.CAMERA), cameraRequestReject)\r\n\r\n                val dialog = BottomSheetDialog(this@PemeriksaanDetailActivity, R.style.AppBottomSheetDialogTheme)\r\n                val view = layoutInflater.inflate(R.layout.bottom_sheet_dialog_photo, null)\r\n                var btnCamera = view.findViewById<CardView>(R.id.cv_kamera)\r\n                var btnGallery = view.findViewById<CardView>(R.id.cv_gallery)\r\n\r\n                btnCamera.setOnClickListener {\r\n                    val cameraIntent = Intent(MediaStore.ACTION_IMAGE_CAPTURE)\r\n                    startActivityForResult(cameraIntent, cameraRequestReject)\r\n                    dialog.dismiss()\r\n                }\r\n\r\n                btnGallery.setOnClickListener {\r\n                    val photoPickerIntent = Intent(Intent.ACTION_PICK)\r\n                    photoPickerIntent.type = \"image/*\"\r\n                    startActivityForResult(photoPickerIntent, cameraRequestRejectGallery)\r\n                    dialog.dismiss()\r\n                }\r\n\r\n                dialog.setCancelable(true)\r\n                dialog.setContentView(view)\r\n                dialog.show()\r\n            }\r\n\r\n            barcode2.setOnClickListener { openScanner() }\r\n\r\n            recyclerView2.adapter = adapter\r\n            recyclerView2.setHasFixedSize(true)\r\n            recyclerView2.layoutManager = LinearLayoutManager(this@PemeriksaanDetailActivity, LinearLayoutManager.VERTICAL, false)\r\n\r\n            srcSerialNumber.addTextChangedListener(object : TextWatcher{\r\n                override fun beforeTextChanged(\r\n                    s: CharSequence?,\r\n                    start: Int,\r\n                    count: Int,\r\n                    after: Int\r\n                ) {}\r\n\r\n                override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {}\r\n\r\n                override fun afterTextChanged(s: Editable?) {\r\n                    val filter = arrayStringPackaging.filter { it.lowercase().contains(s.toString().lowercase()) }\r\n                    adapter.setPedList(filter)\r\n                }\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    private fun validateReject() {\r\n\r\n        with(binding){\r\n            val reason = edtAlasanReject.text.toString()\r\n\r\n            if (reason.isNullOrEmpty()){\r\n                Toast.makeText(this@PemeriksaanDetailActivity, \"Silahkan isi semua data field yang di butuhkan\", Toast.LENGTH_SHORT).show()\r\n                return\r\n            }\r\n\r\n            if (filePathReject.isNullOrEmpty()){\r\n                Toast.makeText(this@PemeriksaanDetailActivity, \"Silahkan isi semua data field yang di butuhkan\", Toast.LENGTH_SHORT).show()\r\n                return\r\n            }\r\n\r\n            reasonReject = reason\r\n            submitForm(\"Reject\")\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private fun validateKomplain() {\r\n        with(binding){\r\n            val reason = edtAlasanKomplain.text.toString()\r\n\r\n            if (reason.isNullOrEmpty()){\r\n                Toast.makeText(this@PemeriksaanDetailActivity, \"Silahkan isi semua data field yang di butuhkan\", Toast.LENGTH_SHORT).show()\r\n                return\r\n            }\r\n\r\n            if (filePathKomplain.isNullOrEmpty()){\r\n                Toast.makeText(this@PemeriksaanDetailActivity, \"Silahkan isi semua data field yang di butuhkan\", Toast.LENGTH_SHORT).show()\r\n                return\r\n            }\r\n\r\n            reasonKomplain = reason\r\n            submitFormKomplain()\r\n\r\n        }\r\n    }\r\n\r\n    private fun submitFormKomplain() {\r\n        val reports = java.util.ArrayList<GenericReport>()\r\n\r\n        data.status = \"COMPLAINT\"\r\n        data.isDone = 1\r\n        daoSession.update(data)\r\n\r\n        pemeriksaan.namaKetua = mKetua\r\n        pemeriksaan.namaManager = mManager\r\n        pemeriksaan.namaSekretaris = mSekretaris\r\n        pemeriksaan.anggota = mAnggota\r\n        pemeriksaan.state = 2\r\n        daoSession.update(pemeriksaan)\r\n\r\n        var jwt = SharedPrefsUtils.getStringPreference(this@PemeriksaanDetailActivity,\"jwt\",\"\")\r\n        var username = SharedPrefsUtils.getStringPreference(this@PemeriksaanDetailActivity, \"username\",\"\")\r\n        var email = SharedPrefsUtils.getStringPreference(this@PemeriksaanDetailActivity, \"email\",\"\")\r\n        val currentDate = DateTime.now().toString(\"yyyy-MM-dd\")\r\n        val reportId = \"Pemeriksaan\" + DateTime.now().toString(\"yMdHmsSSS\")\r\n        val reportName = \"Pemeriksaan\"\r\n        val reportDescription = \"Pemeriksaan-${pemeriksaan.noDoSmar}-${pemeriksaan.packangings}-${DateTime.now().toString(\"yyyy-MM-dd\")}\"\r\n        val params = ArrayList<ReportParameter>()\r\n        params.add(ReportParameter(\"1\", reportId, \"plant_code_no\", pemeriksaan.planCodeNo, ReportParameter.TEXT ))\r\n        params.add(ReportParameter(\"2\", reportId, \"no_do_smar\", pemeriksaan.noDoSmar, ReportParameter.TEXT ))\r\n        params.add(ReportParameter(\"3\", reportId, \"no_mat_sap\", dataPemeriksaan.noMatSap, ReportParameter.TEXT ))\r\n        params.add(ReportParameter(\"4\", reportId, \"penerima\", pemeriksaan.petugasPenerima, ReportParameter.TEXT ))\r\n        params.add(ReportParameter(\"5\", reportId, \"tanggal\", pemeriksaan.tanggalDiterima, ReportParameter.TEXT ))\r\n        params.add(ReportParameter(\"6\", reportId, \"kurir\", pemeriksaan.namaKurir, ReportParameter.TEXT ))\r\n        params.add(ReportParameter(\"7\", reportId, \"ekspedisi\", pemeriksaan.namaEkspedisi, ReportParameter.TEXT ))\r\n        params.add(ReportParameter(\"8\", reportId, \"quantity\", dataPemeriksaan.qty, ReportParameter.TEXT ))\r\n        params.add(ReportParameter(\"9\", reportId, \"username\", username!!, ReportParameter.TEXT ))\r\n        params.add(ReportParameter(\"10\", reportId, \"email\",email!! , ReportParameter.TEXT ))\r\n        params.add(ReportParameter(\"11\", reportId, \"no_packaging\", pemeriksaan.packangings, ReportParameter.TEXT ))\r\n        params.add(ReportParameter(\"12\", reportId, \"status_name\", \"COMPLAINT\", ReportParameter.TEXT ))\r\n        params.add(ReportParameter(\"13\", reportId, \"sns\", pemeriksaan.packangings, ReportParameter.TEXT ))\r\n        params.add(ReportParameter(\"14\", reportId, \"alasan\", reasonKomplain, ReportParameter.TEXT ))\r\n        params.add(ReportParameter(\"15\", reportId, \"photo_file\", filePathKomplain, ReportParameter.FILE ))\r\n        val reportPenerimaan = GenericReport(reportId, username, reportName, reportDescription, ApiConfig.sendComplaint(), currentDate, 0, 11119209101, params)\r\n        reports.add(reportPenerimaan)\r\n\r\n        val task = TambahReportTask(this, reports)\r\n        task.execute()\r\n\r\n        val iService = Intent(this@PemeriksaanDetailActivity, ReportUploader::class.java)\r\n        startService(iService)\r\n    }\r\n\r\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\r\n        super.onActivityResult(requestCode, resultCode, data)\r\n\r\n        if (resultCode == RESULT_OK && requestCode == cameraRequestRejectGallery){\r\n            val imageUri = data?.data\r\n            val imageStream = contentResolver.openInputStream(imageUri!!)\r\n            val bitmap: Bitmap = BitmapFactory.decodeStream(imageStream)\r\n\r\n            val file_path = StorageUtils.getDirectory(StorageUtils.DIRECTORY_ROOT) +\r\n                    \"/Images\"\r\n            val dir = File(file_path)\r\n            if (!dir.exists()) dir.mkdirs()\r\n            val file = File(dir, \"mims\" + \"picturesFotoReject${UUID.randomUUID()}\" + \".png\")\r\n            val fOut = FileOutputStream(file)\r\n\r\n            bitmap.compress(Bitmap.CompressFormat.PNG, 85, fOut)\r\n            fOut.flush()\r\n            fOut.close()\r\n\r\n            binding.ivDokumentasiReject.setImageBitmap(bitmap)\r\n            filePathReject = file.toString()\r\n\r\n        }else{\r\n            Log.d(\"cancel\", \"cacelPhoto\")\r\n        }\r\n\r\n        if (resultCode == RESULT_OK && requestCode == cameraRequestKomplainGallery){\r\n            val imageUri = data?.data\r\n            val imageStream = contentResolver.openInputStream(imageUri!!)\r\n            val bitmap: Bitmap = BitmapFactory.decodeStream(imageStream)\r\n\r\n            val file_path = StorageUtils.getDirectory(StorageUtils.DIRECTORY_ROOT) +\r\n                    \"/Images\"\r\n            val dir = File(file_path)\r\n            if (!dir.exists()) dir.mkdirs()\r\n            val file = File(dir, \"mims\" + \"picturesFotoKomplain${UUID.randomUUID()}\" + \".png\")\r\n            val fOut = FileOutputStream(file)\r\n\r\n            bitmap.compress(Bitmap.CompressFormat.PNG, 85, fOut)\r\n            fOut.flush()\r\n            fOut.close()\r\n\r\n            binding.ivDokumentasiReject.setImageBitmap(bitmap)\r\n            filePathReject = file.toString()\r\n        }else{\r\n            Log.d(\"cancel\", \"cacelPhoto\")\r\n        }\r\n\r\n        if (resultCode == RESULT_OK && requestCode == cameraRequestReject){\r\n            val bitmap: Bitmap = data?.extras?.get(\"data\") as Bitmap\r\n\r\n            val file_path = StorageUtils.getDirectory(StorageUtils.DIRECTORY_ROOT) +\r\n                    \"/Images\"\r\n            val dir = File(file_path)\r\n            if (!dir.exists()) dir.mkdirs()\r\n            val file = File(dir, \"mims\" + \"picturesFotoReject${UUID.randomUUID()}\" + \".png\")\r\n            val fOut = FileOutputStream(file)\r\n\r\n            bitmap.compress(Bitmap.CompressFormat.PNG, 85, fOut)\r\n            fOut.flush()\r\n            fOut.close()\r\n\r\n            binding.ivDokumentasiReject.setImageBitmap(bitmap)\r\n            filePathReject = file.toString()\r\n\r\n        }else{\r\n            Log.d(\"cancel\", \"cacelPhoto\")\r\n        }\r\n\r\n        if (resultCode == RESULT_OK && requestCode == cameraRequestKomplain){\r\n            val bitmap: Bitmap = data?.extras?.get(\"data\") as Bitmap\r\n\r\n            val file_path = StorageUtils.getDirectory(StorageUtils.DIRECTORY_ROOT) +\r\n                    \"/Images\"\r\n            val dir = File(file_path)\r\n            if (!dir.exists()) dir.mkdirs()\r\n            val file = File(dir, \"mims\" + \"picturesFotoKomplain${UUID.randomUUID()}\" + \".png\")\r\n            val fOut = FileOutputStream(file)\r\n\r\n            bitmap.compress(Bitmap.CompressFormat.PNG, 85, fOut)\r\n            fOut.flush()\r\n            fOut.close()\r\n\r\n            binding.ivDokumentasiKomplain.setImageBitmap(bitmap)\r\n            filePathKomplain = file.toString()\r\n        }else{\r\n            Log.d(\"cancel\", \"cacelPhoto\")\r\n        }\r\n    }\r\n\r\n    private fun submitForm(status: String) {\r\n        val reports = java.util.ArrayList<GenericReport>()\r\n\r\n        data.status = status\r\n        data.isDone = 1\r\n        daoSession.update(data)\r\n\r\n        pemeriksaan.namaKetua = mKetua\r\n        pemeriksaan.namaManager = mManager\r\n        pemeriksaan.namaSekretaris = mSekretaris\r\n        pemeriksaan.anggota = mAnggota\r\n        pemeriksaan.state = 2\r\n        daoSession.update(pemeriksaan)\r\n\r\n        var jwt = SharedPrefsUtils.getStringPreference(this@PemeriksaanDetailActivity,\"jwt\",\"\")\r\n        var username = SharedPrefsUtils.getStringPreference(this@PemeriksaanDetailActivity, \"username\",\"\")\r\n        var email = SharedPrefsUtils.getStringPreference(this@PemeriksaanDetailActivity, \"email\",\"\")\r\n        val currentDate = DateTime.now().toString(\"yyyy-MM-dd\")\r\n        val reportId = \"Pemeriksaan\" + DateTime.now().toString(\"yMdHmsSSS\")\r\n        val reportName = \"Pemeriksaan\"\r\n        val reportDescription = \"Pemeriksaan-${pemeriksaan.noDoSmar}-${pemeriksaan.packangings}-${DateTime.now().toString(\"yyyy-MM-dd\")}\"\r\n        val params = ArrayList<ReportParameter>()\r\n        params.add(ReportParameter(\"1\", reportId, \"plant_code_no\", pemeriksaan.planCodeNo, ReportParameter.TEXT ))\r\n        params.add(ReportParameter(\"2\", reportId, \"no_do_smar\", pemeriksaan.noDoSmar, ReportParameter.TEXT ))\r\n        params.add(ReportParameter(\"3\", reportId, \"no_mat_sap\", dataPemeriksaan.noMatSap, ReportParameter.TEXT ))\r\n        params.add(ReportParameter(\"4\", reportId, \"penerima\", pemeriksaan.petugasPenerima, ReportParameter.TEXT ))\r\n        params.add(ReportParameter(\"5\", reportId, \"tanggal\", pemeriksaan.tanggalDiterima, ReportParameter.TEXT ))\r\n        params.add(ReportParameter(\"6\", reportId, \"kurir\", pemeriksaan.namaKurir, ReportParameter.TEXT ))\r\n        params.add(ReportParameter(\"7\", reportId, \"ekspedisi\", pemeriksaan.namaEkspedisi, ReportParameter.TEXT ))\r\n        params.add(ReportParameter(\"8\", reportId, \"quantity\", dataPemeriksaan.qty, ReportParameter.TEXT ))\r\n        params.add(ReportParameter(\"9\", reportId, \"username\", username!!, ReportParameter.TEXT ))\r\n        params.add(ReportParameter(\"10\", reportId, \"email\",email!! , ReportParameter.TEXT ))\r\n        params.add(ReportParameter(\"11\", reportId, \"no_packaging\", pemeriksaan.packangings, ReportParameter.TEXT ))\r\n        params.add(ReportParameter(\"12\", reportId, \"status_name\", status, ReportParameter.TEXT ))\r\n        params.add(ReportParameter(\"13\", reportId, \"sns\", pemeriksaan.packangings, ReportParameter.TEXT ))\r\n        val reportPenerimaan = GenericReport(reportId, username, reportName, reportDescription, ApiConfig.sendPemeriksaan(), currentDate, 0, 11119209101, params)\r\n        reports.add(reportPenerimaan)\r\n\r\n        val task = TambahReportTask(this, reports)\r\n        task.execute()\r\n\r\n        val iService = Intent(this@PemeriksaanDetailActivity, ReportUploader::class.java)\r\n        startService(iService)\r\n    }\r\n\r\n    private fun validation() {\r\n        with(binding){\r\n            val anggota = edtAnggota.text.toString()\r\n            val ketua = edtKetua.text.toString()\r\n            val manager = edtManager.text.toString()\r\n            val sekretaris = edtSekretaris.text.toString()\r\n\r\n            if (anggota.isNullOrEmpty()){\r\n                Toast.makeText(this@PemeriksaanDetailActivity, \"Silahkan isi semua data field yang di butuhkan\", Toast.LENGTH_SHORT).show()\r\n                return\r\n            }\r\n\r\n            if (ketua.isNullOrEmpty()){\r\n                Toast.makeText(this@PemeriksaanDetailActivity, \"Silahkan isi semua data field yang di butuhkan\", Toast.LENGTH_SHORT).show()\r\n                return\r\n            }\r\n\r\n            if (manager.isNullOrEmpty()){\r\n                Toast.makeText(this@PemeriksaanDetailActivity, \"Silahkan isi semua data field yang di butuhkan\", Toast.LENGTH_SHORT).show()\r\n                return\r\n            }\r\n\r\n            if (sekretaris.isNullOrEmpty()){\r\n                Toast.makeText(this@PemeriksaanDetailActivity, \"Silahkan isi semua data field yang di butuhkan\", Toast.LENGTH_SHORT).show()\r\n                return\r\n            }\r\n\r\n            mAnggota = anggota\r\n            mSekretaris = sekretaris\r\n            mKetua = ketua\r\n            mManager = manager\r\n\r\n            constraintDetail1.visibility = View.GONE\r\n            constraintDetail2.visibility = View.VISIBLE\r\n\r\n        }\r\n    }\r\n\r\n    private fun openScanner() {\r\n        val scan = ScanOptions()\r\n        scan.setDesiredBarcodeFormats(ScanOptions.ALL_CODE_TYPES)\r\n        scan.setCameraId(0)\r\n        scan.setBeepEnabled(true)\r\n        scan.setBarcodeImageEnabled(true)\r\n        scan.captureActivity = CustomScanActivity::class.java\r\n        barcodeLauncher.launch(scan)\r\n    }\r\n\r\n    private val barcodeLauncher = registerForActivityResult(\r\n        ScanContract()\r\n    ) { result: ScanIntentResult ->\r\n        try {\r\n            if (!result.contents.isNullOrEmpty()) {\r\n\r\n                Toast.makeText(this@PemeriksaanDetailActivity, \"Scanning success : ${result.contents}\",Toast.LENGTH_SHORT).show()\r\n            }\r\n        }catch (e: Exception){\r\n            Log.e(\"checkException\", e.toString())\r\n        }\r\n    }\r\n\r\n    override fun setLoading(show: Boolean, title: String, message: String) {\r\n\r\n    }\r\n\r\n    override fun setFinish(result: Boolean, message: String) {\r\n        if (result){\r\n            Toast.makeText(this, message, Toast.LENGTH_LONG).show()\r\n            startActivity(Intent(this@PemeriksaanDetailActivity, PenerimaanActivity::class.java))\r\n            finish()\r\n        }\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/dev/iconpln/mims/ui/pemeriksaan/pemeriksaan_detail/PemeriksaanDetailActivity.kt b/app/src/main/java/dev/iconpln/mims/ui/pemeriksaan/pemeriksaan_detail/PemeriksaanDetailActivity.kt
---- a/app/src/main/java/dev/iconpln/mims/ui/pemeriksaan/pemeriksaan_detail/PemeriksaanDetailActivity.kt	(revision 6e01942d95cef7d02a00aab00432386f5bb65c80)
-+++ b/app/src/main/java/dev/iconpln/mims/ui/pemeriksaan/pemeriksaan_detail/PemeriksaanDetailActivity.kt	(date 1675239655421)
-@@ -279,8 +279,8 @@
-         val task = TambahReportTask(this, reports)
-         task.execute()
- 
--        val iService = Intent(this@PemeriksaanDetailActivity, ReportUploader::class.java)
--        startService(iService)
-+//        val iService = Intent(this@PemeriksaanDetailActivity, ReportUploader::class.java)
-+//        startService(iService)
-     }
- 
-     override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
-@@ -414,8 +414,8 @@
-         val task = TambahReportTask(this, reports)
-         task.execute()
- 
--        val iService = Intent(this@PemeriksaanDetailActivity, ReportUploader::class.java)
--        startService(iService)
-+//        val iService = Intent(this@PemeriksaanDetailActivity, ReportUploader::class.java)
-+//        startService(iService)
-     }
- 
-     private fun validation() {
-Index: app/src/main/java/dev/iconpln/mims/HomeActivity.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package dev.iconpln.mims\r\n\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport androidx.navigation.findNavController\r\nimport androidx.navigation.ui.setupWithNavController\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView\r\nimport dev.iconpln.mims.databinding.ActivityHomeBinding\r\n\r\nclass HomeActivity : AppCompatActivity() {\r\n    private lateinit var binding: ActivityHomeBinding\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        binding = ActivityHomeBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n\r\n        binding.fab1.setOnClickListener {}\r\n\r\n        val navView: BottomNavigationView = binding.navViewPabrikan\r\n\r\n        val navController = findNavController(R.id.nav_host_fragment_activity_bottom_navigation)\r\n        navView.setupWithNavController(navController)\r\n    }\r\n\r\n    companion object {\r\n        private var instance: HomeActivity? = null\r\n        fun getInstance() = instance ?: HomeActivity().also {\r\n            instance = it\r\n        }\r\n\r\n        var data: Any? = null\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/dev/iconpln/mims/HomeActivity.kt b/app/src/main/java/dev/iconpln/mims/HomeActivity.kt
---- a/app/src/main/java/dev/iconpln/mims/HomeActivity.kt	(revision 6e01942d95cef7d02a00aab00432386f5bb65c80)
-+++ b/app/src/main/java/dev/iconpln/mims/HomeActivity.kt	(date 1675246327421)
-@@ -2,18 +2,27 @@
- 
- import androidx.appcompat.app.AppCompatActivity
- import android.os.Bundle
-+import androidx.activity.viewModels
- import androidx.navigation.findNavController
- import androidx.navigation.ui.setupWithNavController
- import com.google.android.material.bottomnavigation.BottomNavigationView
-+import dev.iconpln.mims.data.local.database.DaoSession
- import dev.iconpln.mims.databinding.ActivityHomeBinding
-+import dev.iconpln.mims.ui.pnerimaan.PenerimaanViewModel
- 
- class HomeActivity : AppCompatActivity() {
-     private lateinit var binding: ActivityHomeBinding
-+    private val viewModel: PenerimaanViewModel by viewModels()
-+    private lateinit var daoSession: DaoSession
- 
-     override fun onCreate(savedInstanceState: Bundle?) {
-         super.onCreate(savedInstanceState)
-         binding = ActivityHomeBinding.inflate(layoutInflater)
-         setContentView(binding.root)
-+        daoSession = (application as MyApplication).daoSession!!
-+        val penerimaan = daoSession.tPosPenerimaanDao.queryBuilder().list()
-+
-+        viewModel.getPenerimaan(daoSession,penerimaan)
- 
- 
-         binding.fab1.setOnClickListener {}
-Index: app/src/main/java/dev/iconpln/mims/ui/auth/AuthViewModel.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package dev.iconpln.mims.ui.auth\r\n\r\nimport android.content.Context\r\nimport android.widget.Toast\r\nimport androidx.lifecycle.LiveData\r\nimport androidx.lifecycle.MutableLiveData\r\nimport androidx.lifecycle.ViewModel\r\nimport dev.iconpln.mims.data.local.database.*\r\nimport dev.iconpln.mims.data.remote.response.GenericResponse\r\nimport dev.iconpln.mims.data.remote.response.LoginResponse\r\nimport dev.iconpln.mims.data.remote.service.ApiConfig\r\nimport dev.iconpln.mims.utils.SessionManager\r\nimport kotlinx.coroutines.*\r\n\r\nclass AuthViewModel: ViewModel() {\r\n\r\n    private val _isLoading = MutableLiveData<Boolean>()\r\n    val isLoading: LiveData<Boolean> = _isLoading\r\n\r\n    private val _loginResponse = MutableLiveData<LoginResponse>()\r\n    val loginResponse: LiveData<LoginResponse> = _loginResponse\r\n\r\n    private val _checkOtpForgotPassword = MutableLiveData<GenericResponse>()\r\n    val checkOtpForgotPassword: LiveData<GenericResponse> = _checkOtpForgotPassword\r\n\r\n    private val _changePassword = MutableLiveData<GenericResponse>()\r\n    val changePassword: LiveData<GenericResponse> = _changePassword\r\n\r\n    fun getLogin(context: Context, daoSession: DaoSession, username: String, password: String, device_token: String,\r\n                 mAndroidId: String, mAppVersion: String, mDeviceData: String, mIpAddress: String,\r\n                 androidVersion: Int, dateTimeUtc: Long,session: SessionManager) {\r\n        _isLoading.value = true\r\n        CoroutineScope(Dispatchers.IO).launch {\r\n            val requestBody = mutableMapOf<String, String>()\r\n            requestBody[\"username\"] = username\r\n            requestBody[\"password\"] = password\r\n            requestBody[\"device_token\"] = device_token\r\n            requestBody[\"android_id\"] = mAndroidId\r\n            requestBody[\"app_version\"] = \"1.0.0\"\r\n            requestBody[\"device_data\"] = mDeviceData\r\n            requestBody[\"datetime_utc\"] = dateTimeUtc.toString()\r\n            requestBody[\"ip_address\"] = mIpAddress\r\n            requestBody[\"android_version\"] = androidVersion.toString()\r\n\r\n            val response = ApiConfig.getApiService(context).login(requestBody)\r\n            withContext(Dispatchers.Main){\r\n                if (response.isSuccessful) {\r\n                    try {\r\n                        _isLoading.value = false\r\n                        val loginResult = response.body()\r\n                        _loginResponse.postValue(loginResult!!)\r\n                        session.saveUsernamePassword(username,password)\r\n                        inserToDbLocal(daoSession, loginResult)\r\n\r\n                    }catch (e: Exception){\r\n                        e.printStackTrace()\r\n                    }\r\n                }else {\r\n                    _isLoading.value = false\r\n                    Toast.makeText(context, response.message(), Toast.LENGTH_SHORT).show()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    fun sendOtp(context: Context, username: String) {\r\n        _isLoading.value = true\r\n        CoroutineScope(Dispatchers.IO).launch {\r\n            val requestBody = mutableMapOf<String, String>()\r\n            requestBody[\"username\"] = username\r\n\r\n            val response = ApiConfig.getApiService(context).sendOtp(requestBody)\r\n            withContext(Dispatchers.Main){\r\n                if (response.isSuccessful) {\r\n                    try {\r\n                        _isLoading.value = false\r\n                    }catch (e: Exception){\r\n                        e.printStackTrace()\r\n                    }\r\n                }else {\r\n                    _isLoading.value = false\r\n                    Toast.makeText(context, response.message(), Toast.LENGTH_SHORT).show()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    fun checkOtp(context: Context, username: String,otp: String, androidId: String, deviceData: String) {\r\n        _isLoading.value = true\r\n        CoroutineScope(Dispatchers.IO).launch {\r\n            val requestBody = mutableMapOf<String, String>()\r\n            requestBody[\"username\"] = username\r\n            requestBody[\"otp\"] = otp\r\n            requestBody[\"android_id\"] = androidId\r\n            requestBody[\"device_data\"] = deviceData\r\n\r\n            val response = ApiConfig.getApiService(context).otpValid(requestBody)\r\n            withContext(Dispatchers.Main){\r\n                if (response.isSuccessful) {\r\n                    try {\r\n                        _isLoading.value = false\r\n                        val responses = response.body()\r\n                        _loginResponse.postValue(responses!!)\r\n                    }catch (e: Exception){\r\n                        e.printStackTrace()\r\n                    }\r\n                }else {\r\n                    _isLoading.value = false\r\n                    Toast.makeText(context, response.message(), Toast.LENGTH_SHORT).show()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    fun sendOtpForgotPassword(context: Context, username: String) {\r\n        _isLoading.value = true\r\n        CoroutineScope(Dispatchers.IO).launch {\r\n            val requestBody = mutableMapOf<String, String>()\r\n            requestBody[\"username\"] = username\r\n\r\n            val response = ApiConfig.getApiService(context).getOtpForgotPassword(requestBody)\r\n            withContext(Dispatchers.Main){\r\n                if (response.isSuccessful) {\r\n                    try {\r\n                        _isLoading.value = false\r\n                    }catch (e: Exception){\r\n                        e.printStackTrace()\r\n                    }\r\n                }else {\r\n                    _isLoading.value = false\r\n                    Toast.makeText(context, response.message(), Toast.LENGTH_SHORT).show()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    fun checkOtpForgotPassword(context: Context, username: String,otp: String) {\r\n        _isLoading.value = true\r\n        CoroutineScope(Dispatchers.IO).launch {\r\n            val requestBody = mutableMapOf<String, String>()\r\n            requestBody[\"username\"] = username\r\n            requestBody[\"otp\"] = otp\r\n\r\n            val response = ApiConfig.getApiService(context).otpValidForgotPassword(requestBody)\r\n            withContext(Dispatchers.Main){\r\n                if (response.isSuccessful) {\r\n                    try {\r\n                        _isLoading.value = false\r\n                        val responses = response.body()\r\n                        _checkOtpForgotPassword.postValue(responses!!)\r\n                    }catch (e: Exception){\r\n                        e.printStackTrace()\r\n                    }\r\n                }else {\r\n                    _isLoading.value = false\r\n                    Toast.makeText(context, response.message(), Toast.LENGTH_SHORT).show()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    fun changePassword(context: Context, username: String,password: String) {\r\n        _isLoading.value = true\r\n        CoroutineScope(Dispatchers.IO).launch {\r\n            val requestBody = mutableMapOf<String, String>()\r\n            requestBody[\"username\"] = username\r\n            requestBody[\"new_password\"] = password\r\n\r\n            val response = ApiConfig.getApiService(context).changePassword(requestBody)\r\n            withContext(Dispatchers.Main){\r\n                if (response.isSuccessful) {\r\n                    try {\r\n                        _isLoading.value = false\r\n                        val responses = response.body()\r\n                        _changePassword.postValue(responses!!)\r\n                    }catch (e: Exception){\r\n                        e.printStackTrace()\r\n                    }\r\n                }else {\r\n                    _isLoading.value = false\r\n                    Toast.makeText(context, response.message(), Toast.LENGTH_SHORT).show()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun inserToDbLocal(daoSession: DaoSession, result: LoginResponse) {\r\n        daoSession.tLokasiDao.deleteAll()\r\n        daoSession.tMaterialDao.deleteAll()\r\n        daoSession.tMaterialDetailDao.deleteAll()\r\n        daoSession.tPosDao.deleteAll()\r\n//        daoSession.tPengujianDao.deleteAll()\r\n//        daoSession.tPengujianDetailsDao.deleteAll()\r\n        daoSession.tPosDetailDao.deleteAll()\r\n        daoSession.tMaterialGroupsDao.deleteAll()\r\n        daoSession.tPrivilegeDao.deleteAll()\r\n        daoSession.tPosSnsDao.deleteAll()\r\n\r\n        if (result != null){\r\n            if (result.materialDetails != null){\r\n                val size = result.materialDetails.size\r\n                if (size > 0) {\r\n                    val items = arrayOfNulls<TMaterialDetail>(size)\r\n                    var item: TMaterialDetail\r\n                    for ((i, model) in result.materialDetails.withIndex()){\r\n                        item = TMaterialDetail()\r\n                        item.kdPabrikan = model?.kdPabrikan\r\n                        item.masaGaransi = model?.masaGaransi\r\n                        item.mmc = model?.mmc\r\n                        item.materialId = model?.materialId.toString()\r\n                        item.materialGroup = model?.materialGroup.toString()\r\n                        item.noPackaging = model?.noPackaging.toString()\r\n                        item.noProduksi = model?.noProduksi\r\n                        item.nomorMaterial = model?.nomorMaterial\r\n                        item.nomorSertMaterologi = model?.nomorSertMaterologi\r\n                        item.plant = model?.plant.toString()\r\n                        item.serialNumber = model?.serialNumber\r\n                        item.spesifikasi = model?.spesifikasi\r\n                        item.spln = model?.spln\r\n                        item.storloc = model?.storloc.toString()\r\n                        item.tglProduksi = model?.tglProduksi\r\n                        item.namaKategoriMaterial = model?.namaKategoriMaterial\r\n                        item.tahun = model?.tahun.toString()\r\n                        items[i] = item\r\n                    }\r\n                    daoSession.tMaterialDetailDao.insertInTx(items.toList())\r\n                }\r\n            }\r\n\r\n            if (result.materials != null){\r\n                val size = result.materials.size\r\n                if (size > 0) {\r\n                    val items = arrayOfNulls<TMaterial>(size)\r\n                    var item: TMaterial\r\n                    for ((i, model) in result.materials.withIndex()){\r\n                        item = TMaterial()\r\n                        item.masaGaransi = model?.masaGaransi\r\n                        item.mmc = model?.mmc\r\n                        item.materialId = model?.materialId.toString()\r\n                        item.materialGroup = model?.materialGroup.toString()\r\n                        item.nomorMaterial = model?.nomorMaterial\r\n                        item.nomorSertMaterologi = model?.nomorSertMaterologi\r\n                        item.plant = model?.plant.toString()\r\n                        item.storloc = model?.storloc.toString()\r\n                        item.tglProduksi = model?.tglProduksi\r\n                        item.noProduksi = model?.noProduksi\r\n                        item.kdPabrikan = model?.kdPabrikan\r\n                        item.namaKategoriMaterial = model?.namaKategoriMaterial\r\n                        item.tahun = model?.tahun.toString()\r\n                        items[i] = item\r\n                    }\r\n                    daoSession.tMaterialDao.insertInTx(items.toList())\r\n                }\r\n            }\r\n\r\n            if (result.pos != null){\r\n                val size = result.pos.size\r\n                if (size > 0) {\r\n                    val items = arrayOfNulls<TPos>(size)\r\n                    var item: TPos\r\n                    for ((i, model) in result.pos.withIndex()){\r\n                        item = TPos()\r\n                        item.createdDate = model?.createdDate\r\n                        item.leadTime = model?.leadTime\r\n                        item.storloc = model?.storLoc\r\n                        item.noDoSmar = model?.noDoSmar\r\n                        item.planCodeNo = model?.plantCodeNo\r\n                        item.plantName = model?.plantName\r\n                        item.poMpNo = model?.poMpNo\r\n                        item.poSapNo = model?.poSapNo\r\n                        item.storLoc = model?.storLoc\r\n                        item.tlskNo = model?.tlskNo\r\n                        item.total = model?.total\r\n                        item.kdPabrikan = model?.kdPabrikan\r\n                        item.materialGroup = model?.materialGroup\r\n                        item.namaKategoriMaterial = model?.namaKategoriMaterial\r\n                        item.noDoMims = model?.noDoMims\r\n                        items[i] = item\r\n                    }\r\n                    daoSession.tPosDao.insertInTx(items.toList())\r\n                }\r\n            }\r\n\r\n//            if (result.pengujians != null){\r\n//                val size = result.pengujians.size\r\n//                if (size > 0) {\r\n//                    val items = arrayOfNulls<TPengujian>(size)\r\n//                    var item: TPengujian\r\n//                    for ((i, model) in result.pengujians.withIndex()){\r\n//                        item = TPengujian()\r\n//                        item.kdPabrikan = model?.kdPabrikan\r\n//                        item.namaKategori = model?.namaKategori\r\n//                        item.noPengujian = model?.noPengujian\r\n//                        item.qtyMaterial = model?.qtyMaterial\r\n//                        item.qtySiap = model?.qtySiap\r\n//                        item.statusUji = model?.statusUji\r\n//                        item.tanggalUji = model?.tanggalUji.toString()\r\n//                        item.unit = model?.unit\r\n//                        items[i] = item\r\n//                    }\r\n//                    daoSession.tPengujianDao.insertInTx(items.toList())\r\n//                }\r\n//            }\r\n\r\n//            if (result.pengujianDetails != null){\r\n//                val size = result.pengujianDetails.size\r\n//                if (size > 0) {\r\n//                    val items = arrayOfNulls<TPengujianDetails>(size)\r\n//                    var item: TPengujianDetails\r\n//                    for ((i, model) in result.pengujianDetails.withIndex()){\r\n//                        item = TPengujianDetails()\r\n//                        item.serialNumber = model?.serialNumber\r\n//                        item.namaKategori = model?.namaKategori\r\n//                        item.noPengujian = model?.noPengujian\r\n//                        item.statusUji = model?.statusUji\r\n//                        item.keteranganMaterial = model?.keteranganMaterial\r\n//                        items[i] = item\r\n//                    }\r\n//                    daoSession.tPengujianDetailsDao.insertInTx(items.toList())\r\n//                }\r\n//            }\r\n\r\n            if (result.posDetail != null){\r\n                val size = result.posDetail.size\r\n                if (size > 0) {\r\n                    val items = arrayOfNulls<TPosDetail>(size)\r\n                    var item: TPosDetail\r\n                    for ((i, model) in result.posDetail.withIndex()){\r\n                        item = TPosDetail()\r\n                        item.doStatus = model?.doStatus\r\n                        item.kdPabrikan = model?.kdPabrikan\r\n                        item.noDoSmar = model?.noDoSmar\r\n                        item.noPackaging = model?.noPackaging\r\n                        item.noMatSap = model?.noMatSap\r\n                        item.qty = model?.qty\r\n                        item.leadTime = model?.leadTime.toString()\r\n                        item.noDoMims = model?.noDoMims\r\n                        item.plantCodeNo = model?.plantCodeNo\r\n                        item.poMpNo = model?.poMpNo\r\n                        item.plantName = model?.plantName\r\n                        item.poSapNo = model?.poSapNo\r\n                        item.storLoc = model?.storLoc\r\n                        item.uom = model?.uom\r\n                        item.createdDate = model?.createdDate\r\n                        item.noPemeriksaan = model?.noPemeriksaan.toString()\r\n                        items[i] = item\r\n                    }\r\n                    daoSession.tPosDetailDao.insertInTx(items.toList())\r\n                }\r\n            }\r\n\r\n            if (result.materialGroups != null){\r\n                val size = result.materialGroups.size\r\n                if (size > 0) {\r\n                    val items = arrayOfNulls<TMaterialGroups>(size)\r\n                    var item: TMaterialGroups\r\n                    for ((i, model) in result.materialGroups.withIndex()){\r\n                        item = TMaterialGroups()\r\n                        item.materialGroup = model?.materialGroup\r\n                        item.namaKategoriMaterial = model?.namaKategoriMaterial\r\n                        items[i] = item\r\n                    }\r\n                    daoSession.tMaterialGroupsDao.insertInTx(items.toList())\r\n                }\r\n            }\r\n\r\n            if (result.privilege != null) {\r\n                val size = result.privilege.size\r\n                if (size > 0) {\r\n                    val items = arrayOfNulls<TPrivilege>(size)\r\n                    var item: TPrivilege\r\n                    for ((i, model) in result.privilege.withIndex()){\r\n                        item = TPrivilege()\r\n                        item.isActive = model?.isActive.toString()\r\n                        item.methodId = model?.methodValue\r\n                        item.methodValue = model?.methodValue\r\n                        item.moduleId = model?.moduleId\r\n                        item.roleId = model?.roleId.toString()\r\n                        items[i] = item\r\n                    }\r\n                    daoSession.tPrivilegeDao.insertInTx(items.toList())\r\n                }\r\n            }\r\n\r\n            if (result.posSns != null) {\r\n                val size = result.posSns.size\r\n                if (size > 0) {\r\n                    val items = arrayOfNulls<TPosSns>(size)\r\n                    var item: TPosSns\r\n                    for ((i, model) in result.posSns.withIndex()){\r\n                        item = TPosSns()\r\n                        item.doStatus = model?.doStatus\r\n                        item.kdPabrikan = model?.kdPabrikan\r\n                        item.masaGaransi = model?.masaGaransi\r\n                        item.mmc = model?.mmc\r\n                        item.materialId = model?.materialId\r\n                        item.namaKategoriMaterial = model?.namaKategoriMaterial\r\n                        item.noDoSmar = model?.noDoSmar\r\n                        item.noMatSap = model?.noMatSap\r\n                        item.noProduksi = model?.noProduksi\r\n                        item.noSerial = model?.noSerial\r\n                        item.noSertMeterologi = model?.nomorSertMaterologi\r\n                        item.plant = model?.plant\r\n                        item.spesifikasi = model?.spesifikasi\r\n                        item.spln = model?.spln\r\n                        item.status = model?.status.toString()\r\n                        item.storLoc = model?.storloc\r\n                        item.tglProduksi = model?.tglProduksi\r\n\r\n                        items[i] = item\r\n                    }\r\n                    daoSession.tPosSnsDao.insertInTx(items.toList())\r\n                }\r\n            }\r\n\r\n            if (result.lokasis != null) {\r\n                val size = result.lokasis.size\r\n                if (size > 0) {\r\n                    val items = arrayOfNulls<TLokasi>(size)\r\n                    var item: TLokasi\r\n                    for ((i, model) in result.lokasis.withIndex()){\r\n                        item = TLokasi()\r\n                        item.noDoSns = model?.noDoMims\r\n                        item.ket = model?.ket\r\n                        item.updateDate = model?.updatedDate\r\n\r\n                        items[i] = item\r\n                    }\r\n                    daoSession.tLokasiDao.insertInTx(items.toList())\r\n                }\r\n            }\r\n        }\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/dev/iconpln/mims/ui/auth/AuthViewModel.kt b/app/src/main/java/dev/iconpln/mims/ui/auth/AuthViewModel.kt
---- a/app/src/main/java/dev/iconpln/mims/ui/auth/AuthViewModel.kt	(revision 6e01942d95cef7d02a00aab00432386f5bb65c80)
-+++ b/app/src/main/java/dev/iconpln/mims/ui/auth/AuthViewModel.kt	(date 1675236765938)
-@@ -195,6 +195,10 @@
-         daoSession.tMaterialGroupsDao.deleteAll()
-         daoSession.tPrivilegeDao.deleteAll()
-         daoSession.tPosSnsDao.deleteAll()
-+        daoSession.tPemeriksaanDao.deleteAll()
-+        daoSession.tPemeriksaanDetailDao.deleteAll()
-+        daoSession.tPosDetailPenerimaanDao.deleteAll()
-+        daoSession.tPosPenerimaanDao.deleteAll()
- 
-         if (result != null){
-             if (result.materialDetails != null){
