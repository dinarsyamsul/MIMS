package dev.iconpln.mims.data.local.database;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "TPOS_SNS".
*/
public class TPosSnsDao extends AbstractDao<TPosSns, Long> {

    public static final String TABLENAME = "TPOS_SNS";

    /**
     * Properties of entity TPosSns.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property NoMatSap = new Property(1, String.class, "noMatSap", false, "NO_MAT_SAP");
        public final static Property Mmc = new Property(2, String.class, "Mmc", false, "MMC");
        public final static Property MaterialGroup = new Property(3, String.class, "MaterialGroup", false, "MATERIAL_GROUP");
        public final static Property TglProduksi = new Property(4, String.class, "TglProduksi", false, "TGL_PRODUKSI");
        public final static Property KdPabrikan = new Property(5, String.class, "KdPabrikan", false, "KD_PABRIKAN");
        public final static Property NoSertMeterologi = new Property(6, String.class, "NoSertMeterologi", false, "NO_SERT_METEROLOGI");
        public final static Property Spln = new Property(7, String.class, "Spln", false, "SPLN");
        public final static Property NoProduksi = new Property(8, String.class, "NoProduksi", false, "NO_PRODUKSI");
        public final static Property StorLoc = new Property(9, String.class, "StorLoc", false, "STOR_LOC");
        public final static Property NamaKategoriMaterial = new Property(10, String.class, "NamaKategoriMaterial", false, "NAMA_KATEGORI_MATERIAL");
        public final static Property NoSerial = new Property(11, String.class, "NoSerial", false, "NO_SERIAL");
        public final static Property NoDoSmar = new Property(12, String.class, "NoDoSmar", false, "NO_DO_SMAR");
        public final static Property Spesifikasi = new Property(13, String.class, "Spesifikasi", false, "SPESIFIKASI");
        public final static Property Plant = new Property(14, String.class, "Plant", false, "PLANT");
        public final static Property MaterialId = new Property(15, String.class, "MaterialId", false, "MATERIAL_ID");
        public final static Property MasaGaransi = new Property(16, String.class, "MasaGaransi", false, "MASA_GARANSI");
        public final static Property DoStatus = new Property(17, String.class, "DoStatus", false, "DO_STATUS");
        public final static Property NoPackaging = new Property(18, String.class, "NoPackaging", false, "NO_PACKAGING");
        public final static Property Status = new Property(19, String.class, "Status", false, "STATUS");
    }


    public TPosSnsDao(DaoConfig config) {
        super(config);
    }
    
    public TPosSnsDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"TPOS_SNS\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"NO_MAT_SAP\" TEXT," + // 1: noMatSap
                "\"MMC\" TEXT," + // 2: Mmc
                "\"MATERIAL_GROUP\" TEXT," + // 3: MaterialGroup
                "\"TGL_PRODUKSI\" TEXT," + // 4: TglProduksi
                "\"KD_PABRIKAN\" TEXT," + // 5: KdPabrikan
                "\"NO_SERT_METEROLOGI\" TEXT," + // 6: NoSertMeterologi
                "\"SPLN\" TEXT," + // 7: Spln
                "\"NO_PRODUKSI\" TEXT," + // 8: NoProduksi
                "\"STOR_LOC\" TEXT," + // 9: StorLoc
                "\"NAMA_KATEGORI_MATERIAL\" TEXT," + // 10: NamaKategoriMaterial
                "\"NO_SERIAL\" TEXT," + // 11: NoSerial
                "\"NO_DO_SMAR\" TEXT," + // 12: NoDoSmar
                "\"SPESIFIKASI\" TEXT," + // 13: Spesifikasi
                "\"PLANT\" TEXT," + // 14: Plant
                "\"MATERIAL_ID\" TEXT," + // 15: MaterialId
                "\"MASA_GARANSI\" TEXT," + // 16: MasaGaransi
                "\"DO_STATUS\" TEXT," + // 17: DoStatus
                "\"NO_PACKAGING\" TEXT," + // 18: NoPackaging
                "\"STATUS\" TEXT);"); // 19: Status
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"TPOS_SNS\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, TPosSns entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String noMatSap = entity.getNoMatSap();
        if (noMatSap != null) {
            stmt.bindString(2, noMatSap);
        }
 
        String Mmc = entity.getMmc();
        if (Mmc != null) {
            stmt.bindString(3, Mmc);
        }
 
        String MaterialGroup = entity.getMaterialGroup();
        if (MaterialGroup != null) {
            stmt.bindString(4, MaterialGroup);
        }
 
        String TglProduksi = entity.getTglProduksi();
        if (TglProduksi != null) {
            stmt.bindString(5, TglProduksi);
        }
 
        String KdPabrikan = entity.getKdPabrikan();
        if (KdPabrikan != null) {
            stmt.bindString(6, KdPabrikan);
        }
 
        String NoSertMeterologi = entity.getNoSertMeterologi();
        if (NoSertMeterologi != null) {
            stmt.bindString(7, NoSertMeterologi);
        }
 
        String Spln = entity.getSpln();
        if (Spln != null) {
            stmt.bindString(8, Spln);
        }
 
        String NoProduksi = entity.getNoProduksi();
        if (NoProduksi != null) {
            stmt.bindString(9, NoProduksi);
        }
 
        String StorLoc = entity.getStorLoc();
        if (StorLoc != null) {
            stmt.bindString(10, StorLoc);
        }
 
        String NamaKategoriMaterial = entity.getNamaKategoriMaterial();
        if (NamaKategoriMaterial != null) {
            stmt.bindString(11, NamaKategoriMaterial);
        }
 
        String NoSerial = entity.getNoSerial();
        if (NoSerial != null) {
            stmt.bindString(12, NoSerial);
        }
 
        String NoDoSmar = entity.getNoDoSmar();
        if (NoDoSmar != null) {
            stmt.bindString(13, NoDoSmar);
        }
 
        String Spesifikasi = entity.getSpesifikasi();
        if (Spesifikasi != null) {
            stmt.bindString(14, Spesifikasi);
        }
 
        String Plant = entity.getPlant();
        if (Plant != null) {
            stmt.bindString(15, Plant);
        }
 
        String MaterialId = entity.getMaterialId();
        if (MaterialId != null) {
            stmt.bindString(16, MaterialId);
        }
 
        String MasaGaransi = entity.getMasaGaransi();
        if (MasaGaransi != null) {
            stmt.bindString(17, MasaGaransi);
        }
 
        String DoStatus = entity.getDoStatus();
        if (DoStatus != null) {
            stmt.bindString(18, DoStatus);
        }
 
        String NoPackaging = entity.getNoPackaging();
        if (NoPackaging != null) {
            stmt.bindString(19, NoPackaging);
        }
 
        String Status = entity.getStatus();
        if (Status != null) {
            stmt.bindString(20, Status);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, TPosSns entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String noMatSap = entity.getNoMatSap();
        if (noMatSap != null) {
            stmt.bindString(2, noMatSap);
        }
 
        String Mmc = entity.getMmc();
        if (Mmc != null) {
            stmt.bindString(3, Mmc);
        }
 
        String MaterialGroup = entity.getMaterialGroup();
        if (MaterialGroup != null) {
            stmt.bindString(4, MaterialGroup);
        }
 
        String TglProduksi = entity.getTglProduksi();
        if (TglProduksi != null) {
            stmt.bindString(5, TglProduksi);
        }
 
        String KdPabrikan = entity.getKdPabrikan();
        if (KdPabrikan != null) {
            stmt.bindString(6, KdPabrikan);
        }
 
        String NoSertMeterologi = entity.getNoSertMeterologi();
        if (NoSertMeterologi != null) {
            stmt.bindString(7, NoSertMeterologi);
        }
 
        String Spln = entity.getSpln();
        if (Spln != null) {
            stmt.bindString(8, Spln);
        }
 
        String NoProduksi = entity.getNoProduksi();
        if (NoProduksi != null) {
            stmt.bindString(9, NoProduksi);
        }
 
        String StorLoc = entity.getStorLoc();
        if (StorLoc != null) {
            stmt.bindString(10, StorLoc);
        }
 
        String NamaKategoriMaterial = entity.getNamaKategoriMaterial();
        if (NamaKategoriMaterial != null) {
            stmt.bindString(11, NamaKategoriMaterial);
        }
 
        String NoSerial = entity.getNoSerial();
        if (NoSerial != null) {
            stmt.bindString(12, NoSerial);
        }
 
        String NoDoSmar = entity.getNoDoSmar();
        if (NoDoSmar != null) {
            stmt.bindString(13, NoDoSmar);
        }
 
        String Spesifikasi = entity.getSpesifikasi();
        if (Spesifikasi != null) {
            stmt.bindString(14, Spesifikasi);
        }
 
        String Plant = entity.getPlant();
        if (Plant != null) {
            stmt.bindString(15, Plant);
        }
 
        String MaterialId = entity.getMaterialId();
        if (MaterialId != null) {
            stmt.bindString(16, MaterialId);
        }
 
        String MasaGaransi = entity.getMasaGaransi();
        if (MasaGaransi != null) {
            stmt.bindString(17, MasaGaransi);
        }
 
        String DoStatus = entity.getDoStatus();
        if (DoStatus != null) {
            stmt.bindString(18, DoStatus);
        }
 
        String NoPackaging = entity.getNoPackaging();
        if (NoPackaging != null) {
            stmt.bindString(19, NoPackaging);
        }
 
        String Status = entity.getStatus();
        if (Status != null) {
            stmt.bindString(20, Status);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public TPosSns readEntity(Cursor cursor, int offset) {
        TPosSns entity = new TPosSns( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // noMatSap
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // Mmc
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // MaterialGroup
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // TglProduksi
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // KdPabrikan
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // NoSertMeterologi
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // Spln
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // NoProduksi
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // StorLoc
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // NamaKategoriMaterial
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // NoSerial
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // NoDoSmar
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // Spesifikasi
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // Plant
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // MaterialId
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // MasaGaransi
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // DoStatus
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // NoPackaging
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19) // Status
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, TPosSns entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setNoMatSap(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setMmc(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setMaterialGroup(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setTglProduksi(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setKdPabrikan(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setNoSertMeterologi(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setSpln(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setNoProduksi(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setStorLoc(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setNamaKategoriMaterial(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setNoSerial(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setNoDoSmar(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setSpesifikasi(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setPlant(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setMaterialId(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setMasaGaransi(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setDoStatus(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setNoPackaging(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setStatus(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(TPosSns entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(TPosSns entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(TPosSns entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
