package dev.iconpln.mims.data.local.database;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "TPOS".
*/
public class TPosDao extends AbstractDao<TPos, Long> {

    public static final String TABLENAME = "TPOS";

    /**
     * Properties of entity TPos.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property StorLoc = new Property(1, String.class, "StorLoc", false, "STOR_LOC");
        public final static Property Total = new Property(2, String.class, "Total", false, "TOTAL");
        public final static Property TlskNo = new Property(3, String.class, "TlskNo", false, "TLSK_NO");
        public final static Property PoSapNo = new Property(4, String.class, "PoSapNo", false, "PO_SAP_NO");
        public final static Property PoMpNo = new Property(5, String.class, "PoMpNo", false, "PO_MP_NO");
        public final static Property NoDoSmar = new Property(6, String.class, "NoDoSmar", false, "NO_DO_SMAR");
        public final static Property LeadTime = new Property(7, Integer.class, "LeadTime", false, "LEAD_TIME");
        public final static Property Storloc = new Property(8, String.class, "Storloc", false, "STORLOC");
        public final static Property CreatedDate = new Property(9, String.class, "CreatedDate", false, "CREATED_DATE");
        public final static Property PlanCodeNo = new Property(10, String.class, "PlanCodeNo", false, "PLAN_CODE_NO");
        public final static Property PlantName = new Property(11, String.class, "PlantName", false, "PLANT_NAME");
        public final static Property PoDate = new Property(12, String.class, "PoDate", false, "PO_DATE");
        public final static Property NoDoMims = new Property(13, String.class, "NoDoMims", false, "NO_DO_MIMS");
        public final static Property DoStatus = new Property(14, String.class, "DoStatus", false, "DO_STATUS");
        public final static Property Expeditions = new Property(15, String.class, "Expeditions", false, "EXPEDITIONS");
        public final static Property KodeStatusDoMims = new Property(16, String.class, "KodeStatusDoMims", false, "KODE_STATUS_DO_MIMS");
        public final static Property CourierPersonName = new Property(17, String.class, "CourierPersonName", false, "COURIER_PERSON_NAME");
        public final static Property KdPabrikan = new Property(18, String.class, "KdPabrikan", false, "KD_PABRIKAN");
        public final static Property MaterialGroup = new Property(19, String.class, "MaterialGroup", false, "MATERIAL_GROUP");
        public final static Property NamaKategoriMaterial = new Property(20, String.class, "NamaKategoriMaterial", false, "NAMA_KATEGORI_MATERIAL");
        public final static Property PetugasPenerima = new Property(21, String.class, "PetugasPenerima", false, "PETUGAS_PENERIMA");
        public final static Property TglDiterima = new Property(22, String.class, "TglDiterima", false, "TGL_DITERIMA");
        public final static Property KurirPengantar = new Property(23, String.class, "KurirPengantar", false, "KURIR_PENGANTAR");
        public final static Property SudahBisaRating = new Property(24, Boolean.class, "SudahBisaRating", false, "SUDAH_BISA_RATING");
        public final static Property DoLineItem = new Property(25, String.class, "DoLineItem", false, "DO_LINE_ITEM");
        public final static Property RatingResponse = new Property(26, String.class, "RatingResponse", false, "RATING_RESPONSE");
        public final static Property RatingQuality = new Property(27, String.class, "RatingQuality", false, "RATING_QUALITY");
        public final static Property RatingDelivery = new Property(28, String.class, "RatingDelivery", false, "RATING_DELIVERY");
        public final static Property StatusPemeriksaan = new Property(29, String.class, "StatusPemeriksaan", false, "STATUS_PEMERIKSAAN");
        public final static Property StatusPenerimaan = new Property(30, String.class, "StatusPenerimaan", false, "STATUS_PENERIMAAN");
        public final static Property IsBabg = new Property(31, Boolean.class, "IsBabg", false, "IS_BABG");
        public final static Property IsBabgConfirm = new Property(32, Boolean.class, "IsBabgConfirm", false, "IS_BABG_CONFIRM");
        public final static Property SlaIntegrasiSap = new Property(33, Boolean.class, "SlaIntegrasiSap", false, "SLA_INTEGRASI_SAP");
        public final static Property Eta = new Property(34, String.class, "Eta", false, "ETA");
        public final static Property Etd = new Property(35, String.class, "Etd", false, "ETD");
    }


    public TPosDao(DaoConfig config) {
        super(config);
    }
    
    public TPosDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"TPOS\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"STOR_LOC\" TEXT," + // 1: StorLoc
                "\"TOTAL\" TEXT," + // 2: Total
                "\"TLSK_NO\" TEXT," + // 3: TlskNo
                "\"PO_SAP_NO\" TEXT," + // 4: PoSapNo
                "\"PO_MP_NO\" TEXT," + // 5: PoMpNo
                "\"NO_DO_SMAR\" TEXT," + // 6: NoDoSmar
                "\"LEAD_TIME\" INTEGER," + // 7: LeadTime
                "\"STORLOC\" TEXT," + // 8: Storloc
                "\"CREATED_DATE\" TEXT," + // 9: CreatedDate
                "\"PLAN_CODE_NO\" TEXT," + // 10: PlanCodeNo
                "\"PLANT_NAME\" TEXT," + // 11: PlantName
                "\"PO_DATE\" TEXT," + // 12: PoDate
                "\"NO_DO_MIMS\" TEXT," + // 13: NoDoMims
                "\"DO_STATUS\" TEXT," + // 14: DoStatus
                "\"EXPEDITIONS\" TEXT," + // 15: Expeditions
                "\"KODE_STATUS_DO_MIMS\" TEXT," + // 16: KodeStatusDoMims
                "\"COURIER_PERSON_NAME\" TEXT," + // 17: CourierPersonName
                "\"KD_PABRIKAN\" TEXT," + // 18: KdPabrikan
                "\"MATERIAL_GROUP\" TEXT," + // 19: MaterialGroup
                "\"NAMA_KATEGORI_MATERIAL\" TEXT," + // 20: NamaKategoriMaterial
                "\"PETUGAS_PENERIMA\" TEXT," + // 21: PetugasPenerima
                "\"TGL_DITERIMA\" TEXT," + // 22: TglDiterima
                "\"KURIR_PENGANTAR\" TEXT," + // 23: KurirPengantar
                "\"SUDAH_BISA_RATING\" INTEGER," + // 24: SudahBisaRating
                "\"DO_LINE_ITEM\" TEXT," + // 25: DoLineItem
                "\"RATING_RESPONSE\" TEXT," + // 26: RatingResponse
                "\"RATING_QUALITY\" TEXT," + // 27: RatingQuality
                "\"RATING_DELIVERY\" TEXT," + // 28: RatingDelivery
                "\"STATUS_PEMERIKSAAN\" TEXT," + // 29: StatusPemeriksaan
                "\"STATUS_PENERIMAAN\" TEXT," + // 30: StatusPenerimaan
                "\"IS_BABG\" INTEGER," + // 31: IsBabg
                "\"IS_BABG_CONFIRM\" INTEGER," + // 32: IsBabgConfirm
                "\"SLA_INTEGRASI_SAP\" INTEGER," + // 33: SlaIntegrasiSap
                "\"ETA\" TEXT," + // 34: Eta
                "\"ETD\" TEXT);"); // 35: Etd
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"TPOS\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, TPos entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String StorLoc = entity.getStorLoc();
        if (StorLoc != null) {
            stmt.bindString(2, StorLoc);
        }
 
        String Total = entity.getTotal();
        if (Total != null) {
            stmt.bindString(3, Total);
        }
 
        String TlskNo = entity.getTlskNo();
        if (TlskNo != null) {
            stmt.bindString(4, TlskNo);
        }
 
        String PoSapNo = entity.getPoSapNo();
        if (PoSapNo != null) {
            stmt.bindString(5, PoSapNo);
        }
 
        String PoMpNo = entity.getPoMpNo();
        if (PoMpNo != null) {
            stmt.bindString(6, PoMpNo);
        }
 
        String NoDoSmar = entity.getNoDoSmar();
        if (NoDoSmar != null) {
            stmt.bindString(7, NoDoSmar);
        }
 
        Integer LeadTime = entity.getLeadTime();
        if (LeadTime != null) {
            stmt.bindLong(8, LeadTime);
        }
 
        String Storloc = entity.getStorloc();
        if (Storloc != null) {
            stmt.bindString(9, Storloc);
        }
 
        String CreatedDate = entity.getCreatedDate();
        if (CreatedDate != null) {
            stmt.bindString(10, CreatedDate);
        }
 
        String PlanCodeNo = entity.getPlanCodeNo();
        if (PlanCodeNo != null) {
            stmt.bindString(11, PlanCodeNo);
        }
 
        String PlantName = entity.getPlantName();
        if (PlantName != null) {
            stmt.bindString(12, PlantName);
        }
 
        String PoDate = entity.getPoDate();
        if (PoDate != null) {
            stmt.bindString(13, PoDate);
        }
 
        String NoDoMims = entity.getNoDoMims();
        if (NoDoMims != null) {
            stmt.bindString(14, NoDoMims);
        }
 
        String DoStatus = entity.getDoStatus();
        if (DoStatus != null) {
            stmt.bindString(15, DoStatus);
        }
 
        String Expeditions = entity.getExpeditions();
        if (Expeditions != null) {
            stmt.bindString(16, Expeditions);
        }
 
        String KodeStatusDoMims = entity.getKodeStatusDoMims();
        if (KodeStatusDoMims != null) {
            stmt.bindString(17, KodeStatusDoMims);
        }
 
        String CourierPersonName = entity.getCourierPersonName();
        if (CourierPersonName != null) {
            stmt.bindString(18, CourierPersonName);
        }
 
        String KdPabrikan = entity.getKdPabrikan();
        if (KdPabrikan != null) {
            stmt.bindString(19, KdPabrikan);
        }
 
        String MaterialGroup = entity.getMaterialGroup();
        if (MaterialGroup != null) {
            stmt.bindString(20, MaterialGroup);
        }
 
        String NamaKategoriMaterial = entity.getNamaKategoriMaterial();
        if (NamaKategoriMaterial != null) {
            stmt.bindString(21, NamaKategoriMaterial);
        }
 
        String PetugasPenerima = entity.getPetugasPenerima();
        if (PetugasPenerima != null) {
            stmt.bindString(22, PetugasPenerima);
        }
 
        String TglDiterima = entity.getTglDiterima();
        if (TglDiterima != null) {
            stmt.bindString(23, TglDiterima);
        }
 
        String KurirPengantar = entity.getKurirPengantar();
        if (KurirPengantar != null) {
            stmt.bindString(24, KurirPengantar);
        }
 
        Boolean SudahBisaRating = entity.getSudahBisaRating();
        if (SudahBisaRating != null) {
            stmt.bindLong(25, SudahBisaRating ? 1L: 0L);
        }
 
        String DoLineItem = entity.getDoLineItem();
        if (DoLineItem != null) {
            stmt.bindString(26, DoLineItem);
        }
 
        String RatingResponse = entity.getRatingResponse();
        if (RatingResponse != null) {
            stmt.bindString(27, RatingResponse);
        }
 
        String RatingQuality = entity.getRatingQuality();
        if (RatingQuality != null) {
            stmt.bindString(28, RatingQuality);
        }
 
        String RatingDelivery = entity.getRatingDelivery();
        if (RatingDelivery != null) {
            stmt.bindString(29, RatingDelivery);
        }
 
        String StatusPemeriksaan = entity.getStatusPemeriksaan();
        if (StatusPemeriksaan != null) {
            stmt.bindString(30, StatusPemeriksaan);
        }
 
        String StatusPenerimaan = entity.getStatusPenerimaan();
        if (StatusPenerimaan != null) {
            stmt.bindString(31, StatusPenerimaan);
        }
 
        Boolean IsBabg = entity.getIsBabg();
        if (IsBabg != null) {
            stmt.bindLong(32, IsBabg ? 1L: 0L);
        }
 
        Boolean IsBabgConfirm = entity.getIsBabgConfirm();
        if (IsBabgConfirm != null) {
            stmt.bindLong(33, IsBabgConfirm ? 1L: 0L);
        }
 
        Boolean SlaIntegrasiSap = entity.getSlaIntegrasiSap();
        if (SlaIntegrasiSap != null) {
            stmt.bindLong(34, SlaIntegrasiSap ? 1L: 0L);
        }
 
        String Eta = entity.getEta();
        if (Eta != null) {
            stmt.bindString(35, Eta);
        }
 
        String Etd = entity.getEtd();
        if (Etd != null) {
            stmt.bindString(36, Etd);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, TPos entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String StorLoc = entity.getStorLoc();
        if (StorLoc != null) {
            stmt.bindString(2, StorLoc);
        }
 
        String Total = entity.getTotal();
        if (Total != null) {
            stmt.bindString(3, Total);
        }
 
        String TlskNo = entity.getTlskNo();
        if (TlskNo != null) {
            stmt.bindString(4, TlskNo);
        }
 
        String PoSapNo = entity.getPoSapNo();
        if (PoSapNo != null) {
            stmt.bindString(5, PoSapNo);
        }
 
        String PoMpNo = entity.getPoMpNo();
        if (PoMpNo != null) {
            stmt.bindString(6, PoMpNo);
        }
 
        String NoDoSmar = entity.getNoDoSmar();
        if (NoDoSmar != null) {
            stmt.bindString(7, NoDoSmar);
        }
 
        Integer LeadTime = entity.getLeadTime();
        if (LeadTime != null) {
            stmt.bindLong(8, LeadTime);
        }
 
        String Storloc = entity.getStorloc();
        if (Storloc != null) {
            stmt.bindString(9, Storloc);
        }
 
        String CreatedDate = entity.getCreatedDate();
        if (CreatedDate != null) {
            stmt.bindString(10, CreatedDate);
        }
 
        String PlanCodeNo = entity.getPlanCodeNo();
        if (PlanCodeNo != null) {
            stmt.bindString(11, PlanCodeNo);
        }
 
        String PlantName = entity.getPlantName();
        if (PlantName != null) {
            stmt.bindString(12, PlantName);
        }
 
        String PoDate = entity.getPoDate();
        if (PoDate != null) {
            stmt.bindString(13, PoDate);
        }
 
        String NoDoMims = entity.getNoDoMims();
        if (NoDoMims != null) {
            stmt.bindString(14, NoDoMims);
        }
 
        String DoStatus = entity.getDoStatus();
        if (DoStatus != null) {
            stmt.bindString(15, DoStatus);
        }
 
        String Expeditions = entity.getExpeditions();
        if (Expeditions != null) {
            stmt.bindString(16, Expeditions);
        }
 
        String KodeStatusDoMims = entity.getKodeStatusDoMims();
        if (KodeStatusDoMims != null) {
            stmt.bindString(17, KodeStatusDoMims);
        }
 
        String CourierPersonName = entity.getCourierPersonName();
        if (CourierPersonName != null) {
            stmt.bindString(18, CourierPersonName);
        }
 
        String KdPabrikan = entity.getKdPabrikan();
        if (KdPabrikan != null) {
            stmt.bindString(19, KdPabrikan);
        }
 
        String MaterialGroup = entity.getMaterialGroup();
        if (MaterialGroup != null) {
            stmt.bindString(20, MaterialGroup);
        }
 
        String NamaKategoriMaterial = entity.getNamaKategoriMaterial();
        if (NamaKategoriMaterial != null) {
            stmt.bindString(21, NamaKategoriMaterial);
        }
 
        String PetugasPenerima = entity.getPetugasPenerima();
        if (PetugasPenerima != null) {
            stmt.bindString(22, PetugasPenerima);
        }
 
        String TglDiterima = entity.getTglDiterima();
        if (TglDiterima != null) {
            stmt.bindString(23, TglDiterima);
        }
 
        String KurirPengantar = entity.getKurirPengantar();
        if (KurirPengantar != null) {
            stmt.bindString(24, KurirPengantar);
        }
 
        Boolean SudahBisaRating = entity.getSudahBisaRating();
        if (SudahBisaRating != null) {
            stmt.bindLong(25, SudahBisaRating ? 1L: 0L);
        }
 
        String DoLineItem = entity.getDoLineItem();
        if (DoLineItem != null) {
            stmt.bindString(26, DoLineItem);
        }
 
        String RatingResponse = entity.getRatingResponse();
        if (RatingResponse != null) {
            stmt.bindString(27, RatingResponse);
        }
 
        String RatingQuality = entity.getRatingQuality();
        if (RatingQuality != null) {
            stmt.bindString(28, RatingQuality);
        }
 
        String RatingDelivery = entity.getRatingDelivery();
        if (RatingDelivery != null) {
            stmt.bindString(29, RatingDelivery);
        }
 
        String StatusPemeriksaan = entity.getStatusPemeriksaan();
        if (StatusPemeriksaan != null) {
            stmt.bindString(30, StatusPemeriksaan);
        }
 
        String StatusPenerimaan = entity.getStatusPenerimaan();
        if (StatusPenerimaan != null) {
            stmt.bindString(31, StatusPenerimaan);
        }
 
        Boolean IsBabg = entity.getIsBabg();
        if (IsBabg != null) {
            stmt.bindLong(32, IsBabg ? 1L: 0L);
        }
 
        Boolean IsBabgConfirm = entity.getIsBabgConfirm();
        if (IsBabgConfirm != null) {
            stmt.bindLong(33, IsBabgConfirm ? 1L: 0L);
        }
 
        Boolean SlaIntegrasiSap = entity.getSlaIntegrasiSap();
        if (SlaIntegrasiSap != null) {
            stmt.bindLong(34, SlaIntegrasiSap ? 1L: 0L);
        }
 
        String Eta = entity.getEta();
        if (Eta != null) {
            stmt.bindString(35, Eta);
        }
 
        String Etd = entity.getEtd();
        if (Etd != null) {
            stmt.bindString(36, Etd);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public TPos readEntity(Cursor cursor, int offset) {
        TPos entity = new TPos( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // StorLoc
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // Total
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // TlskNo
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // PoSapNo
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // PoMpNo
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // NoDoSmar
            cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7), // LeadTime
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // Storloc
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // CreatedDate
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // PlanCodeNo
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // PlantName
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // PoDate
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // NoDoMims
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // DoStatus
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // Expeditions
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // KodeStatusDoMims
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // CourierPersonName
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // KdPabrikan
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // MaterialGroup
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // NamaKategoriMaterial
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // PetugasPenerima
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // TglDiterima
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // KurirPengantar
            cursor.isNull(offset + 24) ? null : cursor.getShort(offset + 24) != 0, // SudahBisaRating
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // DoLineItem
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // RatingResponse
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // RatingQuality
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // RatingDelivery
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // StatusPemeriksaan
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // StatusPenerimaan
            cursor.isNull(offset + 31) ? null : cursor.getShort(offset + 31) != 0, // IsBabg
            cursor.isNull(offset + 32) ? null : cursor.getShort(offset + 32) != 0, // IsBabgConfirm
            cursor.isNull(offset + 33) ? null : cursor.getShort(offset + 33) != 0, // SlaIntegrasiSap
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // Eta
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35) // Etd
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, TPos entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setStorLoc(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setTotal(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setTlskNo(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setPoSapNo(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setPoMpNo(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setNoDoSmar(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setLeadTime(cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7));
        entity.setStorloc(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setCreatedDate(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setPlanCodeNo(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setPlantName(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setPoDate(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setNoDoMims(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setDoStatus(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setExpeditions(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setKodeStatusDoMims(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setCourierPersonName(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setKdPabrikan(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setMaterialGroup(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setNamaKategoriMaterial(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setPetugasPenerima(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setTglDiterima(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setKurirPengantar(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setSudahBisaRating(cursor.isNull(offset + 24) ? null : cursor.getShort(offset + 24) != 0);
        entity.setDoLineItem(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setRatingResponse(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setRatingQuality(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setRatingDelivery(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setStatusPemeriksaan(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setStatusPenerimaan(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setIsBabg(cursor.isNull(offset + 31) ? null : cursor.getShort(offset + 31) != 0);
        entity.setIsBabgConfirm(cursor.isNull(offset + 32) ? null : cursor.getShort(offset + 32) != 0);
        entity.setSlaIntegrasiSap(cursor.isNull(offset + 33) ? null : cursor.getShort(offset + 33) != 0);
        entity.setEta(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setEtd(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(TPos entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(TPos entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(TPos entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
